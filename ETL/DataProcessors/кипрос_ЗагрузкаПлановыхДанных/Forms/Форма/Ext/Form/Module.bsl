
&НаКлиенте
Процедура Команда1(Команда)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог; 
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда				
		
		ЗагрузитьФайл(Диалог.ПолноеИмяФайла);
		//АдресВХ = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла));		
		//ОбработатьФайлНаСервере(АдресВХ);
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьФайл(ИмяФайла)
	Макет = Новый ТабличныйДокумент;
	Макет.Прочитать(ИмяФайла,СпособЧтенияЗначенийТабличногоДокумента.Текст);
	//Макет = Обработки.авПроверкаОтчетностиПоКонсолидации.ПолучитьМакет("мпМаппингСтатьиЗатрат");
	ТЧ = СформироватьИзМакетаТаблицуЗначений(Макет);
	ПостроитьТаблицуНаФорме(ТЧ);
	ЗаполнитьТаблицу(ТЧ);
КонецПроцедуры

&НаСервере
Функция СформироватьИзМакетаТаблицуЗначений(Макет) Экспорт
	Перем ТЗ;
	ТЗ=Новый ТаблицаЗначений();
            
	//#Если Клиент Тогда
	//Считываем столбцы
	Для Стр=1 По Макет.ВысотаТаблицы Цикл
	    Если Стр>1 Тогда
	        ТекСтр=ТЗ.Добавить();
	    КонецЕсли;
	    ПустаяСтрока=истина;
	    
	    Для НомерСтолбца=1 По Макет.ШиринаТаблицы Цикл
	        Яч=Макет.Область(Стр, НомерСтолбца);
	        Если Яч.СодержитЗначение Тогда
	            Зн=Яч.Значение;
	        Иначе
	            Зн=Яч.Текст;
	        КонецЕсли;
	        Если ТипЗнч(Зн)=Тип("Строка") И ПустаяСтрока(Зн) Тогда
	            Зн=Неопределено;
	        КонецЕсли;
	        
	        //Добавляем столбец
	        Если Стр=1 Тогда
	            ТЗ.Колонки.Добавить(СтрЗаменить(Зн," ",""),Новый ОписаниеТипов("Строка"));
	        Иначе
	            ТекСтр[НомерСтолбца-1]=Зн;                                        
	        КонецЕсли;
	                        
	    КонецЦикла;
	КонецЦикла;
	//#КонецЕсли
	Возврат ТЗ;
КонецФункции

&НаСервере
Процедура ПостроитьТаблицуНаФорме(ЗагруженнаяТаблица)
	ИмяТаблицы = "ТаблицаФормы";
	Родитель = Элементы.ГруппаЗагружаемаяТаблица;
	//Удаление реквизитов
	Если Не Элементы.Найти(ИмяТаблицы) = Неопределено Тогда
		Элементы.Удалить(Элементы[ИмяТаблицы]);
		МассивРеквизитов = Новый Массив;
		МассивРеквизитов.Добавить(ИмяТаблицы);
		ИзменитьРеквизиты(,МассивРеквизитов);
	КонецЕсли;
	
	//Создание реквизитов
	ДобавляемыеРеквизиты = Новый Массив;
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяТаблицы, ОписаниеТипаВыбора, "", ""));
	Для Каждого Колонка Из ЗагруженнаяТаблица.Колонки Цикл
	    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,ИмяТаблицы));
	КонецЦикла;
	ИзменитьРеквизиты(МассивРеквизитов);      
	ТаблицаПолейВыбора = Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"),Родитель);
	ТаблицаПолейВыбора.ПутьКДанным = ИмяТаблицы;
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	Для Каждого Колонка Из ЗагруженнаяТаблица.Колонки Цикл
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаПолейВыбора);       
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = ИмяТаблицы+"." + Колонка.Имя;
		НовыйЭлемент.Ширина = 10;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицу(ЗагруженнаяТаблица)
	Для Каждого СтрокаТЧ Из ЗагруженнаяТаблица Цикл
		НоваяСтрока = ЭтаФорма["ТаблицаФормы"].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если параметры.Свойство("КолонкиМаппинг") Тогда
		МаппингЗагрузки.Очистить();
		Для Каждого КолонкаМаппинг Из Параметры.КолонкиМаппинг Цикл
			НоваяСтрока = МаппингЗагрузки.Добавить();
			НоваяСтрока.КолонкаДокумента = КолонкаМаппинг.Имя;
			НоваяСтрока.Тип = КолонкаМаппинг.Тип;
			//НоваяСтрока.Тип = КолонкаМаппинг.Тип.Типы()[0];
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	Если Не ЗначениеЗаполнено(ВидЗагружаемыхДанных) Тогда
		Сообщить("Не выбран вариант загружаемых данных");
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "xlsx (*.xlsx)|*.xlsx"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь;	
	Диалог.Показать(Новый ОписаниеОповещения("ЗагрузитьФайлЗавершение", ЭтаФорма, Новый Структура("Диалог", Диалог)));		

КонецПроцедуры

&НаКлиенте
Процедура МаппингЗагрузкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	ТекущаяКолонка = Элементы.ТаблицаФормы.ТекущийЭлемент.Имя;
	ПараметрыПеретаскивания.Значение = ТекущаяКолонка;
	
	СтрокаПолучателя = МаппингЗагрузки.НайтиПоИдентификатору(Строка);
	СтрокаПолучателя.КолонкаФайла = ТекущаяКолонка;
КонецПроцедуры

&НаКлиенте
Процедура МаппингЗагрузкиОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура МаппингЗагрузкиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗагружаемыхДанныхПриИзменении(Элемент)
	ЗагрузитьПервичныйМаппинг();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПервичныйМаппинг()
	//процедура получения первичного маппинга
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
	Оповестить("ТаблицаЗагружена",Адрес);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	//Сформируем структуру таблицы возврата
	ТаблицаВозврата = Новый ТаблицаЗначений;
	Для Каждого СтрокаМаппинга из МаппингЗагрузки Цикл
		ТаблицаВозврата.Колонки.Добавить(СтрокаМаппинга.КолонкаДокумента,СтрокаМаппинга.Тип);
	КонецЦикла;
	
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	КЧ = Новый КвалификаторыЧисла(15, 2);
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, ,,КЧ );
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , );
	Массив = Новый Массив;
	КД = Новый КвалификаторыДаты(ЧастиДаты.Дата);
	Массив.Добавить(Тип("Дата"));
	ОписаниеТиповД = Новый ОписаниеТипов(Массив, ,КД );
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Организации"));
	ОписаниеТиповОрганизации = Новый ОписаниеТипов(Массив, , );
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.СтатьиБюджетов"));
	ОписаниеТиповСтатьиЗатрат = Новый ОписаниеТипов(Массив, , );
	
	//ТаблицаВозврата.Колонки.Добавить("
	Для Каждого СтрокаТЧ Из ЭтаФорма["ТаблицаФормы"] Цикл
		НоваяСтрока = ТаблицаВозврата.Добавить();
		Для Каждого СтрокаМаппинга из МаппингЗагрузки Цикл
			Если ЗначениеЗаполнено(СтрокаМаппинга.КолонкаФайла) Тогда
				Если СтрокаМаппинга.Тип = ОписаниеТиповЧ Тогда
					текЗначение = СтрокаТЧ[СтрокаМаппинга.КолонкаФайла];
					Если СтрНайти(текЗначение,"E") = 0 Тогда
						Значение = Число(СтрокаТЧ[СтрокаМаппинга.КолонкаФайла]);
					Иначе
						Значение = 0;
					КонецЕсли;
					
				ИначеЕсли СтрокаМаппинга.Тип = ОписаниеТиповС Тогда
					Значение = СтрокаТЧ[СтрокаМаппинга.КолонкаФайла];
				ИначеЕсли СтрокаМаппинга.Тип = ОписаниеТиповД Тогда
					Значение = Дата(СтрокаТЧ[СтрокаМаппинга.КолонкаФайла]+" 00:00:00");
				ИначеЕсли СтрокаМаппинга.Тип = ОписаниеТиповОрганизации Тогда
					Значение = Справочники.Организации.НайтиПоРеквизиту("КодСправочника",СтрокаТЧ[СтрокаМаппинга.КолонкаФайла]);
				ИначеЕсли СтрокаМаппинга.Тип = ОписаниеТиповСтатьиЗатрат Тогда
					Значение = Справочники.СтатьиБюджетов.НайтиПоРеквизиту("КодСправочника",СтрокаТЧ[СтрокаМаппинга.КолонкаФайла]);
				КонецЕсли;
				НоваяСтрока[СтрокаМаппинга.КолонкаДокумента] = Значение;
				//НоваяСтрока[СтрокаМаппинга.КолонкаДокумента] = СтрокаТЧ[СтрокаМаппинга.КолонкаФайла];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Адрес = Новый УникальныйИдентификатор;
	ПоместитьВоВременноеХранилище(ТаблицаВозврата,Адрес);
КонецПроцедуры
