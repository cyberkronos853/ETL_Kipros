
&НаКлиенте
Процедура Команда1(Команда)
	//Если ЗначениеЗаполнено(Объект.Дата) Тогда	
		ПараметрыФормы = новый Структура();
		ПараметрыФормы.Вставить("КолонкиМаппингBS",ПолучитьКолонки("ДеревоBS"));
		ПараметрыФормы.Вставить("КолонкиМаппингCAPEX",ПолучитьКолонки("ДеревоКапитальныеВложения"));
		ПараметрыФормы.Вставить("Адрес",ЭтаФорма.УникальныйИдентификатор);
		ФормаЗагрузки = ПолучитьФорму("Обработка.кипрос_ЗагрузкаПлановыхДанных.Форма.ФормаЗагрузкиМП",ПараметрыФормы);
		ФормаЗагрузки.Открыть();	
	//Иначе
	//	Сообщить("Выберите пожалуйста дату вводимого документа");
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКолонки(ИмяТаблицы)
	КолонкиДокумента = Новый Массив;
	Если ТипЗнч(ЭтаФорма[ИмяТаблицы]) = Тип("ДанныеФормыДерево") Тогда
		мТаблица = РеквизитФормыВЗначение(ИмяТаблицы);
		Колонки = мТаблица.Колонки;
	КонецЕсли;
	//Для Каждого Колонка Из ЭтаФорма[ИмяТаблицы].Колонки Цикл
	Для Каждого Колонка Из Колонки Цикл
		Если Колонка.Имя = "Организация" Тогда
			КолонкиДокумента.Вставить(0,Новый Структура("Имя,Тип",Колонка.Имя,Колонка.ТипЗначения));
		Иначе
			КолонкиДокумента.Добавить(Новый Структура("Имя,Тип",Колонка.Имя,Колонка.ТипЗначения));	
		КонецЕсли;
		
	КонецЦикла;
	Возврат КолонкиДокумента;
	//
	//КолонкиДокумента = Новый Массив;
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","Период"));	
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","СвернутоПоГоду"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","Статья"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","СтатьяДоходов"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","СтатьяЗатрат"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","КатегорияАктивов"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","Контрагент"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","СтатьяТРУ"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","СтатьяТРУУровень2"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","ВидДвижения"));
	//КолонкиДокумента.Добавить(Новый Структура("Имя,Тип","Сумма"));
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ТаблицаЗагружена" Тогда
		Адрес = Строка(Параметр.Адрес);
		ВидЗагружаемыхДанных = Параметр.ВидЗагружаемыхДанных;
		ПолучитьЗагруженнуюТаблицу(Адрес);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗагруженнуюТаблицу(Адрес)
	ТЧ = ПолучитьИзВременногоХранилища(Адрес);
	
	ТЧ.Сортировать("Организация,Период");
	ПостроитьТаблицуНаФорме(ТЧ);
	ЗаполнитьТаблицу(ТЧ);
	//ТЧ= новый ТаблицаЗначений;
	СписокОрганизаций = ТЧ.Скопировать(,"Организация");
	СписокОрганизаций.Свернуть("Организация");
	СписокОрганизаций = СписокОрганизаций.ВыгрузитьКолонку("Организация");
	//Для Каждого Организация Из СписокОрганизаций Цикл
	//	НовыйДокумент = Документы.ПлановыеДанные.СоздатьДокумент();
	//	НовыйДокумент.Дата = Объект.Дата;
	//	НовыйДокумент.Организация = Организация;
	//	НовыйДокумент.Версия = Объект.Версия;
	//	НовыйДокумент.ПериодПланирования = объект.ПериодПланирования;
	//	//НовыйДокумент.Данные
	//	Для Каждого СтрокаТЧ Из ТЧ Цикл
	//		Если СтрокаТЧ.Организация = Организация Тогда
	//			НоваяСтрока = НовыйДокумент.Данные.Добавить();
	//			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
	//		КонецЕсли;
	//	КонецЦикла;
	//	НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
	//КонецЦикла;
	

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Дата = ТекущаяДата();
КонецПроцедуры

&НаСервере
Процедура ПостроитьТаблицуНаФорме(ЗагруженнаяТаблица)
	ИмяТаблицы = "ТаблицаФормы";
	Родитель = Элементы.ГруппаЗагружаемаяТаблица;
	//Удаление реквизитов
	Если Не Элементы.Найти(ИмяТаблицы) = Неопределено Тогда
		Элементы.Удалить(Элементы[ИмяТаблицы]);
		МассивРеквизитов = Новый Массив;
		МассивРеквизитов.Добавить(ИмяТаблицы);
		ИзменитьРеквизиты(,МассивРеквизитов);
	КонецЕсли;
	Если Не Команды.Найти("ПометитьВсе") = неопределено Тогда
		Команды.Удалить(Команды.ПометитьВсе);
	КонецЕсли;
	Если Не Команды.Найти("СнятьВсеПометки") = неопределено Тогда
		Команды.Удалить(Команды.СнятьВсеПометки);
	КонецЕсли;	
	//Создание реквизитов
	ДобавляемыеРеквизиты = Новый Массив;
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ДеревоЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяТаблицы, ОписаниеТипаВыбора, "", ""));
	Для Каждого Колонка Из ЗагруженнаяТаблица.Колонки Цикл
	    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,ИмяТаблицы));
	КонецЦикла;
	//Флажок выбрать
	Массив = Новый Массив;
	Массив.Добавить(Тип("Булево"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Выбрать", Новый ОписаниеТипов("Булево",,),ИмяТаблицы));
	//Документ
	Массив = Новый Массив;
	Массив.Добавить(Тип("ДокументСсылка.ПлановыеДанные"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Документ", Новый ОписаниеТипов("ДокументСсылка.ПлановыеДанные",,),ИмяТаблицы));
	//
	ИзменитьРеквизиты(МассивРеквизитов);
	ТаблицаПолейВыбора = Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"),Родитель);
	ТаблицаПолейВыбора.ПутьКДанным = ИмяТаблицы;
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Дерево;
	
	ЛидирующаяГруппа = Элементы.Добавить("ЛидирующаяГруппа", Тип("ГруппаФормы"), ТаблицаПолейВыбора);
	ЛидирующаяГруппа.Вид = ВидГруппыФормы.ГруппаКолонок;
	ЛидирующаяГруппа.группировка = ГруппировкаКолонок.ВЯчейке;
	//ЛидирующаяГруппа.Ширина = 10;
	
	Для Каждого Колонка Из ЗагруженнаяТаблица.Колонки Цикл
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаПолейВыбора);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = ИмяТаблицы+"." + Колонка.Имя;
		НовыйЭлемент.Ширина = 10;
		Если Колонка.Имя = "Организация" 
			ИЛИ Колонка.Имя = "Год" тогда
			//НовыйЭлемент.ФиксацияВТаблице = ФиксацияВТаблице.Лево;
			ЭтаФорма.Элементы.Переместить(НовыйЭлемент, ЛидирующаяГруппа)
		КонецЕсли;
	КонецЦикла;
	//Флажок
	НовыйЭлемент = Элементы.Добавить("Флажок", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.ПутьКДанным = ИмяТаблицы+".Выбрать";
	//НовыйЭлемент.Ширина = 10;
	НовыйЭлемент.ФиксацияВТаблице = ФиксацияВТаблице.Лево;
	
	//Флажок
	НовыйЭлемент = Элементы.Добавить("Документ", Тип("ПолеФормы"), ТаблицаПолейВыбора);       
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = ИмяТаблицы+".Документ";
	НовыйЭлемент.Ширина = 10;
	//НовыйЭлемент.ФиксацияВТаблице = ФиксацияВТаблице.Лево;
	
	ИмяКоманды = "ПометитьВсе";
	Команда = Команды.Добавить(ИмяКоманды);
	Команда.Заголовок = "Пометить все";
	Команда.Действие  = "Подключаемый_ПометитьВсе";
	КнопкаКоманды = Элементы.Добавить("КнопкаКомандыПометитьВсе", Тип("КнопкаФормы"),ТаблицаПолейВыбора.КоманднаяПанель);
	КнопкаКоманды.ИмяКоманды = ИмяКоманды;
	Команда.Картинка=БиблиотекаКартинок.УстановитьФлажки;
	
	ИмяКоманды = "СнятьВсеПометки";
	Команда = Команды.Добавить(ИмяКоманды);
	Команда.Заголовок = "Снять все пометки";
	Команда.Действие  = "Подключаемый_СнятьВсеПометки";
	КнопкаКоманды = Элементы.Добавить("КнопкаКомандыСнятьПометки", Тип("КнопкаФормы"),ТаблицаПолейВыбора.КоманднаяПанель);
	КнопкаКоманды.ИмяКоманды = ИмяКоманды;
	Команда.Картинка=БиблиотекаКартинок.СнятьФлажки;	
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьТаблицуНаФорме1(ЗагруженнаяТаблица)
	ИмяТаблицы = "ТаблицаФормы";
	Родитель = Элементы.ГруппаЗагружаемаяТаблица;
	//Удаление реквизитов
	Если Не Элементы.Найти(ИмяТаблицы) = Неопределено Тогда
		Элементы.Удалить(Элементы[ИмяТаблицы]);
		МассивРеквизитов = Новый Массив;
		МассивРеквизитов.Добавить(ИмяТаблицы);
		ИзменитьРеквизиты(,МассивРеквизитов);
	КонецЕсли;
	
	//Создание реквизитов
	ДобавляемыеРеквизиты = Новый Массив;
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяТаблицы, ОписаниеТипаВыбора, "", ""));
	Для Каждого Колонка Из ЗагруженнаяТаблица.Колонки Цикл
	    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,ИмяТаблицы));
	КонецЦикла;
	ИзменитьРеквизиты(МассивРеквизитов);      
	ТаблицаПолейВыбора = Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"),Родитель);
	ТаблицаПолейВыбора.ПутьКДанным = ИмяТаблицы;
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	Для Каждого Колонка Из ЗагруженнаяТаблица.Колонки Цикл
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаПолейВыбора);       
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = ИмяТаблицы+"." + Колонка.Имя;
		НовыйЭлемент.Ширина = 10;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицу(ТЧ)
	СписокОрганизаций = ТЧ.Скопировать(,"Организация");
	СписокОрганизаций.Свернуть("Организация");
	СписокОрганизаций = СписокОрганизаций.ВыгрузитьКолонку("Организация");
	СписокГодов = ТЧ.Скопировать(,"Год");
	СписокГодов.Свернуть("Год");
	СписокГодов.Сортировать("Год");
	СписокГодов = СписокГодов.ВыгрузитьКолонку("Год");
	Дерево = "ТаблицаФормы";
	КорневыеЭлементыДерева = ЭтаФорма[Дерево].ПолучитьЭлементы();
	Для Каждого Год Из СписокГодов Цикл
		СтрокаДереваГод = КорневыеЭлементыДерева.Добавить();
		СтрокаДереваГод.Год = Год;
		//ПараметрыПоиска = Новый Структура("Год",Год);
		//СписокСтрокТЧНаГод = ТЧ.НайтиСтроки(ПараметрыПоиска);
		//
		Для Каждого Организация Из СписокОрганизаций Цикл
			СтрокаДереваОрганизация = СтрокаДереваГод.ПолучитьЭлементы().Добавить();
			СтрокаДереваОрганизация.Организация = Организация;
			ПараметрыПоиска = Новый Структура("Год,Организация",Год,Организация);
			СписокСтрокТЧНаГодПоОрг = ТЧ.НайтиСтроки(ПараметрыПоиска);
			СписокПодчиненныхСтрокДерева = СтрокаДереваОрганизация.ПолучитьЭлементы();
			Для Каждого СтрокаСписка Из СписокСтрокТЧНаГодПоОрг Цикл
				НоваяПодчиненнаяСтрока = СписокПодчиненныхСтрокДерева.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяПодчиненнаяСтрока,СтрокаСписка,,"Год,Организация");
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	////СписокСтрокГод = ЭтаФорма[Дерево].ПолучитьЭлементы();
	////Для Каждого Год Из СписокГодов Цикл
	//	СписокСтрокОрганизации = ЭтаФорма[Дерево].ПолучитьЭлементы();
	//	Для Каждого Организация Из СписокОрганизаций Цикл
	//		ПараметрыПоиска = Новый Структура("Организация",Организация);
	//		НайденныеСтроки = ТЧ.НайтиСтроки(ПараметрыПоиска);
	//		Если Не НайденныеСтроки.Количество() = 0 Тогда
	//			НоваяСтрока = СписокСтрокОрганизации.Добавить();
	//			НоваяСтрока.Организация = Организация;
	//			СписокПодчиненныхСтрок = НоваяСтрока.ПолучитьЭлементы();
	//			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
	//				НоваяПодчиненнаяСтрока = СписокПодчиненныхСтрок.Добавить();
	//				ЗаполнитьЗначенияСвойств(НоваяПодчиненнаяСтрока,НайденнаяСтрока,,"Организация");
	//			КонецЦикла;
	//		КонецЕсли;
	//	КонецЦикла;
	////КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПлановыеДанные.Ссылка КАК Документ,
	               |	ПлановыеДанные.Организация КАК Организация,
	               |	НАЧАЛОПЕРИОДА(ПлановыеДанные.Дата, ГОД) КАК Год
	               |ИЗ
	               |	Документ.ПлановыеДанные КАК ПлановыеДанные";
				   //|ГДЕ
				   //|	ПлановыеДанные.Организация = &Организация
				   //|	НачалоПериода(ПлановыеДанные.Дата,Месяц) = &Дата";
	Запрос.УстановитьПараметр("Дата",НачалоМесяца(Объект.Дата));
	//Запрос.УстановитьПараметр("органи",НачалоМесяца(Объект.Дата));
	Результат = Запрос.Выполнить();
	ТЧ = Результат.Выгрузить();
	
	Для Каждого КорневойЭлементГод Из КорневыеЭлементыДерева Цикл
		КорневыеЭлементыОрганизация = КорневойЭлементГод.ПолучитьЭлементы();
		Для Каждого КорневойЭлементОрганизация Из КорневыеЭлементыОрганизация Цикл
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Год",КорневойЭлементГод.Год);
			ПараметрыПоиска.Вставить("Организация",КорневойЭлементОрганизация.Организация);
			
			НайденныеСтроки = ТЧ.НайтиСтроки(ПараметрыПоиска);
			Если Не НайденныеСтроки.Количество() = 0 Тогда
				КорневойЭлементОрганизация.Документ = НайденныеСтроки[0].Документ;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//Для Каждого СтрокаТЧ Из СписокСтрокОрганизации Цикл
	//	ПараметрыПоиска = Новый Структура("Организация,Год",СтрокаТЧ.Организация,СтрокаТЧ.Год);
	//	НайденныеСтроки = ТЧ.НайтиСтроки(ПараметрыПоиска);
	//	Если Не НайденныеСтроки.Количество() = 0 Тогда
	//		СтрокаТЧ.Документ = НайденныеСтроки[0].Документ;
	//	КонецЕсли;
	//КонецЦикла;
	
	//Для Каждого СтрокаТЧ Из ЗагруженнаяТаблица Цикл
	//	НоваяСтрока = ЭтаФорма["ТаблицаФормы"].Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицу1(ЗагруженнаяТаблица)
	Для Каждого СтрокаТЧ Из ЗагруженнаяТаблица Цикл
		НоваяСтрока = ЭтаФорма["ТаблицаФормы"].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПометитьВсе(Команда)
	Для Каждого СтрокаТЧ Из ЭтаФорма.ТаблицаФормы.ПолучитьЭлементы() Цикл
		СтрокаТЧ["Выбрать"] = истина;
		Для Каждого СтрокаТЧ1 Из СтрокаТЧ.ПолучитьЭлементы() Цикл
			СтрокаТЧ1["Выбрать"] = истина;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СнятьВсеПометки(Команда)
	Для Каждого СтрокаТЧ Из ЭтаФорма.ТаблицаФормы.ПолучитьЭлементы() Цикл
		СтрокаТЧ["Выбрать"] = Ложь;
		Для Каждого СтрокаТЧ1 Из СтрокаТЧ.ПолучитьЭлементы() Цикл
			СтрокаТЧ1["Выбрать"] = ложь;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СоздатьОбновитьДокументы(Команда)
	СоздатьОбновитьДокументыНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоздатьОбновитьДокументыНаСервере()
	Дерево = "ТаблицаФормы";
	СписокСтрокГода = ЭтаФорма[Дерево].ПолучитьЭлементы();
	Для Каждого СтрокаГод Из СписокСтрокГода Цикл
		СписокСтрокОрганизации = СтрокаГод.ПолучитьЭлементы();
		Для Каждого СтрокаОрганизация Из СписокСтрокОрганизации Цикл
			Если Не СтрокаОрганизация.Выбрать тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаОрганизация.Документ) Тогда
				НовыйДокумент = СтрокаОрганизация.Документ.ПолучитьОбъект();
			Иначе
				НовыйДокумент = Документы.ПлановыеДанные.СоздатьДокумент();
				НовыйДокумент.Дата = СтрокаГод.Год;
				НовыйДокумент.Организация = СтрокаОрганизация.Организация;
				НовыйДокумент.Версия = Объект.Версия;
				НовыйДокумент.ПериодПланирования = СтрокаГод.Год;
			КонецЕсли;
			ТЧ = СтрокаОрганизация.ПолучитьЭлементы();
			Для Каждого СтрокаТЧ Из ТЧ Цикл
				//Если СтрокаТЧ.Организация = Организация Тогда
				Если ВидЗагружаемыхДанных = "CAPEX" Тогда
					НайденныеСтроки = НовыйДокумент.ДанныеКапитальныеВложения.НайтиСтроки(Новый Структура("КатегорияАктива, Период",СтрокаТЧ.КатегорияАктива, СтрокаТЧ.Период));
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						НовыйДокумент.ДанныеКапитальныеВложения.Удалить(НайденнаяСтрока);
					КонецЦикла;
					НоваяСтрока = НайденныеСтроки[0];
				ИначеЕсли ВидЗагружаемыхДанных = "BS/PL/CFD" Тогда
					НайденныеСтроки = НовыйДокумент.Данные.НайтиСтроки(Новый Структура("Статья, Период",СтрокаТЧ.Статья, СтрокаТЧ.Период));
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						НовыйДокумент.Данные.Удалить(НайденнаяСтрока);
					КонецЦикла;
					НоваяСтрока = НовыйДокумент.Данные.Добавить();
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				//КонецЕсли;
			КонецЦикла;
			НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
		КонецЦикла;
	КонецЦикла;

	//СписокСтрокОрганизации = ЭтаФорма[Дерево].ПолучитьЭлементы();
	//Для Каждого СтрокаОрганизация Из СписокСтрокОрганизации Цикл
	//	Если Не СтрокаОрганизация.Выбрать тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Если ЗначениеЗаполнено(СтрокаОрганизация.Документ) Тогда
	//		НовыйДокумент = СтрокаОрганизация.Документ.ПолучитьОбъект();
	//	Иначе
	//		НовыйДокумент = Документы.ПлановыеДанные.СоздатьДокумент();
	//		НовыйДокумент.Дата = Объект.Дата;
	//		НовыйДокумент.Организация = СтрокаОрганизация.Организация;
	//		НовыйДокумент.Версия = Объект.Версия;
	//		НовыйДокумент.ПериодПланирования = объект.ПериодПланирования;
	//	КонецЕсли;
	//	ТЧ = СтрокаОрганизация.ПолучитьЭлементы();
	//	Для Каждого СтрокаТЧ Из ТЧ Цикл
	//		//Если СтрокаТЧ.Организация = Организация Тогда
	//			НоваяСтрока = НовыйДокумент.Данные.Добавить();
	//			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
	//		//КонецЕсли;
	//	КонецЦикла;
	//	НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
	//КонецЦикла
КонецПроцедуры

