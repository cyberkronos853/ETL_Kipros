&НаСервере
Процедура ОбновитьНаСервере(СоответствиеДвоичныхДанных)
	
	МассивФайлов = Неопределено;
	
	Если ЗначениеЗаполнено(СоответствиеДвоичныхДанных) Тогда
		
		МассивФайлов = Новый Массив; 
		
		Для Каждого КлючИЗначение Из СоответствиеДвоичныхДанных Цикл   
			Попытка
				ИмяВременногоФайла = КаталогВременныхФайлов() + КлючИЗначение.Ключ;
				ПолучитьИзВременногоХранилища(КлючИЗначение.Значение).Записать(ИмяВременногоФайла);
				МассивФайлов.Добавить(Новый Файл(ИмяВременногоФайла));
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось прочитать файл в каталоге! (" + ОписаниеОшибки() + ")",, "СпособИдентификацииДанныхXLS", "Объект");
				Возврат
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	РезультатОбработки = ОбработкаОбъект.ПолучитьДанныеОСВЗаПериод(Период.ДатаНачала, Период.ДатаОкончания, МассивФайлов);
	
	Если НЕ МассивФайлов = Неопределено Тогда
		
		Для Каждого Файл Из МассивФайлов Цикл 
			Если Файл.Существует() Тогда 
				УдалитьФайлы(Файл.ПолноеИмя);  
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если РезультатОбработки.СтатусВозврата = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось обработать данные (" + СокрЛП(РезультатОбработки.ОписаниеОшибки) + ")");
		Возврат
	КонецЕсли;
	
	ОчиститьРеквизитыТЗФормы();
	
	ИмяОбъектаИтерации = "Период";
	
	Если ЗначениеЗаполнено(РезультатОбработки.Данные.Строки) Тогда  
		
		Для СчетчикПериодов = 0 По РезультатОбработки.Данные.Строки[0].Строки.Количество() - 1 Цикл
			
			СтрокаДерева = РезультатОбработки.Данные.Строки[0].Строки[СчетчикПериодов];
			ОбъектИтерации = СтрокаДерева.Данные.Скопировать();   
			
			Если ЗначениеЗаполнено(ОбъектИтерации) Тогда
				
				ПредставлениеПериода = ПредставлениеПериода(СтрокаДерева.ПериодНачало, СтрокаДерева.ПериодОкончание);
				ТабличныйДокумент = Обработки.КонтрольДанныхОСВ.ПечатьСКД(Новый Структура("тзДанные, ПредставлениеПериода", ОбъектИтерации, ПредставлениеПериода));
				
				//ИнициализироватьРеквизитыТЗФормы(ИмяОбъектаИтерации + "_" + СчетчикПериодов, ПредставлениеПериода, ОбъектИтерации, Истина);
				//ЗначениеВРеквизитФормы(ОбъектИтерации, "тз" + ИмяОбъектаИтерации + "_" + СчетчикПериодов); 
				
				ИнициализироватьРеквизитыТДФормы(ИмяОбъектаИтерации + "_" + СчетчикПериодов, ПредставлениеПериода(СтрокаДерева.ПериодНачало, СтрокаДерева.ПериодОкончание));
				ЭтаФорма["тд" + ИмяОбъектаИтерации + "_" + СчетчикПериодов] = ТабличныйДокумент;
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда) 
	
	Если НЕ ПроверитьЗаполнение() Тогда 
		Возврат
	КонецЕсли;
	
	СписокФайлов = Новый СписокЗначений;
	
	Если СпособИдентификацииДанныхXLS = 1 Тогда
		
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Текст = "ru = ""Excel""; en = ""Excel""";
		Фильтр = НСтр(Текст)+"(*.xls)|*.xls";
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = "Выберите файл, входящий в диапазон периода";
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			Для Каждого ИмяФайла Из ДиалогОткрытияФайла.ВыбранныеФайлы Цикл
				СписокФайлов.Добавить(Новый Файл(ИмяФайла));
			КонецЦикла;
		Иначе
			Текст = "ru = ""Файл(ы) не выбран!""; en = ""File(s) not selected!""";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр(Текст),, "СпособИдентификацииДанныхXLS", "Объект");
			Возврат
		КонецЕсли;

	КонецЕсли; 
	
	ОбновитьПродолжение(СписокФайлов)	
		
КонецПроцедуры 
	
&НаКлиенте
Процедура ОбновитьПродолжение(СписокФайлов) 
	
	СоответствиеДвоичныхДанных = Новый Соответствие;
	Для Каждого ЗначениеСписка Из СписокФайлов Цикл
		Файл = ЗначениеСписка.Значение;         
		ДвоичныеДанные = Новый ДвоичныеДанные(Файл.ПолноеИмя);
		СоответствиеДвоичныхДанных.Вставить(Файл.Имя, ПоместитьВоВременноеХранилище(ДвоичныеДанные));
	КонецЦикла;
	
	ОбновитьНаСервере(СоответствиеДвоичныхДанных); 
	УстановитьВидимостьЭлементовФормы();
	Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Элементы["ГруппаСтраницаИнициализированныеДанные"];  
	
	ТекстСообщения = "Сбор данных XLS/SQL по заданным параметрам завершен.";
	ПоказатьОповещениеПользователя(Заголовок,, ТекстСообщения, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	
	Элементы.ГруппаДинамическиеСтраницы.ТекущаяСтраница = Элементы["ГруппаСтраница" + ?(Элементы.ГруппаСтраницаДанные.ПодчиненныеЭлементы.Количество() = 0, "Основная", "Данные")];  
	Элементы.ТипЗапросаПериода.Доступность = СпособИдентификацииДанныхXLS = 0;
	//Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = ?(Элементы.ГруппаСтраницыДанныхТЗ.ПодчиненныеЭлементы.Количество() = 0, Элементы.ГруппаСтраницаОсновная, Элементы.ГруппаСтраницаДанные);
	Элементы.БазаСсылка.Видимость = Объект.ТипЗапросаПериода = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	СпособИдентификацииДанныхXLS = 1;
	Объект.ТипЗапросаПериода = 1;
	
	УстановитьВидимостьЭлементовФормы()
КонецПроцедуры

&НаКлиенте
Процедура ТипЗапросаПериодаПриИзменении(Элемент)
	ОчиститьРеквизитыТЗФормы();
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры 

&НаСервере
Процедура ОчиститьРеквизитыТЗФормы()
	
	МассивУдаляемыхРеквизитов = Новый Массив;
	
	Для Каждого Реквизит Из ПолучитьРеквизиты() Цикл
		
		Если СтрНачинаетсяС(Реквизит.Имя, "тзПериод_")
			ИЛИ СтрНачинаетсяС(Реквизит.Имя, "тдПериод_") Тогда
				МассивУдаляемыхРеквизитов.Добавить(Реквизит.Имя); 
				Элементы.Удалить(Элементы.Найти("ГруппаСтраница_" + Реквизит.Имя));
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивУдаляемыхРеквизитов) Тогда 
		ИзменитьРеквизиты(, МассивУдаляемыхРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьРеквизитыТДФормы(КонтейнерИмени, СинонимИмени)
	
	ИмяРеквизита = "тд" + СокрЛП(КонтейнерИмени);
	СинонимЗаголовка = СокрЛП(СинонимИмени);
	
	ИмяТекущейСтраницы = "ГруппаСтраница_" + ИмяРеквизита;
	МассивДобавляемыхРеквизитов = Новый Массив;
		
	ЭлементСтраница = Элементы.Найти(ИмяТекущейСтраницы);
	Если ЭлементСтраница = Неопределено Тогда 
		ЭлементСтраница = Элементы.Добавить(ИмяТекущейСтраницы, Тип("ГруппаФормы"), Элементы["ГруппаСтраницы_тдПериоды"]);
	КонецЕсли;
	ЭлементСтраница.Заголовок = СинонимЗаголовка;
	
	Если НЕ РеквизитСуществует(ИмяРеквизита) Тогда
		
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТабличныйДокумент")));
		Если ЗначениеЗаполнено(МассивДобавляемыхРеквизитов) Тогда 
			ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
		КонецЕсли;
		
		ЭлементПолеТабличногоДокумента = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Элементы[ИмяТекущейСтраницы]);
		ЭлементПолеТабличногоДокумента.ПутьКДанным = ИмяРеквизита; 
		ЭлементПолеТабличногоДокумента.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
		ЭлементПолеТабличногоДокумента.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		//ЭлементПолеТабличногоДокумента.ТолькоПросмотр = Истина;
		
	Иначе
		ЭлементПолеТабличногоДокумента = Элементы.Найти(ИмяРеквизита);	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьРеквизитыТЗФормы(КонтейнерИмени, СинонимИмени, ИнициализируемыеДанные, ИнициализироватьПоляФормы = Ложь)
	
	ИмяРеквизита = "ТЗ" + СокрЛП(КонтейнерИмени);
	СинонимЗаголовка = СокрЛП(СинонимИмени);
	
	ИмяТекущейСтраницы = "ГруппаСтраница" + "_" + ИмяРеквизита;
	МассивДобавляемыхРеквизитов = Новый Массив;
		
	ЭлементСтраница = Элементы.Найти(ИмяТекущейСтраницы);
	Если ЭлементСтраница = Неопределено Тогда 
		ЭлементСтраница = Элементы.Добавить(ИмяТекущейСтраницы, Тип("ГруппаФормы"), Элементы["ГруппаСтраницыДанныхТЗ"]);
	КонецЕсли;
	ЭлементСтраница.Заголовок = СинонимЗаголовка + ?(ЗначениеЗаполнено(ИнициализируемыеДанные), " (" + ИнициализируемыеДанные.Количество() + " поз.)", "");
	
	Если НЕ РеквизитСуществует(ИмяРеквизита) Тогда
		
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТаблицаЗначений")));
		Если ЗначениеЗаполнено(МассивДобавляемыхРеквизитов) Тогда 
			ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
		КонецЕсли;
		
		ЭлементТаблицаФормы = Элементы.Добавить(ИмяРеквизита, Тип("ТаблицаФормы"), Элементы[ИмяТекущейСтраницы]);
		ЭлементТаблицаФормы.ПутьКДанным = ИмяРеквизита;
		ЭлементТаблицаФормы.ТолькоПросмотр = Истина;
		
	Иначе
		ЭлементТаблицаФормы = Элементы.Найти(ИмяРеквизита);	
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов.Очистить();
	
	Для Каждого Колонка Из ИнициализируемыеДанные.Колонки Цикл
		
		Если РеквизитСуществует(Колонка.Имя, ИмяРеквизита) Тогда 
			
			Продолжить;
			
		КонецЕсли;
		
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяРеквизита));
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивДобавляемыхРеквизитов) Тогда 
		ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	КонецЕсли;
	
	Если ИнициализироватьПоляФормы Тогда 
		
		Для Каждого Колонка Из ИнициализируемыеДанные.Колонки Цикл
			
			ИмяЭлемента = "Поле_" + ИмяРеквизита + "_" + Колонка.Имя;
			
			ЭлементКолонка = Элементы.Найти(ИмяЭлемента);
			
			Если ЭлементКолонка = Неопределено Тогда
				
				ИнициализированыПоляОформления = Ложь;
				ПодсказкаПоля = "";
				ЗаголовокПоля = Колонка.Заголовок;
				
				ЗаголовокПоля = Колонка.Заголовок; 
				ПодсказкаПоля = Колонка.Имя; 
				
				ЭлементКолонка = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Элементы.Найти(ИмяРеквизита));
				ЭлементКолонка.ПутьКДанным = ИмяРеквизита + "." + Колонка.Имя;
				ЭлементКолонка.Заголовок = ЗаголовокПоля;
				ЭлементКолонка.Подсказка = ПодсказкаПоля;
				ЭлементКолонка.Вид = ВидПоляФормы.ПолеВвода;
									
				Если Колонка.ТипЗначения.СодержитТип(Тип("Булево")) Тогда 
					
					ЭлементКолонка.Вид = ВидПоляФормы.ПолеФлажка;
					ЭлементКолонка.ВидФлажка = ВидФлажка.Флажок;
					ЭлементКолонка.ОграничениеТипа = Новый ОписаниеТипов("Булево");
					ЭлементКолонка.ТриСостояния = Ложь;   
										
				ИначеЕсли Колонка.ТипЗначения.СодержитТип(Тип("Число")) Тогда
					
					ЭлементКолонка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
					ЭлементКолонка.ГоризонтальноеПоложениеВПодвале = ЭлементКолонка.ГоризонтальноеПоложение;
					ЭлементКолонка.Ширина = 12;
					ЭлементКолонка.РастягиватьПоГоризонтали = Ложь;
					
					ЭлементКолонка.Формат = "ЧЦ=22; " + ?(НЕ Найти(Колонка.Имя, "Количество")=0, "ЧДЦ=3", "ЧДЦ=2");
					ЭлементКолонка.ФорматРедактирования = ЭлементКолонка.Формат;
					ЭлементКолонка.ВыделятьОтрицательные = Истина;
					//ЭлементКолонка.ПутьКДаннымПодвала = "ТЗ_ДинамическиеДанныеИтогов[0]." + Колонка.Имя;
					
				КонецЕсли;
				
				//ЭлементКолонка.УстановитьДействие("ПриИзменении", "ДЗ_РесурсПриИзменении");
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РеквизитСуществует(ИмяРеквизита, ИмяРеквизитаРодителя = "")
	
	РеквизитСуществует = Ложь;
	
	Если ЗначениеЗаполнено(ИмяРеквизитаРодителя) Тогда 
		МассивПодчиненныхРеквизитов = ПолучитьРеквизиты(ИмяРеквизитаРодителя);
	Иначе
		МассивПодчиненныхРеквизитов = ПолучитьРеквизиты();
	КонецЕсли;
	
	Для Каждого ПодчиненныйРеквизит Из МассивПодчиненныхРеквизитов Цикл
		Если ПодчиненныйРеквизит.Имя = ИмяРеквизита Тогда 
			РеквизитСуществует = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат РеквизитСуществует;
	
КонецФункции

&НаКлиенте
Процедура СпособИдентификацииДанныхXLSПриИзменении(Элемент)
	
	Если СпособИдентификацииДанныхXLS = 1 Тогда 
		Объект.ТипЗапросаПериода = 1;
	КонецЕсли;
	
	ОчиститьРеквизитыТЗФормы();
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры
