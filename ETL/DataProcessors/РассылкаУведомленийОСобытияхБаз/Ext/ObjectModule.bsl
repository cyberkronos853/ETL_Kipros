Функция ПолучитьДанныеСтатистикиЗагрузкиЗаПериод(знач ДатаНачала, знач ДатаОкончания, знач База = Неопределено) Экспорт
	
	ДатаНачала = НачалоДня(?(ЗначениеЗаполнено(ДатаНачала), ДатаНачала, Дата("19000101")));
	ДатаОкончания = КонецДня(?(ЗначениеЗаполнено(ДатаОкончания), ДатаОкончания, Дата("29991231")));
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Базы.Ссылка КАК Ссылка
	                      |ПОМЕСТИТЬ ВТБазы
	                      |ИЗ
	                      |	Справочник.Базы КАК Базы
	                      |ГДЕ
	                      |	НЕ Базы.ПометкаУдаления
	                      |	И НЕ Базы.Отключена
	                      |	И ВЫБОР
	                      |			КОГДА НЕ &База В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Базы.ПустаяСсылка))
	                      |				ТОГДА Базы.Ссылка = &База
	                      |			ИНАЧЕ ИСТИНА
	                      |		КОНЕЦ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СтатистикаЗагрузки.ДатаЗапроса КАК ДатаЗапроса,
	                      |	СтатистикаЗагрузки.ЕстьОшибки КАК ЕстьОшибки,
	                      |	СтатистикаЗагрузки.ДатаОбработки КАК ДатаОбработки,
	                      |	СтатистикаЗагрузки.Обработан КАК Обработан,
	                      |	СтатистикаЗагрузки.База КАК База
	                      |ПОМЕСТИТЬ втСтатистикаЗагрузки
	                      |ИЗ
	                      |	РегистрСведений.СтатистикаЗагрузки КАК СтатистикаЗагрузки
	                      |ГДЕ
	                      |	СтатистикаЗагрузки.ДатаОбработки МЕЖДУ &ДатаНачала И &ДатаОкончания
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	МАКСИМУМ(ЕСТЬNULL(втСтатистикаЗагрузки.ДатаЗапроса, &ПустаяДата)) КАК ДатаПоследнейВыгрузки,
	                      |	МАКСИМУМ(ЕСТЬNULL(втСтатистикаЗагрузки.ЕстьОшибки, ЛОЖЬ)) КАК ЕстьОшибки,
	                      |	МАКСИМУМ(ЕСТЬNULL(втСтатистикаЗагрузки.ДатаОбработки, &ПустаяДата)) КАК ДатаУспешнойЗагрузки,
	                      |	МАКСИМУМ(ЕСТЬNULL(втСтатистикаЗагрузки.Обработан, ЛОЖЬ)) КАК Обработан,
	                      |	ВТБазы.Ссылка КАК База
	                      |ИЗ
	                      |	ВТБазы КАК ВТБазы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ втСтатистикаЗагрузки КАК втСтатистикаЗагрузки
	                      |		ПО ВТБазы.Ссылка = втСтатистикаЗагрузки.База
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТБазы.Ссылка
	                      |
	                      |ИМЕЮЩИЕ
	                      |	НЕ &ТолькоОшибочные
	                      |		ИЛИ МАКСИМУМ(ЕСТЬNULL(втСтатистикаЗагрузки.ДатаОбработки, &ПустаяДата)) = &пустаяДата
	                      |		ИЛИ (МАКСИМУМ(ЕСТЬNULL(втСтатистикаЗагрузки.ЕстьОшибки, ЛОЖЬ)) И НЕ МАКСИМУМ(ЕСТЬNULL(втСтатистикаЗагрузки.Обработан, ЛОЖЬ)))");
	
	Запрос.УстановитьПараметр("ДатаНачала", 	ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	ДатаОкончания);
	Запрос.УстановитьПараметр("База", 			База); 
	Запрос.УстановитьПараметр("ПустаяДата", 	Дата(1, 1, 1));
	Запрос.УстановитьПараметр("ТолькоОшибочные", ТолькоОшибочные);    
	
	Возврат Новый Структура("Данные", Запрос.Выполнить().Выгрузить()); 
	
КонецФункции

Процедура ПрочитатьСписокПолучателейРассылки() Экспорт 

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПолучателиРассылки.АдресОтправки КАК EMail
	                      |ИЗ
	                      |	РегистрСведений.ПолучателиРассылки КАК ПолучателиРассылки
	                      |ГДЕ
	                      |	ПолучателиРассылки.ТипУведомления = &ТипУведомления
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПолучателиРассылки.АдресОтправки
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПолучателиРассылки.АдресОтправки
	                      |АВТОУПОРЯДОЧИВАНИЕ"); 
	Запрос.УстановитьПараметр("ТипУведомления", Перечисления.ТипыУведомлений.УведомленияАдминистраторам);
	ПолучателиРассылки.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура ВыполнитьРегламентноеЗадание() Экспорт
	
	ДатаИнициализации = ТекущаяДата() - 60*60*24; 
	
	ДатаНачала = НачалоДня(ДатаИнициализации);
	ДатаОкончания = КонецДня(ДатаИнициализации);
	
	ПрочитатьСписокПолучателейРассылки();
	ТолькоОшибочные = Истина;
	
	Обработки.РассылкаУведомленийОСобытияхБаз.ВыполнитьРассылкуРезультатовКонтроля(ПолучитьДанныеСтатистикиЗагрузкиЗаПериод(ДатаНачала, ДатаОкончания).Данные.Скопировать(), ПолучателиРассылки)
	
КонецПроцедуры