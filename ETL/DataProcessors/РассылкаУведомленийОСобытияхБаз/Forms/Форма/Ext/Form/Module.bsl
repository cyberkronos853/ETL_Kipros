//&НаСервере
//Процедура ОбновитьСписокБазКРассылкеНаСервере()

//	Запрос = Новый Запрос("ВЫБРАТЬ
//	                      |	УведомленияОСобытияхБазСрезПоследних.Период КАК Период,
//	                      |	УведомленияОСобытияхБазСрезПоследних.База КАК База,
//	                      |	УведомленияОСобытияхБазСрезПоследних.База.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
//	                      |	УведомленияОСобытияхБазСрезПоследних.Событие КАК Событие,
//	                      |	УведомленияОСобытияхБазСрезПоследних.Информация КАК ТекстПисьма,
//	                      |	УведомленияОСобытияхБазСрезПоследних.ЕстьОшибки КАК ЕстьОшибки,
//	                      |	УведомленияОСобытияхБазСрезПоследних.GUID КАК GUID
//	                      |ИЗ
//	                      |	РегистрСведений.УведомленияОСобытияхБаз.СрезПоследних(&ДатаСреза, ) КАК УведомленияОСобытияхБазСрезПоследних
//	                      |ГДЕ
//	                      |	НЕ УведомленияОСобытияхБазСрезПоследних.Отправлено
//	                      |	И УведомленияОСобытияхБазСрезПоследних.База.АдресЭлектроннойПочты <> """"
//	                      |
//	                      |УПОРЯДОЧИТЬ ПО
//	                      |	Период
//	                      |АВТОУПОРЯДОЧИВАНИЕ");
//	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
//	
//	ДанныеРассылки.Загрузить(Запрос.Выполнить().Выгрузить());
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура Обновить(Команда) 
//	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаСтатистикаЗагрузки Тогда 
//		ОбновитьДанныеСтатистикиЗагрузки();
//	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница2 Тогда 
//		ОбновитьСписокБазКРассылкеНаСервере();
//	КонецЕсли; 
//	
//	УстановитьВидимостьЭлементовФормы()
//КонецПроцедуры 

//&НаКлиенте
//Процедура ОбновитьДанныеСтатистикиЗагрузки() 
//	
//	Если НЕ ПроверитьЗаполнение() Тогда 
//		Возврат
//	КонецЕсли;
//	
//	ТекстВопроса = НСтр("ru = 'Заполнить только по ошибочным, либо по всем записям журнала?'");
//	
//	СписокКнопокВопроса = Новый СписокЗначений;
//	СписокКнопокВопроса.Добавить("ТолькоОшибочные", "Ошибочные");
//	СписокКнопокВопроса.Добавить("ПолныйСписок", "По всем"); 
//	СписокКнопокВопроса.Добавить("Отмена", "Отмена"); 
//	
//	Оповещение = Новый ОписаниеОповещения("ОбновитьДанныеСтатистикиЗагрузкиОбработкаОтвета", ЭтотОбъект,);
//	ПоказатьВопрос(Оповещение, ТекстВопроса, СписокКнопокВопроса, 0);
//		
//КонецПроцедуры  


// &НаКлиенте
//Процедура Отправить(Команда)
//	
//	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаСтатистикаЗагрузки Тогда   
//		
//		Если НЕ ЗначениеЗаполнено(Объект.ПолучателиРассылки) Тогда
//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите хотя бы одно значение e-mail получателя",, "ПолучателиРассылки", "Объект.ПолучателиРассылки");
//			Возврат
//		КонецЕсли;
//		
//		ОтправитьУведомленияОСтатистикеЗагрузкиНаСервере();  
//		
//	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница2 Тогда 
//		ОтправитьУведомленияОСобытияхБазНаСервере();
//	КонецЕсли;
//	
//	ТекстСообщения = "Процедура рассылки e-mail завершена.";
//	ПоказатьОповещениеПользователя(Заголовок,, ТекстСообщения, БиблиотекаКартинок.ОтправитьЭлектронноеПисьмо);
//	
//КонецПроцедуры  

//&НаСервере
//Процедура ОтправитьУведомленияОСтатистикеЗагрузкиНаСервере()

//	ОбработкаОбъект = РеквизитФормыВЗначение("Объект"); 
//	РезультатОбработки = Обработки.РассылкаУведомленийОСобытияхБаз.ВыполнитьРассылкуРезультатовКонтроля(РеквизитФормыВЗначение("дзДанныеСтатистикиРассылки"), Объект.ПолучателиРассылки, УчетнаяЗапись);
//	
//	Если РезультатОбработки.СтатусВозврата = "Ошибка" Тогда
//		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю();
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаСервере
//Процедура ОтправитьУведомленияОСобытияхБазНаСервере()
//	
//	Для каждого СтрокаРассылки из ДанныеРассылки Цикл
//		
//		Если НЕ СтрокаРассылки.Отправлять Тогда Продолжить; КонецЕсли;
//		
//		АдресаКоторымОтправляемПисьма = СтрокаРассылки.АдресЭлектроннойПочты;
//		
//		ПочтаОтправителя = УчетнаяЗапись;
//		
//		Если АдресаКоторымОтправляемПисьма = "" Тогда
//			//Сообщить("Не введено ни одного адреса для отправки");
//			Возврат;
//		КонецЕсли;
//		Если не ЗначениеЗаполнено(ПочтаОтправителя) Тогда
//			//Сообщить("Не заполнено почта отправителя");
//			Возврат;
//		КонецЕсли;
//		ПараметрыПисьма = Новый Структура;
//		ПараметрыПисьма.Вставить("Кому", АдресаКоторымОтправляемПисьма);
//		ПараметрыПисьма.Вставить("УчетнаяЗапись", ПочтаОтправителя);                                                               
//		ПараметрыПисьма.Вставить("АдресОтвета", АдресаКоторымОтправляемПисьма);
//		ПараметрыПисьма.Вставить("Тема", "Событие: "+СтрокаРассылки.Событие +", База: "+СтрокаРассылки.База+?(СтрокаРассылки.ЕстьОшибки, ", ЕСТЬ ОШИБКИ!", ""));	
//		ПараметрыПисьма.Вставить("Тело", СтрокаРассылки.ТекстПисьма);
//		ПараметрыПисьма.Вставить("ТипТекста", "HTML");
//		
//		Попытка	
//			РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(ПочтаОтправителя, ПараметрыПисьма);  
//			Уведомление = РегистрыСведений.УведомленияОСобытияхБаз.СоздатьМенеджерЗаписи();
//			Уведомление.GUID = СтрокаРассылки.GUID; 
//			Уведомление.Событие = СтрокаРассылки.Событие; 
//			Уведомление.База = СтрокаРассылки.База; 
//			Уведомление.Период = Строкарассылки.Период;
//			Уведомление.Прочитать(); 
//			Если Уведомление.Выбран() Тогда
//				Уведомление.Отправлено = Истина;
//				Уведомление.ДатаОтправки = ТекущаяДатаСеанса();  
//				Уведомление.Записать(Истина);
//			КонецЕсли;  
//		
//		Исключение	
//			Сообщить("Не удалось отправить письма по причине " + ОписаниеОшибки());
//		КонецПопытки;
//        	
//		
//	КонецЦикла
//	
//КонецПроцедуры

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("Системная учетная запись"); 
//	ОбновитьСписокПолучателейРассылкиНаСервере();
//КонецПроцедуры

//&НаСервере
//Процедура ОбновитьСписокПолучателейРассылкиНаСервере()
//	
//	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");  
//	ОбработкаОбъект.ПрочитатьСписокПолучателейРассылки();
//	
//	ЗначениеВРеквизитФормы(ОбработкаОбъект.ПолучателиРассылки, "Объект.ПолучателиРассылки");
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ОбновитьСписокПолучателейРассылки(Команда)
//	ОбновитьСписокПолучателейРассылкиНаСервере();
//КонецПроцедуры

//&НаСервере
//Процедура ЗаписатьСписокПолучателейРассылкиНаСервере()
//	
//	НаборЗаписей = РегистрыСведений.ПолучателиРассылкиПоЗаявкам.СоздатьНаборЗаписей();  
//	
//	Для Каждого СтрокаТЗ Из Объект.ПолучателиРассылки Цикл 
//		
//		ЗаписьНабора = НаборЗаписей.Добавить();
//		ЗаписьНабора.АдресОтправки = СтрокаТЗ.EMail
//		
//	КонецЦикла;
//		
//	НаборЗаписей.Записать();
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ЗаписатьСписокПолучателейРассылки(Команда)
//	ЗаписатьСписокПолучателейРассылкиНаСервере();
//	ТекстСообщения = "Сохранение списка e-mail завершено.";
//	ПоказатьОповещениеПользователя(Заголовок,, ТекстСообщения, БиблиотекаКартинок.Записать);
//КонецПроцедуры

//&НаКлиенте
//Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
//	УстановитьВидимостьЭлементовФормы();
//КонецПроцедуры

//&НаКлиенте
//Процедура УстановитьВидимостьЭлементовФормы()
//	
//	ДоступностьКнопкиОбновить = НЕ Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаНастройки;
//	ДоступностьКнопкиРассылки = Ложь;
//												
//	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаСтатистикаЗагрузки Тогда   
//		
//		ДоступностьКнопкиРассылки = НЕ ЭтаФорма["дзДанныеСтатистикиРассылки"].ПолучитьЭлементы().Количество() = 0
//			//И ЗначениеЗаполнено(Объект.ПолучателиРассылки);  
//		
//	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница2 Тогда 
//		ДоступностьКнопкиРассылки = ЗначениеЗаполнено(ДанныеРассылки)  
//	КонецЕсли;
//												
//	Элементы.ФормаОбновить.Доступность = ДоступностьКнопкиОбновить;
//	Элементы.ФормаОтправить.Доступность = ДоступностьКнопкиРассылки;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ПриОткрытии(Отказ)
//	УстановитьВидимостьЭлементовФормы()
//КонецПроцедуры


//&НаКлиенте
//Процедура ВыбратьПериод(Команда)
//	
//	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", НачалоДня(ДатаНачала), КонецДня(ДатаОкончания));
//	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
//	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);

//КонецПроцедуры


#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("Системная учетная запись"); 
	ОбновитьСписокПолучателейРассылкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДанныеРассылки
// Если в форме есть таблицы, сюда можно добавить обработчики их событий.
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Обновить(Команда) 
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаСтатистикаЗагрузки Тогда 
		ОбновитьДанныеСтатистикиЗагрузки();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница2 Тогда 
		ОбновитьСписокБазКРассылкеНаСервере();
	КонецЕсли; 
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры 

&НаКлиенте
Процедура Отправить(Команда)
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаСтатистикаЗагрузки Тогда   
		Если НЕ ЗначениеЗаполнено(Объект.ПолучателиРассылки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите хотя бы одно значение e-mail получателя",, "ПолучателиРассылки", "Объект.ПолучателиРассылки");
			Возврат;
		КонецЕсли;
		ОтправитьУведомленияОСтатистикеЗагрузкиНаСервере();  
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница2 Тогда 
		ОтправитьУведомленияОСобытияхБазНаСервере();
	КонецЕсли;
	ПоказатьОповещениеПользователя("Процедура рассылки e-mail завершена.", БиблиотекаКартинок.ОтправитьЭлектронноеПисьмо);
КонецПроцедуры  
#КонецОбласти
 
#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	ДоступностьКнопкиОбновить = НЕ Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаНастройки;
	ДоступностьКнопкиРассылки = Ложь;
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаСтатистикаЗагрузки Тогда   
		ДоступностьКнопкиРассылки = НЕ ЭтаФорма["дзДанныеСтатистикиРассылки"].Количество() = 0;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница2 Тогда 
		ДоступностьКнопкиРассылки = ЗначениеЗаполнено(ДанныеРассылки);
	КонецЕсли;
	Элементы.ФормаОбновить.Доступность = ДоступностьКнопкиОбновить;
	Элементы.ФормаОтправить.Доступность = ДоступностьКнопкиРассылки;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокБазКРассылкеНаСервере()

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	УведомленияОСобытияхБазСрезПоследних.Период КАК Период,
	                      |	УведомленияОСобытияхБазСрезПоследних.База КАК База,
	                      |	УведомленияОСобытияхБазСрезПоследних.База.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
	                      |	УведомленияОСобытияхБазСрезПоследних.Событие КАК Событие,
	                      |	УведомленияОСобытияхБазСрезПоследних.Информация КАК ТекстПисьма,
	                      |	УведомленияОСобытияхБазСрезПоследних.ЕстьОшибки КАК ЕстьОшибки,
	                      |	УведомленияОСобытияхБазСрезПоследних.GUID КАК GUID
	                      |ИЗ
	                      |	РегистрСведений.УведомленияОСобытияхБаз.СрезПоследних(&ДатаСреза, ) КАК УведомленияОСобытияхБазСрезПоследних
	                      |ГДЕ
	                      |	НЕ УведомленияОСобытияхБазСрезПоследних.Отправлено
	                      |	И УведомленияОСобытияхБазСрезПоследних.База.АдресЭлектроннойПочты <> """"
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	
	ДанныеРассылки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеСтатистикиЗагрузкиНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	РезультатОбработки = ОбработкаОбъект.ПолучитьДанныеСтатистикиЗагрузкиЗаПериод(Период.ДатаНачала, Период.ДатаОкончания, База);
	ОбъектИтерации = РезультатОбработки.Данные.Скопировать();   
	ЗначениеВРеквизитФормы(ОбъектИтерации, "дзДанныеСтатистикиРассылки");  
КонецПроцедуры

&НаСервере
Процедура ОтправитьУведомленияОСобытияхБазНаСервере()
	Отбор = Новый Структура("Отправлять", Истина);
	ТаблицаРассылки = ДанныеРассылки.Выгрузить(Отбор);
	
	Обработки.РассылкаУведомленийОСобытияхБаз.ОтправитьУведомления(ТаблицаРассылки);

КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПолучателейРассылкиНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");  
	ОбработкаОбъект.ПрочитатьСписокПолучателейРассылки();
	ЗначениеВРеквизитФормы(ОбработкаОбъект.ПолучателиРассылки, "Объект.ПолучателиРассылки");
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСписокПолучателейРассылкиНаСервере()
	НаборЗаписей = РегистрыСведений.ПолучателиРассылки.СоздатьНаборЗаписей();  
	Для Каждого СтрокаТЗ Из Объект.ПолучателиРассылки Цикл 
		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаписьНабора.АдресОтправки = СтрокаТЗ.EMail;
	КонецЦикла;
	НаборЗаписей.Записать();
КонецПроцедуры   


&НаКлиенте
Процедура ОбновитьДанныеСтатистикиЗагрузкиОбработкаОтвета(Результат, Параметры) Экспорт  
	
	Если Результат = "Отмена" Тогда
		Возврат
	КонецЕсли;
	
	Объект.ТолькоОшибочные = Результат = "ТолькоОшибочные";
	
	ОбновитьДанныеСтатистикиЗагрузкиНаСервере();  
	
	УстановитьВидимостьЭлементовФормы();
		
КонецПроцедуры
  

&НаСервере
Процедура ОтправитьУведомленияОСтатистикеЗагрузкиНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект"); 
	РезультатОбработки = Обработки.РассылкаУведомленийОСобытияхБаз.ВыполнитьРассылкуРезультатовКонтроля(РеквизитФормыВЗначение("дзДанныеСтатистикиРассылки"), Объект.ПолучателиРассылки, УчетнаяЗапись);
	
	Если РезультатОбработки.СтатусВозврата = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеСтатистикиЗагрузки() 
	
	Если НЕ ПроверитьЗаполнение() Тогда 
		Возврат
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Заполнить только по ошибочным, либо по всем записям журнала?'");
	
	СписокКнопокВопроса = Новый СписокЗначений;
	СписокКнопокВопроса.Добавить("ТолькоОшибочные", "Ошибочные");
	СписокКнопокВопроса.Добавить("ПолныйСписок", "По всем"); 
	СписокКнопокВопроса.Добавить("Отмена", "Отмена"); 
	
	Оповещение = Новый ОписаниеОповещения("ОбновитьДанныеСтатистикиЗагрузкиОбработкаОтвета", ЭтотОбъект,);
	ПоказатьВопрос(Оповещение, ТекстВопроса, СписокКнопокВопроса, 0);
		
КонецПроцедуры

#КонецОбласти