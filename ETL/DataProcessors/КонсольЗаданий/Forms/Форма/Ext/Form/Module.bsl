//***********************************************************************************************************
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Попытка
		
		Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
			
			ПодключитьОбработчикОжидания("ОбработчикАвтообновленияРегламентныхЗаданий", ПериодАвтообновленияСпискаРегламентныхЗаданий);	
			
		КонецЕсли;		
		
		Если АвтообновлениеСпискаФоновыхЗаданий = Истина Тогда
			
			ПодключитьОбработчикОжидания("ОбработчикАвтообновленияФоновыхЗаданий", ПериодАвтообновленияСпискаФоновыхЗаданий);	
			
		КонецЕсли;		
		
		ОбновитьСписокФоновыхЗаданий();
		ОбновитьСписокРегламентныхЗаданий();
		
	Исключение
		
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
		
	КонецПопытки;

КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ОбновитьСписокРегламентныхЗаданий(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	Перем ТекущийИдентификатор;
	
	ТекущаяСтрока = Элементы.СписокРегламентныхЗаданий.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда

		ТекущийИдентификатор = СписокРегламентныхЗаданий.НайтиПоИдентификатору(ТекущаяСтрока).Идентификатор;
		
	КонецЕсли;
	
	Идентификаторы = Новый Массив;
	
	ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл

		Идентификаторы.Добавить(СписокРегламентныхЗаданий.НайтиПоИдентификатору(ВыделеннаяСтрока).Идентификатор);
		
	КонецЦикла;
	
	СписокРегламентныхЗаданий.Очистить();
	
	Отбор = Неопределено;
	
	Если ОтборРегламентныхЗаданийВключен = Истина Тогда
		
		Отбор = ОтборРегламентныхЗаданий;
		
	КонецЕсли;
	
	Попытка
		
		Регламентные = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
		
	Исключение

		Возврат;
		
	КонецПопытки;

	Для Каждого Регламентное из Регламентные Цикл
		
		НоваяСтрока = СписокРегламентныхЗаданий.Добавить();
		
		НоваяСтрока.Ключ			 = Регламентное.Ключ;
		НоваяСтрока.Расписание		 = Регламентное.Расписание;
		НоваяСтрока.Метаданные		 = Регламентное.Метаданные.Представление();
		НоваяСтрока.Наименование	 = Регламентное.Наименование;
		НоваяСтрока.Пользователь	 = Регламентное.ИмяПользователя;
		НоваяСтрока.Использование	 = Регламентное.Использование;
		НоваяСтрока.Идентификатор	 = Регламентное.УникальныйИдентификатор;
		НоваяСтрока.Предопределенное = Регламентное.Предопределенное;
		
		Попытка
			
			ПоследнееЗадание = Регламентное.ПоследнееЗадание;
			
		Исключение
			
			ПоследнееЗадание = Неопределено;
			
		КонецПопытки;
		
		Если ПоследнееЗадание <> Неопределено Тогда
			
			НоваяСтрока.Выполнялось	 = ПоследнееЗадание.Начало;
			НоваяСтрока.Состояние	 = ПоследнееЗадание.Состояние;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекущийИдентификатор <> Неопределено Тогда
		
		Строки = СписокРегламентныхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", ТекущийИдентификатор));
		
		Если Строки.Количество() > 0 Тогда
			
			Элементы.СписокРегламентныхЗаданий.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
			
		КонецЕсли;
		
	КонецЕсли;

	Если Идентификаторы.Количество() > 0 Тогда
		
		ВыделенныеСтроки.Очистить();
		
	КонецЕсли;
	
	Для Каждого Идентификатор из Идентификаторы Цикл
		
		Строки = СписокРегламентныхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", ТекущийИдентификатор));
		
		Если Строки.Количество() > 0 Тогда
			
			ВыделенныеСтроки.Добавить(Строки[0].ПолучитьИдентификатор());
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ОбновитьСписокФоновыхЗаданий()
	
	Перем ТекущийИдентификатор;
	
	ТекущаяСтрока = Элементы.СписокФоновыхЗаданий.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда

		ТекущийИдентификатор = СписокФоновыхЗаданий.НайтиПоИдентификатору(ТекущаяСтрока).Идентификатор;
		
	КонецЕсли;
	
	Идентификаторы = Новый Массив;
	
	ВыделенныеСтроки = Элементы.СписокФоновыхЗаданий.ВыделенныеСтроки;
	
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл

		Идентификаторы.Добавить(СписокФоновыхЗаданий.НайтиПоИдентификатору(ВыделеннаяСтрока).Идентификатор);
		
	КонецЦикла;

	СписокФоновыхЗаданий.Очистить();
	
	Отбор = Неопределено;
	
	Если ОтборФоновыхЗаданийВключен = Истина Тогда
		
		Отбор = ОтборФоновыхЗаданий;
		
	КонецЕсли;
	
	Попытка
		
		Фоновые = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
		
	Исключение

		Возврат;
		
	КонецПопытки;

	Для Каждого Фоновое из Фоновые Цикл
		
		НоваяСтрока = СписокФоновыхЗаданий.Добавить();
		
		РегламентноеЗадание = Фоновое.РегламентноеЗадание;
		
		Если РегламентноеЗадание <> Неопределено Тогда
			
			Строка = РегламентноеЗадание.Метаданные.Представление();
			
			Если РегламентноеЗадание.Наименование <> "" Тогда
				
				Строка = Строка + ":" +	РегламентноеЗадание.Наименование;
				
			КонецЕсли;
			
			НоваяСтрока.Регламентное = Строка;
			
		КонецЕсли;
			
		НоваяСтрока.Ключ		 = Фоновое.Ключ;
		НоваяСтрока.Метод		 = Фоновое.ИмяМетода;
		НоваяСтрока.Конец		 = Фоновое.Конец;
		НоваяСтрока.Начало		 = Фоновое.Начало;
		НоваяСтрока.Сервер		 = Фоновое.Расположение;
		НоваяСтрока.Состояние	 = Фоновое.Состояние;
		НоваяСтрока.Наименование = Фоновое.Наименование;
		
		Если Фоновое.ИнформацияОбОшибке <> Неопределено Тогда
			
			НоваяСтрока.Ошибки = Фоновое.ИнформацияОбОшибке.Описание;
			
		КонецЕсли;
		
		НоваяСтрока.Идентификатор	 = Фоновое.УникальныйИдентификатор;
		НоваяСтрока.СостояниеЗадания = Фоновое.Состояние;
		
	КонецЦикла;
	
	Если ТекущийИдентификатор <> Неопределено Тогда
		
		Строки = СписокФоновыхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", ТекущийИдентификатор));
		
		Если Строки.Количество() > 0 Тогда
			
			Элементы.СписокФоновыхЗаданий.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
			
		КонецЕсли;
		
	КонецЕсли;

	Если Идентификаторы.Количество() > 0 Тогда
		
		ВыделенныеСтроки.Очистить();
		
	КонецЕсли;
	
	Для Каждого Идентификатор из Идентификаторы Цикл
		
		Строки = СписокФоновыхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", ТекущийИдентификатор));
		
		Если Строки.Количество() > 0 Тогда
			
			ВыделенныеСтроки.Добавить(Строки[0].ПолучитьИдентификатор());
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОбновитьРегламентныеЗадания(Команда)
	
	ОбновитьСписокРегламентныхЗаданий();
	
КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ВыборРасписанияРасписание(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	Если Результат = Неопределено Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(ПараметрыСценария.Идентификатор));
	
	Если Задание <> Неопределено Тогда 
		
		Задание.Расписание = Результат;
		
		Задание.Записать();
		
		ОбновитьСписокРегламентныхЗаданий();
	
	КонецЕсли;

КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура Расписание(Команда)
	
	ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		
		Строка		 = СписокРегламентныхЗаданий.НайтиПоИдентификатору(ВыделенныеСтроки.Получить(0));
		Расписание	 = ПолучитьРасписаниеРегламентногоЗадания(Строка.Идентификатор);
		
		Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
		
		Диалог.Показать(Новый ОписаниеОповещения("ВыборРасписанияРасписание", ЭтотОбъект, Новый Структура("Идентификатор", Строка.Идентификатор)));
		
	КонецЕсли;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура СписокРегламентныхЗаданийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияОбновитьСписокРегламентныхЗаданий", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.КонсольЗаданий.Форма.ДиалогФоновогоЗадания", Новый Структура("ИдентификаторЗадания", ""), ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура СписокРегламентныхЗаданийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ			 = Истина;
	ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		
		Строка = СписокРегламентныхЗаданий.НайтиПоИдентификатору(ВыделенныеСтроки.Получить(0));

		ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьСписокРегламентныхЗаданий", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.КонсольЗаданий.Форма.ДиалогРегламентногоЗадания", Новый Структура("ИдентификаторЗадания", Строка.Идентификатор), ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура СписокРегламентныхЗаданийПередУдалением(Элемент, Отказ)
	
	Попытка
		
		Отказ = Истина;
		
		УдалитьРегламентноеЗадание();
		
		ОбновитьСписокРегламентныхЗаданий();
		
	Исключение
		
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура УдалитьРегламентноеЗадание()
	
	ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	
	Для Каждого Стр из ВыделенныеСтроки Цикл
		
		РегламентноеЗадание = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(СписокРегламентныхЗаданий.НайтиПоИдентификатору(Стр).Идентификатор);
		
		Если РегламентноеЗадание.Предопределенное Тогда
			
			ВызватьИсключение("Нельзя удалить предопределенное задание: " + РегламентноеЗадание.Наименование);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Стр из ВыделенныеСтроки Цикл

		РегламентноеЗадание = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(СписокРегламентныхЗаданий.НайтиПоИдентификатору(Стр).Идентификатор);
		
		РегламентноеЗадание.Удалить();
		
	КонецЦикла
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОбновитьФоновыеЗадания(Команда)
	
	ОбновитьСписокФоновыхЗаданий();
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОписаниеОповещенияОбновитьСписокФоновыхЗаданий(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	ОбновитьСписокФоновыхЗаданий();	
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура СписокФоновыхЗаданийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Попытка
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияОбновитьСписокФоновыхЗаданий", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.КонсольЗаданий.Форма.ДиалогФоновогоЗадания", Новый Структура("ИдентификаторЗадания", ""), ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	Исключение	
		
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Функция ПолучитьРасписаниеРегламентногоЗадания(УникальныйНомерЗадания)
	
	ОбъектЗадания = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(УникальныйНомерЗадания);
	
	Если ОбъектЗадания = Неопределено Тогда
		
		Возврат Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Возврат ОбъектЗадания.Расписание;
	
КонецФункции
//***********************************************************************************************************
&НаСервере
Функция УстановитьРасписаниеРегламентногоЗадания(Идентификатор, Наименование, Расписание, ИмяЗадания)
	
	ОбъектЗадания = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(Идентификатор);	
	
	Если ОбъектЗадания = Неопределено Тогда
		
		РедОбъектЗадания = РегламентныеЗадания.СоздатьРегламентноеЗадание(ИмяЗадания);
		
		РедОбъектЗадания.Наименование	 = Наименование;
		РедОбъектЗадания.Использование	 = Истина;
		
	Иначе
		
		РедОбъектЗадания = ОбъектЗадания;
		
	КонецЕсли;
	
	РедОбъектЗадания.Расписание = Расписание;
	
	Попытка
		
		РедОбъектЗадания.Записать();
		
	Исключение
		
		ВызватьИсключение "Произошла ошибка при сохранении расписания выполнения обменов. Возможно данные расписания были изменены. Закройте форму настройки и повторите попытку изменения расписания еще раз.
		|Подробное описание ошибки: " + ОписаниеОшибки();
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции
//***********************************************************************************************************
&НаКлиенте
Процедура СписокФоновыхЗаданийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура СписокФоновыхЗаданийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОтменитьФоновоеЗадание(Команда)
	
	Отказ = Истина;
	
	Попытка
		
		ОтменитьФоновыеЗадания();
		ОбновитьСписокФоновыхЗаданий();
		
	Исключение	
		
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ОтменитьФоновыеЗадания()
	
	ВыделенныеСтроки = Элементы.СписокФоновыхЗаданий.ВыделенныеСтроки;
	
	Для Каждого Стр из ВыделенныеСтроки Цикл
		
		Строка = СписокФоновыхЗаданий.НайтиПоИдентификатору(Стр);
		
		ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(Строка.Идентификатор));
		
		Если ФоновоеЗадание <> Неопределено Тогда 
		
			ФоновоеЗадание.Отменить();
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОписаниеОповещенияДиалогНастроекСписка(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	Если Результат = Неопределено Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	АвтообновлениеСпискаРегламентныхЗаданий			 = Результат.Автообновление;
	ПериодАвтообновленияСпискаРегламентныхЗаданий	 = Результат.ПериодАвтообновления;
	
	ОтключитьОбработчикОжидания("ОбработчикАвтообновленияРегламентныхЗаданий");
	
	Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
		
		ПодключитьОбработчикОжидания("ОбработчикАвтообновленияРегламентныхЗаданий", ПериодАвтообновленияСпискаРегламентныхЗаданий);	
		
	КонецЕсли;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура НастройкаСпискаРегламентныхЗаданий(Команда)
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("Автообновление",		 АвтообновлениеСпискаРегламентныхЗаданий);
	СтруктураПараметров.Вставить("ПериодАвтообновления", ПериодАвтообновленияСпискаРегламентныхЗаданий);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияДиалогНастроекСписка", ЭтотОбъект);
		
	ОткрытьФорму("Обработка.КонсольЗаданий.Форма.ДиалогНастроекСписка", СтруктураПараметров, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	

КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОписаниеОповещенияДиалогФоновогоЗадания(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	Если Результат = Неопределено Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	АвтообновлениеСпискаФоновыхЗаданий		 = Результат.Автообновление;
	ПериодАвтообновленияСпискаФоновыхЗаданий = Результат.ПериодАвтообновления;
	
	ОтключитьОбработчикОжидания("ОбработчикАвтообновленияФоновыхЗаданий");
	
	Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
		
		ПодключитьОбработчикОжидания("ОбработчикАвтообновленияФоновыхЗаданий", ПериодАвтообновленияСпискаФоновыхЗаданий);	
		
	КонецЕсли;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура НастройкаСпискаФоновыхЗаданий(Команда)
	
	ВыделенныеСтроки = Элементы.СписокФоновыхЗаданий.ВыделенныеСтроки;
	
	Для Каждого Стр из ВыделенныеСтроки Цикл
		
		Строка = СписокФоновыхЗаданий.НайтиПоИдентификатору(Стр);
		
		СтруктураПараметров = Новый Структура;              
		
		СтруктураПараметров.Вставить("Автообновление",		 АвтообновлениеСпискаФоновыхЗаданий);
		СтруктураПараметров.Вставить("ИдентификаторЗадания", Строка.Идентификатор);
		СтруктураПараметров.Вставить("ПериодАвтообновления", ПериодАвтообновленияСпискаФоновыхЗаданий);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияДиалогФоновогоЗадания", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.КонсольЗаданий.Форма.ДиалогФоновогоЗадания", СтруктураПараметров, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЦикла;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОбработчикАвтообновленияФоновыхЗаданий()
	
	ОбновитьСписокФоновыхЗаданий();
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОбработчикАвтообновленияРегламентныхЗаданий()
	
	ОбновитьСписокРегламентныхЗаданий();
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОписаниеОповещенияДиалогОтбораРегламентногоЗадания(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	Если Результат = Неопределено Тогда 
		
		Возврат;
		
	КонецЕсли;
		
	ОтборРегламентныхЗаданий		 = Результат;
	ОтборРегламентныхЗаданийВключен	 = Истина;
	
	ОбновитьСписокРегламентныхЗаданий();
	
КонецПроцедуры	
//***********************************************************************************************************
&НаКлиенте
Процедура УстановитьОтборРегламентныхЗаданий(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияДиалогОтбораРегламентногоЗадания", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.КонсольЗаданий.Форма.ДиалогОтбораРегламентногоЗадания", Новый Структура("Отбор", ОтборРегламентныхЗаданий), ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОтключитьОтборРегламентныхЗаданий(Команда)
	
	ОтборРегламентныхЗаданийВключен = Ложь;
	
	ОбновитьСписокРегламентныхЗаданий();
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОтключитьОтборФоновыхЗаданий(Команда)
	
	ОтборФоновыхЗаданийВключен = Ложь;
	
	ОбновитьСписокФоновыхЗаданий();
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОписаниеОповещенияДиалогОтбораФоновогоЗадания(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	Если Результат = Неопределено Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	ОтборФоновыхЗаданий			 = Результат;
	ОтборФоновыхЗаданийВключен	 = Истина;
	
	ОбновитьСписокФоновыхЗаданий();
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура УстановитьОтборФоновыхЗаданий(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияДиалогОтбораФоновогоЗадания", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.КонсольЗаданий.Форма.ДиалогОтбораФоновогоЗадания", Новый Структура("Отбор", ОтборФоновыхЗаданий), ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры
//***********************************************************************************************************