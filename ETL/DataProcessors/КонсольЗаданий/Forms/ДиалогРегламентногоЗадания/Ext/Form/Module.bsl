//***********************************************************************************************************
&НаКлиенте
Перем Расписание;
//***********************************************************************************************************
&НаКлиенте
Процедура ОК(Команда)
	
	Если ЗаписатьРегламентноеЗадание(Расписание) Тогда
		
		Закрыть(РегламентноеЗаданиеИД);
		
	КонецЕсли;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ОписаниеОповещенияДиалогРасписанияРегламентногоЗадания(Результат = Неопределено, ПараметрыСценария = Неопределено) Экспорт 
	
	Расписание = Результат;
	
	Элементы.НадписьРасписание.Заголовок = "Выполнять: " + Строка(Расписание);
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ИзменитьРасписаниеНажатие(Элемент)

	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
		
	Диалог.Показать(Новый ОписаниеОповещения("ОписаниеОповещенияДиалогРасписанияРегламентногоЗадания", ЭтотОбъект));
	
КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого Метаданное из Метаданные.РегламентныеЗадания Цикл
		
		Элементы.МетаданныеВыбор.СписокВыбора.Добавить(Метаданное.Имя, Метаданное.Представление());
		
	КонецЦикла;
	
	Попытка
		ПользователиБазы = ПользователиИнформационнойБазы.ПолучитьПользователей();
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = "Ошибка при получении списка пользователей информационной базы: " + ОписаниеОшибки();
		
		Сообщение.Сообщить();
		
		Пользователи = Неопределено;
		
	КонецПопытки;
	
	Если ПользователиБазы <> Неопределено Тогда
		
		Для Каждого Пользователь из ПользователиБазы Цикл
			
			Элементы.ПользователиВыбор.СписокВыбора.Добавить(Пользователь.Имя, Пользователь.ПолноеИмя);
			
		КонецЦикла;
	
	КонецЕсли;

	мВозможностьИзменятьМетаданные = Истина;
	
	РегламентноеЗаданиеИД	 = Параметры.ИдентификаторЗадания;
	РегламентноеЗадание		 = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(РегламентноеЗаданиеИД);
	
	Если РегламентноеЗадание <> Неопределено Тогда
		
		МетаданныеВыбор = РегламентноеЗадание.Метаданные.Имя;
		
		Ключ									 = РегламентноеЗадание.Ключ;
		ИмяМетода 								 = РегламентноеЗадание.Метаданные.ИмяМетода;
		Наименование							 = РегламентноеЗадание.Наименование;
		Использование							 = РегламентноеЗадание.Использование;
		ПользователиВыбор						 = РегламентноеЗадание.ИмяПользователя;
		мВозможностьИзменятьМетаданные			 = Ложь;
		ИнтервалПовтораПриАварийномЗавершении	 = РегламентноеЗадание.ИнтервалПовтораПриАварийномЗавершении;
		КоличествоПовторовПриАварийномЗавершении = РегламентноеЗадание.КоличествоПовторовПриАварийномЗавершении;
		
		Расписание = РегламентноеЗадание.Расписание;
		
	Иначе
		
		Расписание = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Элементы.МетаданныеВыбор.Доступность = мВозможностьИзменятьМетаданные;
	Элементы.НадписьРасписание.Заголовок = "Выполнять: " + Строка(Расписание);

КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Функция ЗаписатьРегламентноеЗадание(Расписание)
	
	Попытка
		
		Если МетаданныеВыбор = Неопределено ИЛИ МетаданныеВыбор = "" Тогда
			
			ВызватьИсключение("Не выбраны метаданные регламентного задания.");
			
		КонецЕсли;
		
		РегламентноеЗадание = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(РегламентноеЗаданиеИД);
		
		Если РегламентноеЗадание = Неопределено Тогда
			
			РегламентноеЗадание		 = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданныеВыбор);
			РегламентноеЗаданиеИД	 = РегламентноеЗадание.УникальныйИдентификатор;
			
		КонецЕсли;
		
		РегламентноеЗадание.Ключ									 = Ключ;
		РегламентноеЗадание.Расписание								 = Расписание;
		РегламентноеЗадание.Наименование							 = Наименование;
		РегламентноеЗадание.Использование							 = Использование;
		РегламентноеЗадание.ИмяПользователя							 = ПользователиВыбор;
		РегламентноеЗадание.ИнтервалПовтораПриАварийномЗавершении	 = ИнтервалПовтораПриАварийномЗавершении;
		РегламентноеЗадание.КоличествоПовторовПриАварийномЗавершении = КоличествоПовторовПриАварийномЗавершении;
		
		РегламентноеЗадание.Записать();
		
	Исключение	
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = "Ошибка: " + ОписаниеОшибки();
		
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции
//***********************************************************************************************************
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Расписание = ПолучитьРасписаниеРегламентногоЗадания(РегламентноеЗаданиеИД);
	
КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Функция ПолучитьРасписаниеРегламентногоЗадания(УникальныйНомерЗадания) Экспорт
	
	ОбъектЗадания = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(УникальныйНомерЗадания);
	
	Если ОбъектЗадания = Неопределено Тогда
		
		Возврат Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Возврат ОбъектЗадания.Расписание;
	
КонецФункции
//***********************************************************************************************************
&НаСервере
Процедура ВыполнитьФоновоеЗадание()
	
	Попытка	
		
	    ФоновоеЗадание = ФоновыеЗадания.Выполнить(ИмяМетода,, Ключ, Наименование);

	Исключение	
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = ОписаниеОшибки();
		
		Сообщение.Сообщить();
		
	КонецПопытки;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ВыполнитьЗадание(Команда)
	
	ВыполнитьФоновоеЗадание();
	
	Закрыть();
	
КонецПроцедуры
//***********************************************************************************************************