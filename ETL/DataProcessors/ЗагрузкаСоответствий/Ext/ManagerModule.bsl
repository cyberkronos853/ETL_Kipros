        
//
// Параметры:
//  Параметры - Структура:
//   * ИмяМакетаСШаблоном - Строка - наименование макета. Например, "ЗагрузкаИзФайла".
//   * ИмяТабличнойЧасти - Строка - Полное имя табличной части. Например, "Документ._ДемоСчетНаОплатуПокупателю.ТабличнаяЧасть.Товары"
//   * ОбязательныеКолонки - Массив из Строка - наименования обязательных для заполнения колонок.
//   * ТипДанныхКолонки - Соответствие из КлючИЗначение:
//      * Ключ - Строка - имя колонки;
//      * Значение - ОписаниеТипов - тип колонки загружаемых данных.
//   * ДополнительныеПараметры - Структура
//
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
    
КонецПроцедуры

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
//
// Параметры:
//   АдресЗагружаемыхДанных    – Строка – адрес временного хранилища с таблицей значений, в которой
//                               находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор – Число – порядковый номер строки;
//     * остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления – Строка – адрес временного хранилища с пустой таблицей значений,
//                               являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей – ТаблицаЗначений – список неоднозначных значений, для которых в ИБ имеется несколько подходящих вариантов.
//       * Колонка       – Строка – имя колонки, в которой была обнаружена неоднозначность;
//       * Идентификатор – Число  – идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   – Строка – полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   – ЛюбойТип – Любые дополнительные сведения.
//
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
   Данные = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления); // ТаблицаЗначений
   ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных);
   
   
   Запрос = Новый Запрос;
   
   Запрос.Текст = "ВЫБРАТЬ
                  |	ЗначенияЭталонов.Ссылка КАК Ссылка,
                  |	ЗначенияЭталонов.Наименование КАК Наименование
                  |ИЗ
                  |	Справочник.ЗначенияЭталонов КАК ЗначенияЭталонов
                  |ГДЕ
                  |	ЗначенияЭталонов.Владелец = &Владелец";
   
   Запрос.УстановитьПараметр("Владелец", ДополнительныеПараметры.ТипЭталона);
   
   ТаблицаЭталон = Запрос.Выполнить().Выгрузить();
   
   
   Для каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		
		СтрокаДанных = Данные.Добавить();
		СтрокаДанных.Идентификатор = СтрокаТаблицы.Идентификатор;
		СтрокаДанных.GUID = СтрокаТаблицы.GUID;
		СтрокаДанных.База = Справочники.Базы.НайтиПоНаименованию(СтрокаТаблицы.База);
		СтрокаДанных.Представление = СтрокаТаблицы.Представление;
		СтрокаЭталон = ТаблицаЭталон.НайтиСтроки(Новый Структура("Наименование", СтрокаТаблицы.Эталон));
		Если СтрокаЭталон <> Неопределено Тогда 
			Если СтрокаЭталон.Количество() = 1 Тогда 
				СтрокаДанных.Эталон = СтрокаЭталон[0].Ссылка;
			ИначеЕсли СтрокаЭталон.Количество() > 1 Тогда
				ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
				ЗаписьОНеоднозначности.Идентификатор = СтрокаТаблицы.Идентификатор;
				ЗаписьОНеоднозначности.Колонка = "Эталон";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Данные, АдресТаблицыСопоставления);




КонецПроцедуры  


// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
// 
// Параметры:
//    ПолноеИмяТабличнойЧасти  – Строка – Полное имя табличной части, в которую загружаются данные.
//    ИмяКолонки               – Строка – Имя колонки, в который возникла неоднозначность. 
//    СписокНеоднозначностей    – Массив  – Массив для заполнения с неоднозначными данными.
//    ЗагружаемыеЗначенияСтрока – Строка  – Загружаемые данные, на основании которых возникла неоднозначность.
//    ДополнительныеПараметры   – ЛюбойТип – Любые дополнительные сведения
//
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, СписокНеоднозначностей, ИмяКолонки, ЗагружаемыеЗначенияСтрока, ДополнительныеПараметры) Экспорт 

	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияЭталонов.Ссылка КАК Ссылка,
	|	ЗначенияЭталонов.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ЗначенияЭталонов КАК ЗначенияЭталонов
	|ГДЕ
	|	ЗначенияЭталонов.Владелец = &Владелец
	| И ЗначенияЭталонов.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Владелец", ДополнительныеПараметры.ТипЭталона); 
	Запрос.УстановитьПараметр("Наименование", ЗагружаемыеЗначенияСтрока[ИмяКолонки]);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока выборка.Следующий() Цикл
		СписокНеоднозначностей.Добавить(Выборка.Ссылка);
	КонецЦикла;   	
	
КонецПроцедуры