&НаКлиенте
Процедура ЗагрузитьДанныеИзФайла(Команда)

	Если Не ЗначениеЗаполнено(Объект.ТипЭталона) Тогда
		Сообщить("Необходимо выбрать тип сопоставляемого эталона");
		Возврат;
	КонецЕсли;
	
    ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
    ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "Обработка.ЗагрузкаСоответствий.Данные";
    ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка данных из файла'");
    ДополнительныеПараметры = Новый Структура();
    ДополнительныеПараметры.Вставить("ТипЭталона", Объект.ТипЭталона);
    ПараметрыЗагрузки.ДополнительныеПараметры = ДополнительныеПараметры;
    Оповещение = Новый ОписаниеОповещения("ЗагрузитьДанныеИзФайлаЗавершение", ЭтотОбъект);
    ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
    
КонецПроцедуры  

&НаКлиенте
Процедура ЗагрузитьДанныеИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
    
    Если АдресЗагруженныхДанных = Неопределено Тогда 
        Возврат;
    КонецЕсли;
    
    ЗагрузитьДанныеИзФайлаНаСервере(АдресЗагруженныхДанных);
КонецПроцедуры 

&НаСервере
Процедура ЗагрузитьДанныеИзФайлаНаСервере(АдресЗагруженныхДанных)
    
    ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
    
    ТоварыДобавлены = Ложь;
    Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
        
        Если Не ЗначениеЗаполнено(СтрокаТаблицы.GUID) Тогда 
            Продолжить;
        КонецЕсли;
        
        НоваяСтрокаДанные = Объект.Данные.Добавить();
        НоваяСтрокаДанные.База = СтрокаТаблицы.База;
        НоваяСтрокаДанные.GUID = СтрокаТаблицы.GUID;
        НоваяСтрокаДанные.Эталон = СтрокаТаблицы.Эталон;
		НоваяСтрокаДанные.Представление = СтрокаТаблицы.Представление;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствияНаСервере()
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбъектыБазКВыгрузке.Ссылка КАК Объект,
	               |	ОбъектыБазКВыгрузке.Владелец КАК База
	               |ИЗ
	               |	Справочник.ОбъектыБазКВыгрузке КАК ОбъектыБазКВыгрузке
	               |ГДЕ
	               |	ОбъектыБазКВыгрузке.СтруктураТаблицы = &Таблица";
	Запрос.УстановитьПараметр("Таблица", Объект.ТаблицаИсточник);      
	
	ТаблицаОбъектовБазКВыгрузке = Запрос.Выполнить().Выгрузить(); 
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбъектыКВыгрузке.Ссылка КАК Объект
	               |ИЗ
	               |	Справочник.ОбъектыКВыгрузке КАК ОбъектыКВыгрузке
	               |ГДЕ
	               |	ОбъектыКВыгрузке.НаименованиеТаблицыSQL = &Таблица";
	Запрос.УстановитьПараметр("Таблица", Объект.ТаблицаИсточник.Наименование);      
	
	ТаблицаОбъектовКВыгрузке = Запрос.Выполнить().Выгрузить();

	
	
	
	Для каждого СтрокаДанных Из Объект.Данные Цикл
		
		Если ЗначениеЗаполнено(СтрокаДанных.База) И ЗначениеЗаполнено(СтрокаДанных.GUID) И ЗначениеЗаполнено(СтрокаДанных.Эталон) Тогда
			
			ПоискОбъекта = ТаблицаОбъектовБазКВыгрузке.Найти(СтрокаДанных.База, "База");
			Если ПоискОбъекта = Неопределено Тогда 
				
				Если ТаблицаОбъектовКВыгрузке.Количество() <> 0 Тогда     
					ОбъектИсточник = ТаблицаОбъектовКВыгрузке[0].Объект;
				Иначе
					Сообщить("Для базы в строке " + Строка(СТрокаДанных.НомерСтроки) + " не удалось определить объект-источник");
					Продолжить;
				КонецЕсли;
			Иначе
				ОбъектИсточник = ПоискОбъекта.Объект; 
			КонецЕсли;
			
			
			РС = РегистрыСведений.СоответствияЭталонов.СоздатьМенеджерЗаписи(); 
			РС.ОбъектИсточник = ОбъектИсточник;
			РС.База = СтрокаДанных.База;
			РС.ГУИДСправочника = СтрокаДанных.GUID;
			РС.ТипЭталона = Объект.ТипЭталона;
			РС.ЗначениеЭталона = СтрокаДанных.Эталон; 
			РС.Представление = СтрокаДанных.Представление; 
			РС.Записать(); 		
			
		Иначе
			
			Сообщить("В строке " + Строка(СТрокаДанных.НомерСтроки) + " не заполнены все необходимые поля");
	
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСоответствия(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ТипЭталона) Тогда
		Сообщить("Необходимо выбрать тип сопоставляемого эталона");
		Возврат;
	КонецЕсли;

	
	Если Не ЗначениеЗаполнено(Объект.ТаблицаИсточник) Тогда
		Сообщить("Не выбрана таблица - источник данных");
		Возврат;
	КонецЕсли;  	
	ЗаписатьСоответствияНаСервере();
КонецПроцедуры

