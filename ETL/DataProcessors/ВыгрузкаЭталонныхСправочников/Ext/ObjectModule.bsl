
Процедура Выгрузить() Экспорт
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	ПутьВыгрузки = Константы.КаталогВыгрузкиДляПрочихСистем.Получить();
	Если ПутьВыгрузки = "" Тогда
		Сообщить("Не указан каталог выгрузки!");
		Возврат;
	КонецЕсли;
	
	ПапкаДляВыгрузки = СоздатьПапкуДляВыгрузки(ПутьВыгрузки);
	ВыгрузитьСправочники(ПапкаДляВыгрузки);
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	
	СтрокаКоманды = "@echo off";
	Обмен.ОбойтиКаталог(ОбменSQL, СтрокаКоманды, НастройкиОбмена, ПапкаДляВыгрузки, "Etalon", "Etalon");
		
	ОбменSQL.ВыполнитьОбмен(СтрокаКоманды);
		
	Попытка
		УдалитьФайлы(ПапкаДляВыгрузки);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ВыгрузитьНастройкиОтчетов() Экспорт
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	ПутьВыгрузки = Константы.КаталогВыгрузкиДляПрочихСистем.Получить();
	Если ПутьВыгрузки = "" Тогда
		Сообщить("Не указан каталог выгрузки!");
		Возврат;
	КонецЕсли;
	
	ПапкаДляВыгрузки = СоздатьПапкуДляВыгрузки(ПутьВыгрузки);
	ВыгрузитьОтчеты(ПапкаДляВыгрузки);
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	
	СтрокаКоманды = "@echo off";
	Обмен.ОбойтиКаталог(ОбменSQL, СтрокаКоманды, НастройкиОбмена, ПапкаДляВыгрузки, "map_report", "map_report");
		
	ОбменSQL.ВыполнитьОбмен(СтрокаКоманды);		
	Попытка
		УдалитьФайлы(ПапкаДляВыгрузки);
	Исключение
	КонецПопытки;	
	
	//ОбменSQL.ВыполнитьКоманду("build_map_Reports", "DECLARE	@return_value int
	//	|EXEC	@return_value = build_map_Reports
	//	|SELECT	@return_value");
	
КонецПроцедуры

Процедура ВыгрузитьНастройкиОтчетовCFI() Экспорт
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	ПутьВыгрузки = Константы.КаталогВыгрузкиДляПрочихСистем.Получить();
	Если ПутьВыгрузки = "" Тогда
		Сообщить("Не указан каталог выгрузки!");
		Возврат;
	КонецЕсли;
	
	ПапкаДляВыгрузки = СоздатьПапкуДляВыгрузки(ПутьВыгрузки);
	ВыгрузитьОтчетыCFI(ПапкаДляВыгрузки);
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	
	СтрокаКоманды = "@echo off";
	Обмен.ОбойтиКаталог(ОбменSQL, СтрокаКоманды, НастройкиОбмена, ПапкаДляВыгрузки, "map_report", "map_report");
		
	ОбменSQL.ВыполнитьОбмен(СтрокаКоманды);		
	Попытка
		УдалитьФайлы(ПапкаДляВыгрузки);
	Исключение
	КонецПопытки;	
	
	//ОбменSQL.ВыполнитьКоманду("build_map_Reports", "DECLARE	@return_value int
	//	|EXEC	@return_value = build_map_Reports
	//	|SELECT	@return_value");
	
КонецПроцедуры

Функция СоздатьПапкуДляВыгрузки(ПутьВыгрузки)
	
	Если Прав(ПутьВыгрузки,1) <> "\" Тогда
		ПутьВыгрузки = ПутьВыгрузки + "\";
	КонецЕсли;
	
	ПапкаДляВыгрузки = ПутьВыгрузки + "Etalon\";
	СоздатьКаталог(ПапкаДляВыгрузки);
	Возврат ПапкаДляВыгрузки;
	
КонецФункции

Функция ПолучитьФайл(ПапкаДляВыгрузки, ИмяФайла, Расширение = ".csv")
	
	СоздатьКаталог(ПапкаДляВыгрузки);
	ЗаписьТекста = Новый ЗаписьТекста(ПапкаДляВыгрузки + ИмяФайла + Расширение);
	
	Возврат ЗаписьТекста;
	
КонецФункции

Функция ПреобразоватьОбъектВЗначение(ОбъектПреобразования, ЕслиNull = "") Экспорт
	
	Если ОбъектПреобразования = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	ТипЗначения = ТипЗнч(ОбъектПреобразования);
	Если ТипЗначения = Тип("Дата") Тогда
		Значение = Формат(ОбъектПреобразования, "ДФ = гггг-ММ-дд");
	ИначеЕсли ТипЗначения = Тип("Число") Тогда
		Значение = Формат(ОбъектПреобразования, "ЧГ=0;ЧН=0;ЧРД=.;ЧДЦ=2");
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		Если ОбъектПреобразования = Истина Тогда
			Значение = "1";
		Иначе
			Значение = "0";
		КонецЕсли;
	ИначеЕсли ОбъектПреобразования = NULL Тогда
		Значение = ЕслиNull;
	Иначе
		Значение = XMLСтрока(СокрЛП(ОбъектПреобразования));	
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция ПолучитьID(Ссылка, Таблица)  Экспорт
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	Соединение  = Новый COMОбъект("ADODB.Connection");	
	Соединение.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + НастройкиОбмена.ИнстансSQL + ";" + "UID=" + НастройкиОбмена.ЛогинSQL + ";" + "PWD=" + НастройкиОбмена.ПарольSQL +";" + "DATABASE=" + НастройкиОбмена.БазаДанныхSQL + ";";
	Соединение.CommandTimeout	 = 600;
    Соединение.ConnectionTimeout = 180;
	Соединение.Open();
	
	Выборка     = Новый COMОбъект("ADODB.RecordSet");
	Выборка.CursorType = 3;
	Выборка.ActiveConnection = Соединение;
	Выборка.Open("Select id from " + Таблица + " where GUID = '" + XMLСтрока(Ссылка) + "'");
	//04.12.2024 Корыткин 
	Если Выборка.EOF() = 0 Тогда
		Выборка.MoveFirst();
		Результат = Выборка.Fields("id").Value;
	Иначе
		Результат = 0;
	КонецЕсли;
	
	Выборка.Close();
	Соединение.Close();  
	
	Возврат Результат; 
	
КонецФункции

Процедура ВыгрузитьСправочники(ПапкаДляВыгрузки)
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	Команда = ОбменSQL.Соединение();
	Команда.CommandText = "
						|TRUNCATE TABLE [dbo].[map_Adjustments]
						|TRUNCATE TABLE [dbo].[map_AssetCategories]
						|TRUNCATE TABLE [dbo].[map_BusinessDirections]
						//|TRUNCATE TABLE [dbo].[map_CashFlows]
						|TRUNCATE TABLE [dbo].[map_CashFlowItems]
						|TRUNCATE TABLE [dbo].[map_ChartOfAccounts]
						|TRUNCATE TABLE [dbo].[map_ClassifierOfFixedAssets]
						|TRUNCATE TABLE [dbo].[map_ConsolidationPerimeters]
						|TRUNCATE TABLE [dbo].[map_CostTypes]
						|TRUNCATE TABLE [dbo].[map_Currencies]
						|TRUNCATE TABLE [dbo].[map_DataTypes]
						|TRUNCATE TABLE [dbo].[map_DebtInstruments]
						|TRUNCATE TABLE [dbo].[map_Expenditures]
						|TRUNCATE TABLE [dbo].[map_InvestmentAndOperationalProjects]
						|TRUNCATE TABLE [dbo].[map_FCR]
						|TRUNCATE TABLE [dbo].[map_LenderTypes]
						|TRUNCATE TABLE [dbo].[map_LoanPortfolio]
						|TRUNCATE TABLE [dbo].[map_NomenclatureGroups]
						|TRUNCATE TABLE [dbo].[map_Organizations] 
						|TRUNCATE TABLE [dbo].[map_PersonnelTypes]
						|TRUNCATE TABLE [dbo].[map_PersonnelTypeMapping]
						|TRUNCATE TABLE [dbo].[map_ProjectTypesAndInvestments]
						|TRUNCATE TABLE [dbo].[map_PurposeOfFunds]
						|TRUNCATE TABLE [dbo].[map_Revenues]
						|TRUNCATE TABLE [dbo].[map_SalesChannels]
						|TRUNCATE TABLE [dbo].[map_SalesMarket]
						|TRUNCATE TABLE [dbo].[map_Scenario]
						|TRUNCATE TABLE [dbo].[map_StagesOfTheProject]
						|TRUNCATE TABLE [dbo].[map_Subholdings]
						|TRUNCATE TABLE [dbo].[map_TerritorialLocations]
						|TRUNCATE TABLE [dbo].[map_TypesOfMovements]
						|TRUNCATE TABLE [dbo].[map_TypesOfMovements_Correspondence]
						|TRUNCATE TABLE [dbo].[map_IND]
						|TRUNCATE TABLE [dbo].[map_KeyPerformanceIndicators]
						|TRUNCATE TABLE [dbo].[map_Versions]";	
	Команда.Execute();

	//Запросы
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Adjustments" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель,
	               |	Спр.КодСправочника КАК КодСправочника
	               |ИЗ
	               |	Справочник.Корректировки КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_AssetCategories" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель,
	               |	Спр.КодСправочника КАК КодСправочника
	               |ИЗ
	               |	Справочник.КатегорииАктивов КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_BusinessDirections" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БизнесНаправления.Ссылка КАК Ссылка,
	               |	БизнесНаправления.Наименование КАК Наименование,
	               |	БизнесНаправления.КодСправочника КАК Код,
	               |	БизнесНаправления.КодСправочника КАК КодСправочника
	               |ИЗ
	               |	Справочник.БизнесНаправления КАК БизнесНаправления";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();

	//ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_CashFlows" + "\";
	//СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ДвиженияДенежныхСредств.Ссылка КАК Ссылка,
	//               |	ДвиженияДенежныхСредств.Наименование КАК Наименование,
	//               |	ДвиженияДенежныхСредств.Код КАК Код,
	//               |	ДвиженияДенежныхСредств.Родитель КАК Родитель
	//               |ИЗ
	//               |	Справочник.ДвиженияДенежныхСредств КАК ДвиженияДенежныхСредств";
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	//Пока Выборка.Следующий() Цикл	
	//	СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
	//		+ СокрЛП(Выборка.Наименование) + Символы.Таб 
	//		+ СокрЛП(Выборка.Код) +  Символы.Таб
	//		+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
	//	Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	//КонецЦикла;
	//Файл.Закрыть();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_CashFlowItems" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатьиДвиженияДенежныхСредств.Ссылка КАК Ссылка,
	               |	СтатьиДвиженияДенежныхСредств.Наименование КАК Наименование,
	               |	СтатьиДвиженияДенежныхСредств.КодСправочника КАК Код,
	               |	СтатьиДвиженияДенежныхСредств.Родитель КАК Родитель,
	               |	СтатьиДвиженияДенежныхСредств.КодСправочника КАК КодСправочника
	               |ИЗ
	               |	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
			//СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			//+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			//+ СокрЛП(Выборка.Код) +  Символы.Таб
			//+ XMLСтрока(Выборка.Родитель) +  Символы.Таб
			//+ Формат(Выборка.ЭтоГруппа, "БИ=1;БЛ=0") +  Символы.Таб
			//+ СокрЛП(Выборка.РазрезДеятельности) + Символы.Таб
			//+ СокрЛП(Выборка.ВидДвижения) + Символы.Таб
			//+ XMLСтрока(Выборка.ДвижениеДенежныхСредств) +  Символы.Таб;
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.КодСправочника) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_ChartOfAccounts" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПланСчетов.Ссылка КАК Ссылка,
	               |	ПланСчетов.Наименование КАК Наименование,
	               |	ПланСчетов.КодСправочника КАК Код,
	               |	ПланСчетов.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ПланСчетов КАК ПланСчетов";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_ClassifierOfFixedAssets" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КлассификаторОсновныхФондов.Ссылка КАК Ссылка,
	               |	КлассификаторОсновныхФондов.Наименование КАК Наименование,
	               |	КлассификаторОсновныхФондов.Код КАК Код,
	               |	КлассификаторОсновныхФондов.Родитель КАК Родитель,
	               |	КлассификаторОсновныхФондов.КодКОФ КАК КодКОФ,
	               |	КлассификаторОсновныхФондов.КатегорияАктива КАК КатегорияАктива
	               |ИЗ
	               |	Справочник.КлассификаторОсновныхФондов КАК КлассификаторОсновныхФондов";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб
			+ СокрЛП(Выборка.КодКОФ) +  Символы.Таб
			+ XMLСтрока(Выборка.КатегорияАктива) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_ConsolidationPerimeters" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ПериметрыКонсолидации КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_CostTypes" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ТипыЗатрат КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Currencies" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.БуквенныйКод КАК БуквенныйКод,
	               |	Спр.КодКлассификатора КАК КодКлассификатора,
	               |	Спр.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Валюты КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ СокрЛП(Выборка.БуквенныйКод) +  Символы.Таб
			+ СокрЛП(Выборка.КодКлассификатора) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_DataTypes" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код
	               |ИЗ
	               |	Справочник.ТипыДанных КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_DebtInstruments" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код
	               |ИЗ
	               |	Справочник.ДолговыеИнструменты КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Expenditures" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатьиЗатрат.Ссылка КАК Ссылка,
	               |	СтатьиЗатрат.Наименование КАК Наименование,
	               |	СтатьиЗатрат.КодСправочника КАК Код,
	               |	СтатьиЗатрат.Родитель КАК Родитель,
	               |	СтатьиЗатрат.ФЦО КАК ФЦО
	               |ИЗ
	               |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб
			+ XMLСтрока(Выборка.ФЦО) +  Символы.Таб;
			//+ Формат(Выборка.ЭтоГруппа, "БИ=1;БЛ=0") +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_FCR" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ФЦО КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_InvestmentAndOperationalProjects" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ИнвестиционныеИОперационныеПроекты КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_LenderTypes" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ТипыКредиторов КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_LoanPortfolio" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.КредитныйПортфель КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_NomenclatureGroups" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыИУслуги.Ссылка КАК Ссылка,
	               |	ТоварыИУслуги.Наименование КАК Наименование,
	               |	ТоварыИУслуги.КодСправочника КАК Код,
	               |	ТоварыИУслуги.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ТоварыИУслуги КАК ТоварыИУслуги";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
			//+ Формат(Выборка.ЭтоГруппа, "БИ=1;БЛ=0") +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Organizations" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.Ссылка КАК Ссылка,
	               |	Организации.Наименование КАК Наименование,
	               |	Организации.БИН КАК БИН,
	               |	Организации.БизнесНаправление КАК БизнесНаправление,
	               |	Организации.ТерриториальноеРасположение КАК ТерриториальноеРасположение,
	               |	Организации.Субхолдинг КАК Субхолдинг,
	               |	Организации.ВалютаУчета КАК ВалютаУчета,
	               |	Организации.КодСправочника КАК КодСправочника
	               |ИЗ
	               |	Справочник.Организации КАК Организации";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.БИН) +  Символы.Таб
			+ XMLСтрока(Выборка.ТерриториальноеРасположение) +  Символы.Таб
			+ XMLСтрока(Выборка.БизнесНаправление) +  Символы.Таб
			+ XMLСтрока(Выборка.Субхолдинг) +  Символы.Таб
			+ XMLСтрока(Выборка.ВалютаУчета) +  Символы.Таб
			+ XMLСтрока(Выборка.КодСправочника) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
		
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_PersonnelTypes" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ВидыПерсонала КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_PersonnelTypeMapping" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкаВидаПерсонала.СчетУчета КАК СчетУчета,
	               |	НастройкаВидаПерсонала.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	НастройкаВидаПерсонала.ВидПерсонала КАК ВидПерсонала
	               |ИЗ
	               |	РегистрСведений.НастройкаВидаПерсонала КАК НастройкаВидаПерсонала";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.СчетУчета) + Символы.Таб 
			+ XMLСтрока(Выборка.СтатьяЗатрат) + Символы.Таб 
			+ XMLСтрока(Выборка.ВидПерсонала) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_ProjectTypesAndInvestments" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ТипПроектаИИнвестиции КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
		
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_PurposeOfFunds" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ЦелевоеЗначениеСредств КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Revenues" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доходы.Ссылка КАК Ссылка,
	               |	Доходы.Наименование КАК Наименование,
	               |	Доходы.КодСправочника КАК Код,
	               |	Доходы.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.Доходы КАК Доходы";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб;
			//+ Формат(Выборка.ЭтоГруппа, "БИ=1;БЛ=0") +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_SalesChannels" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.КаналыПродаж КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_SalesMarket" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель,
	               |	Спр.КодКлассификатора КАК КодКлассификатора
	               |ИЗ
	               |	Справочник.КлассификаторСтранМира КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб
			+ СокрЛП(Выборка.КодКлассификатора) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Scenario" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сценарии.Ссылка КАК Ссылка,
	               |	Сценарии.Наименование КАК Наименование,
	               |	Сценарии.КодСправочника КАК Код
	               |ИЗ
	               |	Справочник.Сценарии КАК Сценарии";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_StagesOfTheProject" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.СтадииПроекта КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Subholdings" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Субхолдинги.Ссылка КАК Ссылка,
	               |	Субхолдинги.Наименование КАК Наименование,
	               |	Субхолдинги.КодСправочника КАК Код,
	               |	Субхолдинги.ИИН КАК ИИН
	               |ИЗ
	               |	Справочник.Субхолдинги КАК Субхолдинги";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.ИИН) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_TerritorialLocations" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТерриториальноеРасположение.Ссылка КАК Ссылка,
	               |	ТерриториальноеРасположение.Наименование КАК Наименование,
	               |	ТерриториальноеРасположение.КодСправочника КАК Код
	               |ИЗ
	               |	Справочник.ТерриториальноеРасположение КАК ТерриториальноеРасположение";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_TypesOfMovements" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыДвижения.Ссылка КАК Ссылка,
	               |	ВидыДвижения.Наименование КАК Наименование,
	               |	ВидыДвижения.КодСправочника КАК Код
	               |ИЗ
	               |	Справочник.ВидыДвижения КАК ВидыДвижения";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_TypesOfMovements_Correspondence" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ВложенныйЗапрос.Ссылка) КАК Ссылка,
	               |	ВложенныйЗапрос.Счет КАК Счет,
	               |	ВложенныйЗапрос.КорСчет КАК КорСчет,
	               |	ВложенныйЗапрос.ДтКт КАК ДтКт,
	               |	МАКСИМУМ(ВложенныйЗапрос.Остаток) КАК Остаток
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		МАКСИМУМ(ВидыДвиженияКорреспонденция.Ссылка) КАК Ссылка,
	               |		ВидыДвиженияКорреспонденция.Счет КАК Счет,
	               |		ВидыДвиженияКорреспонденция.КорСчет КАК КорСчет,
	               |		ВЫБОР
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |				ТОГДА ""Дт""
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |				ТОГДА ""Кт""
	               |			ИНАЧЕ """"
	               |		КОНЕЦ КАК ДтКт,
	               |		""0"" КАК Остаток
	               |	ИЗ
	               |		Справочник.ВидыДвижения.Корреспонденция КАК ВидыДвиженияКорреспонденция
	               |	ГДЕ
	               |		ВЫБОР
	               |				КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |						ИЛИ ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВидыДвиженияКорреспонденция.Счет,
	               |		ВидыДвиженияКорреспонденция.КорСчет,
	               |		ВЫБОР
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |				ТОГДА ""Дт""
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |				ТОГДА ""Кт""
	               |			ИНАЧЕ """"
	               |		КОНЕЦ
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		МАКСИМУМ(ВидыДвиженияКорреспонденция.Ссылка),
	               |		ВидыДвиженияКорреспонденция.КорСчет,
	               |		ВидыДвиженияКорреспонденция.Счет,
	               |		ВЫБОР
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |				ТОГДА ""Дт""
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |				ТОГДА ""Кт""
	               |			ИНАЧЕ """"
	               |		КОНЕЦ,
	               |		""0""
	               |	ИЗ
	               |		Справочник.ВидыДвижения.Корреспонденция КАК ВидыДвиженияКорреспонденция
	               |	ГДЕ
	               |		ВЫБОР
	               |				КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |						ИЛИ ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВЫБОР
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |				ТОГДА ""Дт""
	               |			КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |				ТОГДА ""Кт""
	               |			ИНАЧЕ """"
	               |		КОНЕЦ,
	               |		ВидыДвиженияКорреспонденция.КорСчет,
	               |		ВидыДвиженияКорреспонденция.Счет
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		МАКСИМУМ(ВидыДвиженияКорреспонденция.Ссылка),
	               |		ВидыДвиженияКорреспонденция.Счет,
	               |		"""",
	               |		"""",
	               |		""1""
	               |	ИЗ
	               |		Справочник.ВидыДвижения.Корреспонденция КАК ВидыДвиженияКорреспонденция
	               |	ГДЕ
	               |		ВЫБОР
	               |				КОГДА ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |						ИЛИ ВидыДвиженияКорреспонденция.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |					ТОГДА ЛОЖЬ
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВидыДвиженияКорреспонденция.Счет) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Счет,
	               |	ВложенныйЗапрос.КорСчет,
	               |	ВложенныйЗапрос.ДтКт";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Счет) + Символы.Таб 
			+ XMLСтрока(Выборка.КорСчет) +  Символы.Таб
			+ Выборка.ДтКт + Символы.Таб
			+ Выборка.Остаток + Символы.Таб
			+ XMLСтрока(Выборка.Ссылка) + Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_IND" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	INDПрочиеПоказатели.Ссылка КАК Ссылка,
	               |	INDПрочиеПоказатели.Наименование КАК Наименование,
	               |	INDПрочиеПоказатели.КодСправочника КАК Код,
	               |	INDПрочиеПоказатели.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.INDПрочиеПоказатели КАК INDПрочиеПоказатели";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	
	
	
	
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_KeyPerformanceIndicators" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КлючевыеПоказателиДеятельности.Ссылка КАК Ссылка,
	               |	КлючевыеПоказателиДеятельности.Наименование КАК Наименование,
	               |	КлючевыеПоказателиДеятельности.КодСправочника КАК Код,
	               |	КлючевыеПоказателиДеятельности.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.КлючевыеПоказателиДеятельности КАК КлючевыеПоказателиДеятельности";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	
	
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_Versions" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Спр.Ссылка КАК Ссылка,
	               |	Спр.Наименование КАК Наименование,
	               |	Спр.КодСправочника КАК Код,
	               |	Спр.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.Версии КАК Спр";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ИнтеграцияДЗО.ЗаписатьСправочникВ_SQL("КлючевыеПоказателиДеятельности","map_KeyPerformanceIndicators");
	ИнтеграцияДЗО.ЗаписатьСправочникВ_SQL("INDПрочиеПоказатели","map_IND");
	Документы.ПрочиеПоказателиMDM.ОтправитьВSQLНаСервере();
		
КонецПроцедуры

Процедура ВыгрузитьОтчеты(ПапкаДляВыгрузки)
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	Команда = ОбменSQL.Соединение();
	Команда.CommandText = "
						|TRUNCATE TABLE [dbo].[map_rpt_Reports]
						|TRUNCATE TABLE [dbo].[map_rpt_ReportLines]
						|TRUNCATE TABLE [dbo].[map_rpt_ReportLineStructures]
						|TRUNCATE TABLE [dbo].[map_rpt_Output]";	
	Команда.Execute();
	
	//Запросы
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_rpt_Reports" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Бюджеты.Ссылка КАК Ссылка,
	               |	Бюджеты.Наименование КАК Наименование,
	               |	Бюджеты.Код КАК Код
	               |ИЗ
	               |	Справочник.Бюджеты КАК Бюджеты
	               |ГДЕ
	               |	НЕ Бюджеты.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_rpt_ReportLines" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатьиБюджетов.Ссылка КАК Ссылка,
	               |	СтатьиБюджетов.Наименование КАК Наименование,
	               |	СтатьиБюджетов.КодСправочника КАК Код,
	               |	СтатьиБюджетов.ВидДвижения КАК ВидДвижения,
	               |	СтатьиБюджетов.Родитель КАК Родитель,
	               |	СтатьиБюджетов.Владелец КАК Владелец,
	               |	СтатьиБюджетов.АналитикаПоКомпаниям КАК АналитикаПоКомпаниям,
	               |	СтатьиБюджетов.АналитикаПоВалюте КАК АналитикаПоВалюте,
	               |	СтатьиБюджетов.АналитикаПоСценариям КАК АналитикаПоСценариям,
	               |	СтатьиБюджетов.АналитикаПоВерсии КАК АналитикаПоВерсии,
	               |	СтатьиБюджетов.АналитикаПоЭлементамЗатрат КАК АналитикаПоЭлементамЗатрат,
	               |	СтатьиБюджетов.АналитикаПоЭлементамДоходов КАК АналитикаПоЭлементамДоходов,
	               |	СтатьиБюджетов.АналитикаПоТоварыПродукцияУслуги КАК АналитикаПоТоварыПродукцияУслуги,
	               |	СтатьиБюджетов.АналитикаПоКонтрагентам КАК АналитикаПоКонтрагентам,
	               |	СтатьиБюджетов.АналитикаПоРынкамСбыта КАК АналитикаПоРынкамСбыта,
	               |	СтатьиБюджетов.АналитикаПоКаналамПродаж КАК АналитикаПоКаналамПродаж,
	               |	СтатьиБюджетов.АналитикаПоВидамПерсонала КАК АналитикаПоВидамПерсонала,
	               |	СтатьиБюджетов.АналитикаПоКатегориямАктива КАК АналитикаПоКатегориямАктива,
	               |	СтатьиБюджетов.АналитикаПоВидамДвижения КАК АналитикаПоВидамДвижения
	               |ИЗ
	               |	Справочник.СтатьиБюджетов КАК СтатьиБюджетов
	               |ГДЕ
	               |	НЕ СтатьиБюджетов.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл
		ВидДвижения = "";
		Если ЗначениеЗаполнено(Выборка.ВидДвижения) Тогда
			Если Выборка.ВидДвижения = Перечисления.ТипыДвиженияДтКт.ОборотДт Тогда
				ВидДвижения = "2";
			ИначеЕсли Выборка.ВидДвижения = Перечисления.ТипыДвиженияДтКт.ОборотКт Тогда
				ВидДвижения = "3";	
			Иначе
				ВидДвижения = "1";
			КонецЕсли;
		КонецЕсли;
		СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
			+ СокрЛП(Выборка.Наименование) + Символы.Таб 
			+ СокрЛП(Выборка.Код) + Символы.Таб
			+ ВидДвижения + Символы.Таб
			+ XMLСтрока(Выборка.Родитель) +  Символы.Таб
			+ XMLСтрока(Выборка.Владелец) +  Символы.Таб
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоКомпаниям, "0") +  Символы.Таб //[Company]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоВалюте, "0") +  Символы.Таб //[Currency] 
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоСценариям, "0") +  Символы.Таб //[Scenario] 
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоВерсии, "0") +  Символы.Таб //[Version] 
			+ "0" +  Символы.Таб//[DataType] 
			+ "0" + Символы.Таб //[Subholding]
			+ "0" + Символы.Таб //[BusinessDirection]
			+ "0" + Символы.Таб //[TerritorialLocation]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоЭлементамЗатрат, "0") +  Символы.Таб //[Expenditure]
			+ "0" + Символы.Таб //[FCR]
			+ "0" + Символы.Таб //[CostType]
			+ "0" + Символы.Таб //[CashFlowItem]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоЭлементамДоходов, "0") + Символы.Таб //[Revenue]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоТоварыПродукцияУслуги, "0") + Символы.Таб //[NomenclatureGroup]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоКонтрагентам, "0") + Символы.Таб //[Counterparty]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоРынкамСбыта, "0") + Символы.Таб //[SalesMarket]
			+ "0" + Символы.Таб //[LenderType]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоКаналамПродаж, "0") + Символы.Таб //[SalesChannel]  
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоВидамПерсонала, "0") + Символы.Таб  //[PersonnelType]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоКатегориямАктива, "0") + Символы.Таб //[AssetCategory]
			+ "0" + Символы.Таб //[ProjectTypeAndInvestment]
			+ "0" + Символы.Таб //[StageOfTheProject]
			+ "0" + Символы.Таб //[Adjustment]
			+ "0" + Символы.Таб //[ConsolidationPerimeters]
			+ "0" + Символы.Таб //[DebtInstrument]
			+ "0" + Символы.Таб //[InvestmentAndOperationalProject]
			+ "0" + Символы.Таб //[LoanPortfolio]
			+ ПреобразоватьОбъектВЗначение(Выборка.АналитикаПоВидамДвижения, "0") + Символы.Таб //[TypesOfMovement]
			+ "0" + Символы.Таб; //[PurposeOfFunds]
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть();
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_rpt_ReportLineStructures" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатьиБюджетовСчета.Ссылка КАК Ссылка,
	               |	СтатьиБюджетовСчета.Ссылка.Владелец КАК Владелец,
	               |	СтатьиБюджетовСчета.Счет КАК Счет
	               |ИЗ
	               |	Справочник.СтатьиБюджетов.Счета КАК СтатьиБюджетовСчета
	               |ГДЕ
	               |	НЕ СтатьиБюджетовСчета.Счет.Ссылка ЕСТЬ NULL";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	Пока Выборка.Следующий() Цикл	
		СтрокаВыгрузки = XMLСтрока(Выборка.Владелец) + Символы.Таб //[Report] 
			+ XMLСтрока(Выборка.Ссылка) + Символы.Таб //[ReportLine]
			+ "0" + Символы.Таб //[IsExcluded]
			+ "0" + Символы.Таб //[Company]
			+ ПреобразоватьОбъектВЗначение(ПолучитьID(Выборка.Счет, "map_ChartOfAccounts")) + Символы.Таб //[Account]
			+ "0" + Символы.Таб //[CorAccount]
			+ "0" + Символы.Таб //[Currency]
			+ "0" + Символы.Таб //[Scenario]
			+ "0" + Символы.Таб //[Version]
			+ "0" + Символы.Таб //[DataType]
			+ "0" + Символы.Таб //[Subholding]
			+ "0" + Символы.Таб //[BusinessDirection]
			+ "0" + Символы.Таб //[TerritorialLocation]
			+ "0" + Символы.Таб //[Expenditure]
			+ "0" + Символы.Таб //[FCR]
			+ "0" + Символы.Таб //[CostType]
			+ "0" + Символы.Таб //[CashFlowItem]
			+ "0" + Символы.Таб //[Revenue]
			+ "0" + Символы.Таб //[NomenclatureGroup]
			+ "0" + Символы.Таб //[Counterparty]
			+ "0" + Символы.Таб //[SalesMarket]
			+ "0" + Символы.Таб //[LenderType]
			+ "0" + Символы.Таб //[SalesChannel]
			+ "0" + Символы.Таб //[PersonnelType]
			+ "0" + Символы.Таб //[AssetCategory]
			+ "0" + Символы.Таб //[ProjectTypeAndInvestment]
			+ "0" + Символы.Таб //[StageOfTheProject]
			+ "0" + Символы.Таб //[Adjustment]
			+ "0" + Символы.Таб //[ConsolidationPerimeters]
			+ "0" + Символы.Таб //[DebtInstrument]
			+ "0" + Символы.Таб //[InvestmentAndOperationalProject]
			+ "0" + Символы.Таб //[LoanPortfolio]
			+ "0" + Символы.Таб //[TypesOfMovement]
			+ "0" + Символы.Таб; //[PurposeOfFunds]	
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла; 
	Файл.Закрыть();  
	
		
КонецПроцедуры

Процедура ВыгрузитьОтчетыCFI(ПапкаДляВыгрузки)
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	Команда = ОбменSQL.Соединение();
	Команда.CommandText = "
						|TRUNCATE TABLE [dbo].[map_rpt_ReportLineCFIStructures]";	
	Команда.Execute();
	
	
	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_rpt_ReportLineCFIStructures" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ 
	               |	СтатьиБюджетовНастройкаCFI.Ссылка КАК Ссылка,
	               |	СтатьиБюджетовНастройкаCFI.Ссылка.Владелец КАК Владелец,
	               |	СтатьиБюджетовНастройкаCFI.ЭлементСправочника КАК ЭлементСправочника,
	               |	СтатьиБюджетовНастройкаCFI.Знак КАК Знак,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(СтатьиБюджетовНастройкаCFI.ЭлементСправочника) = ТИП(Справочник.СтатьиЗатрат)
	               |			ТОГДА СтатьиБюджетовНастройкаCFI.ЭлементСправочника
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК СтатьяЗатрат,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(СтатьиБюджетовНастройкаCFI.ЭлементСправочника) = ТИП(Справочник.Доходы)
	               |			ТОГДА СтатьиБюджетовНастройкаCFI.ЭлементСправочника
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК СтатьяДоходов,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(СтатьиБюджетовНастройкаCFI.ЭлементСправочника) = ТИП(Справочник.СтатьиБюджетов)
	               |			ТОГДА СтатьиБюджетовНастройкаCFI.ЭлементСправочника
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК СтатьяБюджета,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(СтатьиБюджетовНастройкаCFI.ЭлементСправочника) = ТИП(Справочник.СтатьиДвиженияДенежныхСредств)
	               |			ТОГДА СтатьиБюджетовНастройкаCFI.ЭлементСправочника
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	               |	ВЫБОР
	               |		КОГДА СтатьиБюджетовНастройкаCFI.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотДт)
	               |			ТОГДА ""Дт""
	               |		КОГДА СтатьиБюджетовНастройкаCFI.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДтКт.ОборотКт)
	               |			ТОГДА ""Кт""
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ДтКт,
	               |	СтатьиБюджетовНастройкаCFI.ВидДвижения КАК ВидДвижения
	               |ИЗ
	               |	Справочник.СтатьиБюджетов.НастройкаCFI КАК СтатьиБюджетовНастройкаCFI
	               |ГДЕ
	               |	НЕ СтатьиБюджетовНастройкаCFI.ЭлементСправочника.Ссылка ЕСТЬ NULL";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = ПолучитьФайл(ПапкаДляВыгрузкиОбъекта, "data");	
	
	Пока Выборка.Следующий() Цикл 
		естьЗапись = Ложь;
		
		Ссылка  						= Выборка.Ссылка;	
		СтатьяЗатрат 					= Выборка.СтатьяЗатрат;
		СтатьяДвиженияДенежныхСредств	= Выборка.СтатьяДвиженияДенежныхСредств;
		СтатьяДоходов 					= Выборка.СтатьяДоходов;
		СтатьяБюджета 					= Выборка.СтатьяБюджета;
		ВидДвижения 					= Выборка.ВидДвижения;
		Знак 							= Выборка.Знак;
		
		//Если ЗначениеЗаполнено(СтатьяЗатрат) Тогда
		//	Запрос = Новый Запрос();                          
		//	Запрос.Текст = "ВЫБРАТЬ
		//	|	СтатьиЗатрат.Ссылка КАК Статья
		//	|ИЗ
		//	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		//	|ГДЕ
		//	|	СтатьиЗатрат.Родитель = &Родитель"; 
		//	Запрос.УстановитьПараметр("Родитель",СтатьяЗатрат);   
		//	Рез = Запрос.Выполнить().Выбрать(); 
		//	Пока рез.Следующий() Цикл
		//		//ДобавитьЗапись(Ссылка,рез.Статья,СтатьяДоходов,СтатьяДвиженияДенежныхСредств,СтатьяБюджета,ВидДвижения,Знак);	
		//		
		//		СтрокаВыгрузки = XMLСтрока(Ссылка) + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(рез.Статья),ПреобразоватьОбъектВЗначение(ПолучитьID(рез.Статья, "map_Expenditures"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредств),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДвиженияДенежныхСредств, "map_CashFlowItems"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяДоходов),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДоходов, "map_Revenues"),"0"),"0") + Символы.Таб 
		//		+ ?(Знак=0,1,Знак) + Символы.Таб
		//		+ ?(ЗначениеЗаполнено(СтатьяБюджета),ПолучитьID(СтатьяБюджета, "map_rpt_ReportLines"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(ВидДвижения),ПолучитьID(ВидДвижения, "map_TypesOfMovements"),"0") + Символы.Таб;   
		//		
		//		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
		//		
		//		естьЗапись = истина;
		//	КонецЦикла;	
		//	
		//КонецЕсли;
		//
		//
		//Если ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредств) Тогда
		//	Запрос = Новый Запрос();                          
		//	Запрос.Текст = "ВЫБРАТЬ
		//	               |	СтатьиДвиженияДенежныхСредств.Ссылка КАК Статья
		//	               |ИЗ
		//	               |	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		//	               |ГДЕ
		//	               |	СтатьиДвиженияДенежныхСредств.Родитель = &Родитель"; 
		//	Запрос.УстановитьПараметр("Родитель",СтатьяДвиженияДенежныхСредств);   
		//	Рез = Запрос.Выполнить().Выбрать(); 
		//	Пока рез.Следующий() Цикл
		//		//ДобавитьЗапись(Ссылка,СтатьяЗатрат,СтатьяДоходов,рез.Статья,СтатьяБюджета,ВидДвижения,Знак);	
		//		СтрокаВыгрузки = XMLСтрока(Ссылка) + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяЗатрат),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяЗатрат, "map_Expenditures"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(рез.Статья),ПреобразоватьОбъектВЗначение(ПолучитьID(рез.Статья, "map_CashFlowItems"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяДоходов),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДоходов, "map_Revenues"),"0"),"0") + Символы.Таб 
		//		+ ?(Знак=0,1,Знак) + Символы.Таб
		//		+ ?(ЗначениеЗаполнено(СтатьяБюджета),ПолучитьID(СтатьяБюджета, "map_rpt_ReportLines"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(ВидДвижения),ПолучитьID(ВидДвижения, "map_TypesOfMovements"),"0") + Символы.Таб;   
		//		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
		//		естьЗапись = истина;
		//	КонецЦикла;	
		//	
		//КонецЕсли;
		//

		//Если ЗначениеЗаполнено(СтатьяДоходов) Тогда
		//	Запрос = Новый Запрос();                          
		//	Запрос.Текст = "ВЫБРАТЬ
		//	               |	Доходы.Ссылка КАК Статья
		//	               |ИЗ
		//	               |	Справочник.Доходы КАК Доходы
		//	               |ГДЕ
		//	               |	Доходы.Родитель = &Родитель"; 
		//	Запрос.УстановитьПараметр("Родитель",СтатьяДоходов);   
		//	Рез = Запрос.Выполнить().Выбрать(); 
		//	Пока рез.Следующий() Цикл
		//		//ДобавитьЗапись(Ссылка,СтатьяЗатрат,рез.Статья,СтатьяДвиженияДенежныхСредств,СтатьяБюджета,ВидДвижения,Знак);	
		//		СтрокаВыгрузки = XMLСтрока(Ссылка) + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяЗатрат),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяЗатрат, "map_Expenditures"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредств),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДвиженияДенежныхСредств, "map_CashFlowItems"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяДоходов),ПреобразоватьОбъектВЗначение(ПолучитьID(рез.Статья, "map_Revenues"),"0"),"0") + Символы.Таб 
		//		+ ?(Знак=0,1,Знак) + Символы.Таб
		//		+ ?(ЗначениеЗаполнено(СтатьяБюджета),ПолучитьID(СтатьяБюджета, "map_rpt_ReportLines"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(ВидДвижения),ПолучитьID(ВидДвижения, "map_TypesOfMovements"),"0") + Символы.Таб;   
		//		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
		//		естьЗапись = истина;
		//	КонецЦикла;	
		//	
		//КонецЕсли;
		//
		//Если ЗначениеЗаполнено(СтатьяБюджета) Тогда
		//	Запрос = Новый Запрос();                          
		//	Запрос.Текст = "ВЫБРАТЬ
		//	               |	СтатьиБюджетов.Ссылка КАК Статья
		//	               |ИЗ
		//	               |	Справочник.СтатьиБюджетов КАК СтатьиБюджетов
		//	               |ГДЕ
		//	               |	СтатьиБюджетов.Родитель = &Родитель"; 
		//	Запрос.УстановитьПараметр("Родитель",СтатьяБюджета);   
		//	Рез = Запрос.Выполнить().Выбрать(); 
		//	Пока рез.Следующий() Цикл
		//		//ДобавитьЗапись(Ссылка,СтатьяЗатрат,СтатьяДоходов,СтатьяДвиженияДенежныхСредств,рез.Статья,ВидДвижения,Знак);	
		//		СтрокаВыгрузки = XMLСтрока(Ссылка) + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяЗатрат),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяЗатрат, "map_Expenditures"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредств),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДвиженияДенежныхСредств, "map_CashFlowItems"),"0"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(СтатьяДоходов),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДоходов, "map_Revenues"),"0"),"0") + Символы.Таб 
		//		+ ?(Знак=0,1,Знак) + Символы.Таб
		//		+ ?(ЗначениеЗаполнено(рез.Статья),ПолучитьID(рез.Статья, "map_rpt_ReportLines"),"0") + Символы.Таб 
		//		+ ?(ЗначениеЗаполнено(ВидДвижения),ПолучитьID(ВидДвижения, "map_TypesOfMovements"),"0") + Символы.Таб;   
		//		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
		//		естьЗапись = истина;
		//	КонецЦикла;	
		//КонецЕсли; 
		//
		Если ЗначениеЗаполнено(ВидДвижения) Тогда
		а=1;	
		КонецЕсли;
		//
		//
		//если Не естьЗапись Тогда
			//ДобавитьЗапись(Ссылка,СтатьяЗатрат,СтатьяДоходов,СтатьяДвиженияДенежныхСредств,СтатьяБюджета,ВидДвижения,Знак);	
				СтрокаВыгрузки = XMLСтрока(Выборка.Ссылка) + Символы.Таб 
				//+ "0" + Символы.Таб 
				//+ "0" + Символы.Таб 
				//+ "0" + Символы.Таб 
				//+ "0" + Символы.Таб 
				//+ "0" + Символы.Таб 
				//+ "1" + Символы.Таб; 
				+ ?(ЗначениеЗаполнено(СтатьяЗатрат),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяЗатрат, "map_Expenditures"),"0"),"0") + Символы.Таб 
				+ ?(ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредств),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДвиженияДенежныхСредств, "map_CashFlowItems"),"0"),"0") + Символы.Таб 
				+ ?(ЗначениеЗаполнено(СтатьяДоходов),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяДоходов, "map_Revenues"),"0"),"0") + Символы.Таб 
				+ ?(ЗначениеЗаполнено(СтатьяБюджета),ПреобразоватьОбъектВЗначение(ПолучитьID(СтатьяБюджета, "map_rpt_ReportLines"),"0"),"0") + Символы.Таб 
				+ ?(ЗначениеЗаполнено(ВидДвижения),ПреобразоватьОбъектВЗначение(ПолучитьID(ВидДвижения, "map_TypesOfMovements"),"0"),"0") + Символы.Таб
				+ ?(Знак=0,1,Знак) + Символы.Таб;
				Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
		//КонецЕсли; 
		
	КонецЦикла;
	
	Файл.Закрыть();
		
КонецПроцедуры
