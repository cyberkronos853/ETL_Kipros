#Область СлужебныйПрограммныйИнтерфейс

Функция УдалитьВременныеТаблицыСравнения() Экспорт
	
	Коннектор = ОбменSQLСервер.ПолучитьКоннектор();	
	
	Текст = " 
	|	SET NOCOUNT ON
	|	DECLARE @name VARCHAR(100)
	|	DECLARE @counter INT    
	|	SET @counter = 0 
	|	DECLARE db_cursor CURSOR FOR
	|	SELECT name
	|	FROM sys.objects     
	|	WHERE type in (N'U') AND name like 'TempTable%' 
	|	OPEN db_cursor 
	|	FETCH NEXT FROM db_cursor INTO @name 
	|	WHILE @@FETCH_STATUS = 0   
	|	BEGIN   
	|	      execute ('DROP TABLE ' + @name)
	|		  SET @counter = @counter + 1 
	|		  FETCH NEXT FROM db_cursor INTO @name
	|	END 
	|	CLOSE db_cursor 
	|	DEALLOCATE db_cursor
	|	SELECT @counter as Counter";

	Результат = Коннектор.ВыполнитьПроизвольныйЗапрос(Текст);

	Если Результат.ЕстьОшибки Тогда 
		
		Возврат 0;
		
	Иначе   
		
		Возврат Результат.Данные[0].Counter;
		
	КонецЕсли;

КонецФункции

Функция ПолучитьСписокПолей(СтруктураТаблицы) Экспорт

	ИмяТаблицыSQL = РаботаСЭталонамиСервер.ПолучитьТаблицуSQL(СтруктураТаблицы);
		
	Коннектор = ОбменSQLСервер.ПолучитьКоннектор();
	
	Результат = Коннектор.ПолучитьСхемуТаблицы(ИмяТаблицыSQL);

		Если Результат.ЕстьОшибки Тогда 
			
			Ошибка = СтрСоединить(Коннектор.ПолучитьОшибки(), Символы.ПС);
			ЗаписьЖурналаРегистрации("Ошибка веб-сервиса", УровеньЖурналаРегистрации.Ошибка,,, Ошибка);
		
			возврат Новый Массив;
			
		Иначе   
			
			СписокПолей = Новый Массив;
			Для Каждого Поле Из Результат.Данные Цикл
  				СписокПолей.Добавить(Поле.Имя);
			КонецЦикла;
			Возврат СписокПолей;

		КонецЕсли;
   	
	КонецФункции
                                                                                           
#КонецОбласти