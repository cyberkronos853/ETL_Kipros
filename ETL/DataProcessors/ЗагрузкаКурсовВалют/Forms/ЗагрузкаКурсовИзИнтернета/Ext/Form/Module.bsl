////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодЗагрузки.Вариант = ВариантСтандартногоПериода.СНачалаЭтогоМесяца;
	ЗаполнитьСписокВалют();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗагрузитьКурсы(Команда)

	Если НЕ УказанныВсеДанныеНеобходимыеДляЗагрузкиКурсовВалютИзИнтернета() Тогда
		Возврат;	
	КонецЕсли;

	СообщитьНачатаЗагрузкаКурсов();
	
	МассивВалютДляЗагрузкиКурсов = СоздатьМассивВалютДляКоторыхНеобходимоЗагрузитьКурсы();
	
	Результат = ЗагрузитьКурсыВРегистрКурсыВалют(
		МассивВалютДляЗагрузкиКурсов,
		ПериодЗагрузки.ДатаНачала,
		ПериодЗагрузки.ДатаОкончания);
	
	Если Результат.ВсеКурсыУспешноЗагружены Тогда
		СообщитьЗагрузкаКурсовУспешноЗавершена();
	Иначе
		СообщитьНеУдалосьЗагрузитьКурсыВалют(Результат.Ошибки);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПериод(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();	
	Диалог.Период = ПериодЗагрузки;	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПериода",ЭтаФорма); 	
	Диалог.Показать(ОписаниеОповещения);       
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПериода(Период, Параметры) Экспорт

   Если Период <> Неопределено Тогда   
      ПериодЗагрузки = Период
   КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого Валюта Из СписокВалют Цикл
		Валюта.Загружать = Ложь;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого Валюта Из СписокВалют Цикл
		Валюта.Загружать = Истина;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВалют(Команда)
	
	ОбновитьСписокВалютНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)

	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Ложь);
	ОткрытьФорму("Справочник.Валюты.ФормаВыбора", ПараметрыФормы, Элементы.СписокВалют);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ 

&НаКлиенте
Процедура СписокВалютОбработкаВыбора(Элемент, Валюта, СтандартнаяОбработка)
	
	Отбор = Новый Структура("Валюта", Валюта);
	МассивСтрок = СписокВалют.НайтиСтроки(Отбор);	
	
	Если МассивСтрок.Количество() = 0 Тогда
		
		СтрокаСпискаВалют = СписокВалют.Добавить();
		СтрокаСпискаВалют.Валюта = Валюта;
		СтрокаСпискаВалют.Загружать = Истина;
		
		ДатаПоследнегоКурса = ПолучитьДатуПоследнегоКурса(Валюта);
		Если ЗначениеЗаполнено(ДатаПоследнегоКурса) Тогда
			СтрокаСпискаВалют.ДатаКурса = ДатаПоследнегоКурса;
		Иначе
			СтрокаСпискаВалют.ДатаКурса = "Курс отсутствует";	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВалютВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СписокВалютВалюта" Тогда
		
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элементы.СписокВалют.ТекущиеДанные.Валюта);
		
	ИначеЕсли Поле.Имя = "СписокВалютДатаКурса" Тогда
		
    	СтандартнаяОбработка = Ложь;
		Валюта = Элементы.СписокВалют.ТекущиеДанные.Валюта;
		Отбор = Новый Структура("Валюта", Валюта);
		ПараметрыФормы = Новый Структура("Отбор, Валюта", Отбор, Валюта);
        ОткрытьФорму("РегистрСведений.КурсыВалют.ФормаСписка", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ЗагрузитьКурсыВРегистрКурсыВалют(
	МассивВалютДляЗагрузкиКурсов,
	НачалоПериодаЗагрузки,
	КонецПериодаЗагрузки)	
	
	Результат = РаботаСКурсамиВалют.ЗагрузитьКурсыИзИнтернета(
		МассивВалютДляЗагрузкиКурсов,
		НачалоПериодаЗагрузки,
		КонецПериодаЗагрузки);
		
	Если Результат.ВсеКурсыУспешноЗагружены Тогда
		ОбновитьСписокВалютНаСервере();		
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция СообщитьНачатаЗагрузкаКурсов()
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Сообщить("Выполняется загрузка курсов валют...", СтатусСообщения.Информация);	
	#Иначе
		Состояние("Выполняется загрузка курсов валют... 
		          |Пожалуйста, подождите.");
	#КонецЕсли
	
КонецФункции

 &НаКлиенте
Функция СообщитьЗагрузкаКурсовУспешноЗавершена()
	
	ТекстСообщения = НСтр("ru = 'Курсы валют успешно загружены'");
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ОбщегоНазначенияБККлиентСервер.СообщитьОбОшибке(ТекстСообщения);	
	#Иначе
		ПоказатьПредупреждение(, ТекстСообщения);
	#КонецЕсли
	
КонецФункции

 &НаКлиенте
Функция СообщитьНеУдалосьЗагрузитьКурсыВалют(Знач Ошибки)
	
	ТекстСообщения = НСтр("ru = 'Не удалось загрузить курсы валют!'");
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		
		ОбщегоНазначенияБККлиентСервер.СообщитьОбОшибке(ТекстСообщения);	
		
		Для Каждого ТекстОшибки Из Ошибки Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки + Символы.ПС);	
		КонецЦикла;
		
	#Иначе
		
		Для Каждого ТекстОшибки Из Ошибки Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки + Символы.ПС);	
		КонецЦикла;
		
		ПоказатьПредупреждение(, ТекстСообщения);
		
	#КонецЕсли
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВалют()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИСТИНА КАК Загружать,
	|	Валюты.Ссылка КАК Валюта,
	|	КурсыВалютСрезПоследних.Период КАК ДатаКурса
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних
	|		ПО Валюты.Ссылка = КурсыВалютСрезПоследних.Валюта
	|ГДЕ
	|	Валюты.ЗагружатьКурсИзИнтернета = ИСТИНА
	|	И Валюты.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаКурса";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаСпискаВалют = СписокВалют.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСпискаВалют, Выборка);	
	КонецЦикла;
	
	ЗаменитьПустыеДатыНадписьюКурсОтсутствует();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокВалютНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Валюты.Ссылка КАК Валюта,
	|	КурсыВалютСрезПоследних.Период КАК ДатаКурса
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних
	|		ПО Валюты.Ссылка = КурсыВалютСрезПоследних.Валюта";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отбор = Новый Структура("Валюта", Выборка.Валюта);
		МассивСтрокСписокВалют = СписокВалют.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаСпискаВалют Из МассивСтрокСписокВалют Цикл
			СтрокаСпискаВалют.ДатаКурса = Выборка.ДатаКурса;	
		КонецЦикла;
		
	КонецЦикла;
	
	ЗаменитьПустыеДатыНадписьюКурсОтсутствует();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДатуПоследнегоКурса(Знач Валюта)
	
	ДатаПоследнегоКурса = '0001-01-01';
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период КАК ДатаКурса
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
	Запрос.УстановитьПараметр("Валюта", Валюта);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДатаПоследнегоКурса = Выборка.ДатаКурса;
	КонецЕсли;
	
	Возврат ДатаПоследнегоКурса;	
	
КонецФункции

&НаСервере
Процедура ЗаменитьПустыеДатыНадписьюКурсОтсутствует()
	
	Для Каждого СтрокаСпискаВалют Из СписокВалют Цикл
		Если ПустаяСтрока(СтрокаСпискаВалют.ДатаКурса) Тогда
			СтрокаСпискаВалют.ДатаКурса = "Курс отсутствует";	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьМассивВалютДляКоторыхНеобходимоЗагрузитьКурсы()
	
	Перем ВалютыДляЗагрузкиМассивСсылок;
	
	ПараметрыПоиска = Новый Структура("Загружать", Истина);
	ВалютыДляЗагрузкиМассивСтрокТаблицы = СписокВалют.НайтиСтроки(ПараметрыПоиска);
	
	ВалютыДляЗагрузкиМассивСсылок = Новый Массив();
	Для Каждого СтрокаТаблицы Из ВалютыДляЗагрузкиМассивСтрокТаблицы Цикл
		ВалютыДляЗагрузкиМассивСсылок.Добавить(СтрокаТаблицы.Валюта);	
	КонецЦикла;
	
	Возврат ВалютыДляЗагрузкиМассивСсылок;
	
КонецФункции

&НаКлиенте
Функция УказанныВсеДанныеНеобходимыеДляЗагрузкиКурсовВалютИзИнтернета()
	
	УказанныВсеДанные = Истина;
	
	Если Не ЗначениеЗаполнено(ПериодЗагрузки.ДатаНачала) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Укажите начало периода'"),
			,
			"ПериодЗагрузки.ДатаНачала");
		УказанныВсеДанные = Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПериодЗагрузки.ДатаОкончания) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Укажите конец периода'"),
			,
			"ПериодЗагрузки.ДатаОкончания");
		УказанныВсеДанные = Ложь;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодЗагрузки.ДатаНачала) 
	   И ЗначениеЗаполнено(ПериодЗагрузки.ДатаОкончания)
	   И ПериодЗагрузки.ДатаНачала > ПериодЗагрузки.ДатаОкончания Тогда
	   
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Дата начала больше даты конца'"),
			,
			"ПериодЗагрузки.ДатаНачала");
		УказанныВсеДанные = Ложь;
		
	КонецЕсли;	
	
	Если СписокВалют.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Добавьте хотя бы одну валюту'"),
			,
			"СписокВалют");
		УказанныВсеДанные = Ложь;
		
	КонецЕсли;
	
	МассивВалютДляЗагрузки = СоздатьМассивВалютДляКоторыхНеобходимоЗагрузитьКурсы();
	Если СписокВалют.Количество() > 0 И МассивВалютДляЗагрузки.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Отметьте хотя бы одну валюту'"),
			,
			"СписокВалют");
		УказанныВсеДанные = Ложь;
		
	КонецЕсли;

	Возврат УказанныВсеДанные;	
	
КонецФункции
