#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	ПроверкаВыполнена = Ложь;
	ОбновитьФорму();
КонецПроцедуры

	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытиеПериодаСверки(Команда)
	ЗакрытиеПериодаСверкиНаСервере();
	ПроверкаВыполнена = Ложь;
	ОбновитьФорму();
	Сообщить("Добавлена запись по закрытию периода! База " + Строка(База) + "; Дата закрытого периода: " + Строка(ВыборПериода.ДатаОкончания));
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	Ошибки.Очистить();
	Если НЕ База.Пустая() и ЗначениеЗаполнено(ВыборПериода) Тогда
		ПроверитьНаСервере();
	Иначе
		Сообщить("Преиод и/или База не заполнены");
	КонецЕсли;
	ОбновитьФорму();
КонецПроцедуры


#КонецОбласти                  

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьНаСервере()
	Коннектор = ОбменSQLСервер.ПолучитьКоннектор();
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала",ВыборПериода.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания",ВыборПериода.ДатаОкончания);
	СтруктураПараметров.Вставить("База",База.Наименование);
	ТЗОшибки = РеквизитФормыВЗначение("Ошибки", Тип("ТаблицаЗначений"));
	ПроверкаНаОшибкиПоКонсолидации.ВыполнитьПроверку(Истина,,Коннектор,СтруктураПараметров,ТЗОшибки);
	ЗначениеВРеквизитФормы(ТЗОшибки, "Ошибки");
	ПроверкаВыполнена = Истина;
	ДатаПроверки = ТекущаяДатаСеанса();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	Элементы.Группа2.Заголовок = "Ошибки("+Строка(Ошибки.Количество())+")";
	Если Ошибки.Количество() = 0 и ПроверкаВыполнена Тогда
		Элементы.ЗакрытиеПериодаСверки.Доступность = Истина;
	Иначе
		Элементы.ЗакрытиеПериодаСверки.Доступность = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗакрытиеПериодаСверкиНаСервере()
	ЗаписьРегистра = РегистрыСведений.СтатусСверкиОтчетов.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.ДатаОтчета = ВыборПериода.ДатаОкончания;
	ЗаписьРегистра.База = База;
	ЗаписьРегистра.Прочитать();
	Если ЗаписьРегистра.Выбран() Тогда
		ОбщегоНазначения.СообщитьПользователю("Запись на указанную дату отчета по текущей базе уже существует!");
	Иначе
		НовыйНабор = РегистрыСведений.СтатусСверкиОтчетов.СоздатьНаборЗаписей();
		НовыйНабор.Отбор.База.Установить(База);
		НовыйНабор.Отбор.ДатаОтчета.Установить(ВыборПериода.ДатаОкончания);
		НоваяЗапись = НовыйНабор.Добавить();
		ЗаписьРегистра.ДатаОтчета = ВыборПериода.ДатаОкончания;
		ЗаписьРегистра.База = База;
		ЗаписьРегистра.Статус = Истина; 
	    НовыйНабор.Записать();
	КонецЕсли; 
	
	//НовыйНабор = РегистрыСведений.СтатусСверкиОтчетов.СоздатьНаборЗаписей();
	//НовыйНабор.Отбор.База.Установить(База);
	//НоваяЗапись = НовыйНабор.Добавить();
	//НоваяЗапись.Период 					= ТекущаяДатаСеанса();
	//НоваяЗапись.База					= База;
	//НоваяЗапись.ДатаЗакрытогоПериода 	= ВыборПериода.ДатаОкончания;
	//НоваяЗапись.ВидЗакрытогоПериода     = Перечисления.ВидыЗакрытогоПериода.ЗакрытиеПериода;
	//НовыйНабор.Записать();

КонецПроцедуры


#КонецОбласти 

