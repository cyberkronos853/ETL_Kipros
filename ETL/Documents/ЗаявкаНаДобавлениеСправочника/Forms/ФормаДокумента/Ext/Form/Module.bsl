
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СправочникиИзМетаданных();
	ЭтаФорма.ТекущСтатус = Объект.Статус;  
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСправочникаПриИзменении(Элемент)
	ПривестиКТипу();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТипСтр = "СправочникСсылка."+Объект.ТипСправочника;
	Элемент.ОграничениеТипа = Новый ОписаниеТипов(ТипСтр);
	Элемент.ВыбиратьТип = Ложь;
	
	
КонецПроцедуры

&НаСервере
Функция СправочникиИзМетаданных()
	СписокСправочников = Новый СписокЗначений;
	//Ном = 0;
	//Для Каждого СправочникИзМетаданных Из Метаданные.Справочники Цикл
	//	если найти(СправочникИзМетаданных.Имя,"Эталон") тогда
			//Элементы.ТипСправочника.СписокВыбора.Вставить(Ном,СправочникИзМетаданных.Имя,СправочникИзМетаданных.Представление());
	//		Ном = Ном+1;
	//	КонецЕсли
	//КонецЦикла;
	
	Элементы.ТипСправочника.СписокВыбора.Вставить(0,"ПланСчетов","План счетов (эталон)");
	Элементы.ТипСправочника.СписокВыбора.Вставить(1,"СтатьиЗатрат","Статьи затрат (эталон)");
	Элементы.ТипСправочника.СписокВыбора.Вставить(2,"ТоварыИУслуги","Товары, продукция и услуги (эталон)");
	Элементы.ТипСправочника.СписокВыбора.Вставить(3,"Доходы","Доходы (эталон)");
	Элементы.ТипСправочника.СписокВыбора.Вставить(4,"СтатьиДвиженияДенежныхСредств","Статьи ДДС (эталон)");
	Элементы.ТипСправочника.СписокВыбора.Вставить(5,"КаналыПродаж","Каналы продаж (эталон)");
	Элементы.ТипСправочника.СписокВыбора.Вставить(6,"ТипыЗатрат","Типы затрат (Эталон)");
	Элементы.ТипСправочника.СписокВыбора.Вставить(7,"ТипыКредиторов","Типы кредиторов (эталон)");

	Возврат СписокСправочников;
	
КонецФункции 

&НаКлиенте
Процедура ПривестиКТипу()
	Массив = Новый Массив();               
	//++ 02.02.2025 Кибернетика Корыткин В код модуле в именах справочника используется префикс ав
	Массив.Добавить(Тип("СправочникСсылка."+?(Лев(Объект.ТипСправочника, 2) = "ав", Сред(Объект.ТипСправочника, 3), Объект.ТипСправочника))); 
	//-- 02.02.2025
	НовыйТип = Новый ОписаниеТипов(Массив);
	
	Элементы.Группа.ОграничениеТипа = НовыйТип; 
	Группа = НовыйТип.ПривестиЗначение(Группа);
	
	Элементы.ЭлементСправочника.ОграничениеТипа = НовыйТип; 
	ЭлементСправочника = НовыйТип.ПривестиЗначение(ЭлементСправочника);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Параметры.Ключ.Пустая() Тогда
		ПоказатьПредупреждение(,"Создание заявок запрещено.");	
		Отказ = Истина;
		возврат;	
	КонецЕсли;

	
	ПривестиКТипу();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗаявку(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ЭлементСправочникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТипСтр = "СправочникСсылка."+Объект.ТипСправочника;
	Элемент.ОграничениеТипа = Новый ОписаниеТипов(ТипСтр);
	Элемент.ВыбиратьТип = Ложь;
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПисьмо()
	Если ЭтаФорма.ТекущСтатус <> Объект.Статус и Объект.Статус<>"Создана" Тогда
		ОтправитьПисьмоНаСервере();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ОтправитьПисьмоНаСервере()
	
	ТелоПисьма = "Статус заявки : "+Объект.Статус;
	
	АдресаКоторымОтправляемПисьма = Объект.ЭлектронныйАдрес;
	
	ПочтаОтправителя = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("Системная учетная запись");
	
	Если АдресаКоторымОтправляемПисьма = "" Тогда
		//Сообщить("Не введено ни одного адреса для отправки");
		Возврат;
	КонецЕсли;
	Если не ЗначениеЗаполнено(ПочтаОтправителя) Тогда
		//Сообщить("Не заполнено почта отправителя");
		Возврат;
	КонецЕсли;
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Кому", АдресаКоторымОтправляемПисьма);
	ПараметрыПисьма.Вставить("УчетнаяЗапись", ПочтаОтправителя);                                                               
	ПараметрыПисьма.Вставить("АдресОтвета", АдресаКоторымОтправляемПисьма);
	ПараметрыПисьма.Вставить("Тема", "Статус заявки №"+Объект.НомерЗаявки+", Тип справочника: "+Объект.ТипСправочника+", Наименование: " +Объект.Наименование);	
	ПараметрыПисьма.Вставить("Тело", ТелоПисьма);
	ПараметрыПисьма.Вставить("ТипТекста", "ПростойТекст");
	
	Попытка	
		РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(ПочтаОтправителя, ПараметрыПисьма);
	Исключение	
		Сообщить("Не удалось отправить письма по причине " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ОтправитьПисьмо();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЭтаФорма.ТекущСтатус = Объект.Статус;
КонецПроцедуры


