
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КлючевыеПоказателиДеятельности.Ссылка КАК КлючевойПоказатель,
		|	КлючевыеПоказателиДеятельности.Наименование КАК Наименование,
		|	КлючевыеПоказателиДеятельности.Код КАК Код
		|ИЗ
		|	Справочник.КлючевыеПоказателиДеятельности КАК КлючевыеПоказателиДеятельности
		|ГДЕ
		|	КлючевыеПоказателиДеятельности.Родитель = ЗНАЧЕНИЕ(Справочник.КлючевыеПоказателиДеятельности.ПустаяССылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаТаблицы = ТаблицаОсновныхСтатей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы,ВыборкаДетальныеЗаписи);
		Позиция = Найти(ВыборкаДетальныеЗаписи.Код,".");
		СтрокаТаблицы.ИмяГруппы = Лев(ВыборкаДетальныеЗаписи.Код,Позиция-1);	
	КонецЦикла; 
	
	Для Каждого СтрокаТаблицы Из ТаблицаОсновныхСтатей Цикл  
		
			НовыйЭлементГруппа = Элементы.Добавить("ГруппаДляОтбора"+СтрокаТаблицы.ИмяГруппы,Тип("ГруппаФормы"),Элементы.ОсновнаяГруппаПоказателей);
			НовыйЭлементГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлементГруппа.Заголовок = СтрокаТаблицы.Наименование;
	
	
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ТаблицаОсновныхСтатей Цикл  
		
		Реквизиты = Новый Массив;
		Дерево = Новый РеквизитФормы("Дерево" + СтрокаТаблицы.ИмяГруппы,Новый ОписаниеТипов("ДеревоЗначений"));
		Реквизиты.Добавить(Дерево);
		
		РеквизитКод = Новый РеквизитФормы("Код",Новый ОписаниеТипов("Строка"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(РеквизитКод);
		
		РеквизитПоказатель = Новый РеквизитФормы("КлючевойПоказатель",Новый ОписаниеТипов("СправочникСсылка.КлючевыеПоказателиДеятельности"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(РеквизитПоказатель);
		
		
		РеквизитЕдиницаИзмерения = Новый РеквизитФормы("ЕдиницаИзмерения",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмеренияKPI"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(РеквизитЕдиницаИзмерения);
		
		
		//РеквизитГодМинус3 = Новый РеквизитФормы("ГодМинус3",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		//Реквизиты.Добавить(РеквизитГодМинус3);
		//
		//ГодМинус2 = Новый РеквизитФормы("ГодМинус2",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		//Реквизиты.Добавить(ГодМинус2);
		//
		//ГодМинус1 = Новый РеквизитФормы("ГодМинус1",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		//Реквизиты.Добавить(ГодМинус1); 
		СтрокаМесяцев = "Январь,Февраль,Март,Апрель,Май,Июнь,Июль,Август,Сентябрь,Октябрь,Ноябрь,Декабрь";
		МассивМесяцев = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаМесяцев,",");
		Для Каждого Месяц Из МассивМесяцев Цикл
			
			Реквизиты.Добавить(Новый РеквизитФормы(Месяц,Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы));
			
		КонецЦикла;
			
		ТекущийГод = Новый РеквизитФормы("ТекущийГод",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(ТекущийГод); 
		
		ГодПлюс1 = Новый РеквизитФормы("ГодПлюс1",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(ГодПлюс1);
		
		ГодПлюс2 = Новый РеквизитФормы("ГодПлюс2",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(ГодПлюс2);
		
		ГодПлюс3 = Новый РеквизитФормы("ГодПлюс3",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(ГодПлюс3); 
		
		ГодПлюс4 = Новый РеквизитФормы("ГодПлюс4",Новый ОписаниеТипов("Число"),"Дерево" + СтрокаТаблицы.ИмяГруппы);
		Реквизиты.Добавить(ГодПлюс4);
		
		ИзменитьРеквизиты(Реквизиты);
		
		
		НовыйЭлемент = Элементы.Добавить("Дерево"+СтрокаТаблицы.ИмяГруппы,Тип("ТаблицаФормы"),Элементы["ГруппаДляОтбора"+СтрокаТаблицы.ИмяГруппы]);
		НовыйЭлемент.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы;
		НовыйЭлемент.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
		//НовыйЭлемент.Высота = 20;
		
		
		НовыйЭлементКод = Элементы.Добавить("Код"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементКод.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".Код";
		НовыйЭлементКод.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлементКод.Ширина= 15;
		//
		НовыйЭлементКлючевойПоказатель = Элементы.Добавить("КлючевойПоказатель"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементКлючевойПоказатель.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".КлючевойПоказатель";
		НовыйЭлементКлючевойПоказатель.Вид = ВидПоляФормы.ПолеВвода; 
		
		НовыйЭлементЕдиницаИзмерения = Элементы.Добавить("ЕдиницаИзмерения"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементЕдиницаИзмерения.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ЕдиницаИзмерения";
		НовыйЭлементЕдиницаИзмерения.Вид = ВидПоляФормы.ПолеВвода; 
		
		
		//НовыйЭлементГодМинус3 = Элементы.Добавить("ГодМинус3"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		//НовыйЭлементГодМинус3.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ГодМинус3";
		//НовыйЭлементГодМинус3.Вид = ВидПоляФормы.ПолеВвода;
		//НовыйЭлементГодМинус3.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод) -3),Символ(150),""),",",""); 
		//
		//НовыйЭлементГодМинус2 = Элементы.Добавить("ГодМинус2"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		//НовыйЭлементГодМинус2.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ГодМинус2";
		//НовыйЭлементГодМинус2.Вид = ВидПоляФормы.ПолеВвода; 
		//НовыйЭлементГодМинус2.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод) -2),Символ(150),""),",",""); 
		//
		//
		//
		//НовыйЭлементГодМинус1 = Элементы.Добавить("ГодМинус1"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		//НовыйЭлементГодМинус1.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ГодМинус1";
		//НовыйЭлементГодМинус1.Вид = ВидПоляФормы.ПолеВвода; 
		//НовыйЭлементГодМинус1.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод) -1),Символ(150),""),",","");  
		
		Для Каждого Месяц Из МассивМесяцев Цикл
			
			ЭлементМесяц = Элементы.Добавить(Месяц+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
			ЭлементМесяц.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +"."+Месяц;
			ЭлементМесяц.Вид = ВидПоляФормы.ПолеВвода; 
			
		КонецЦикла; 
		
		НовыйЭлементГТекущийГод = Элементы.Добавить("ТекущийГод"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементГТекущийГод.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ТекущийГод";
		НовыйЭлементГТекущийГод.Вид = ВидПоляФормы.ПолеВвода; 
		НовыйЭлементГТекущийГод.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод)),Символ(150),""),",",""); 
		
		НовыйЭлементГодПлюс1 = Элементы.Добавить("ГодПлюс1"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементГодПлюс1.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ГодПлюс1";
		НовыйЭлементГодПлюс1.Вид = ВидПоляФормы.ПолеВвода; 
		НовыйЭлементГодПлюс1.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод) +1),Символ(150),""),",","");  
		
		
		НовыйЭлементГодПлюс2 = Элементы.Добавить("ГодПлюс2"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементГодПлюс2.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ГодПлюс2";
		НовыйЭлементГодПлюс2.Вид = ВидПоляФормы.ПолеВвода; 
		НовыйЭлементГодПлюс2.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод) +2),Символ(250),""),",","");  
		
		
		НовыйЭлементГодПлюс3 = Элементы.Добавить("ГодПлюс3"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементГодПлюс3.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ГодПлюс3";
		НовыйЭлементГодПлюс3.Вид = ВидПоляФормы.ПолеВвода; 
		НовыйЭлементГодПлюс3.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод) +3),Символ(350),""),",",""); 
		
		НовыйЭлементГодПлюс4 = Элементы.Добавить("ГодПлюс4"+СтрокаТаблицы.ИмяГруппы,Тип("ПолеФормы"),НовыйЭлемент);
		НовыйЭлементГодПлюс4.ПутьКДанным = "Дерево" + СтрокаТаблицы.ИмяГруппы +".ГодПлюс4";
		НовыйЭлементГодПлюс4.Вид = ВидПоляФормы.ПолеВвода; 
		НовыйЭлементГодПлюс4.Заголовок = СтрЗаменить(СтрЗаменить(Строка(Год(Объект.ТекущийГод) +4),Символ(450),""),",","");  
		
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КлючевыеПоказателиДеятельности.Код КАК Код,
		|	КлючевыеПоказателиДеятельности.Ссылка КАК КлючевойПоказатель
		|ИЗ
		|	Справочник.КлючевыеПоказателиДеятельности КАК КлючевыеПоказателиДеятельности
		|ГДЕ
		|	КлючевыеПоказателиДеятельности.Родитель В ИЕРАРХИИ(&Родитель)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КлючевыеПоказателиДеятельности.Ссылка ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("Родитель", СтрокаТаблицы.КлючевойПоказатель);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Дерево = РеквизитФормыВЗначение("Дерево" + СтрокаТаблицы.ИмяГруппы);
		КоличествоСтрок = 0;
		Для Каждого СтрокаРезультата Из РезультатЗапроса.Строки Цикл 
			
			СтрокаДерева = Дерево.Строки.Добавить();
			СтрокаДерева.Код = СтрокаРезультата.Код;
			СтрокаДерева.КлючевойПоказатель = СтрокаРезультата.КлючевойПоказатель;
			НайденныеСтроки = Объект.Состав.НайтиСтроки(Новый Структура("КлючевойПоказатель",СтрокаДерева.КлючевойПоказатель));
			Если НЕ НайденныеСтроки.Количество() Тогда
				СтрокаТЧ = Объект.Состав.Добавить();
				СтрокаТЧ.Код = СтрокаДерева.Код;
				СтрокаТЧ.КлючевойПоказатель = СтрокаДерева.КлючевойПоказатель;
			Иначе
				ЗаполнитьЗначенияСвойств(СтрокаДерева,НайденныеСтроки[0]);
			КонецЕсли;
			КоличествоСтрок = КоличествоСтрок +1;
			Если СтрокаРезультата.Строки.Количество() Тогда 
				Для Каждого  ВторойУровеньСтрок Из СтрокаРезультата.Строки Цикл
					СтрокаДерева2 = СтрокаДерева.Строки.Добавить();
					СтрокаДерева2.Код = ВторойУровеньСтрок.Код;
					СтрокаДерева2.КлючевойПоказатель = ВторойУровеньСтрок.КлючевойПоказатель; 
					
					НайденныеСтроки = Объект.Состав.НайтиСтроки(Новый Структура("КлючевойПоказатель",СтрокаДерева2.КлючевойПоказатель));
					Если НЕ НайденныеСтроки.Количество() Тогда
						СтрокаТЧ = Объект.Состав.Добавить();
						СтрокаТЧ.Код = СтрокаДерева2.Код;
						СтрокаТЧ.КлючевойПоказатель = СтрокаДерева2.КлючевойПоказатель;
					Иначе
						ЗаполнитьЗначенияСвойств(СтрокаДерева2,НайденныеСтроки[0]);
					КонецЕсли;
					
					КоличествоСтрок = КоличествоСтрок +1;
					Если ВторойУровеньСтрок.Строки.Количество() Тогда 
						Для Каждого ТретийУровеньСтрок Из ВторойУровеньСтрок.Строки Цикл 
							КоличествоСтрок = КоличествоСтрок +1;
							СтрокаДерева3 = СтрокаДерева2.Строки.Добавить();
							СтрокаДерева3.Код = ВторойУровеньСтрок.Код;
							СтрокаДерева3.КлючевойПоказатель = ВторойУровеньСтрок.КлючевойПоказатель; 
							
							НайденныеСтроки = Объект.Состав.НайтиСтроки(Новый Структура("КлючевойПоказатель",СтрокаДерева3.КлючевойПоказатель));
							Если НЕ НайденныеСтроки.Количество() Тогда
								СтрокаТЧ = Объект.Состав.Добавить();
								СтрокаТЧ.Код = СтрокаДерева3.Код;
								СтрокаТЧ.КлючевойПоказатель = СтрокаДерева3.КлючевойПоказатель; 
							Иначе
								ЗаполнитьЗначенияСвойств(СтрокаДерева3,НайденныеСтроки[0]);
							КонецЕсли;
							
						КонецЦикла;
					КонецЕсли;
					
					КонецЦикла;	
				КонецЕсли;
			
			
		КонецЦикла;
		
		Элементы["Дерево"+СтрокаТаблицы.ИмяГруппы].Высота = КоличествоСтрок+1;
		
		ЗначениеВРеквизитФормы(Дерево,"Дерево" + СтрокаТаблицы.ИмяГруппы);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.НомерВходящего) Тогда  
		
		ОпределитьВидимостьКаталогов();
		
	КонецЕсли;
	
	
	
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого СтрокаТаблицы Из ТаблицаОсновныхСтатей Цикл 
		РазвернутьДерево(ЭтаФорма["Дерево"+СтрокаТаблицы.ИмяГруппы].ПолучитьЭлементы(),"Дерево"+СтрокаТаблицы.ИмяГруппы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(КоллекцияЭлементовДерева,ИмяДерева=Неопределено)
	
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл 
		
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Элементы[ИмяДерева].Развернуть(ИдентификаторСтроки);
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы(); 
		Если ПодчиненныеСтроки.Количество() Тогда
			 РазвернутьДерево(ПодчиненныеСтроки,ИмяДерева);
		КонецЕсли;
		
		
	КонецЦикла; 	
	
КонецПроцедуры


&НаСервере
Процедура ОпределитьВидимостьКаталогов() 
	
	
	СтрокаМесяцев = "Январь,Февраль,Март,Апрель,Май,Июнь,Июль,Август,Сентябрь,Октябрь,Ноябрь,Декабрь";
	МассивМесяцев = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаМесяцев,",");
	
	Для Каждого СтрокаТаблицы Из ТаблицаОсновныхСтатей Цикл 
		
		Сумма = 0;
		Дерево = РеквизитФормыВЗначение("Дерево" + СтрокаТаблицы.ИмяГруппы);
		СтрокиДерева = Дерево.Строки; 
		Для Каждого КолонкаДерева Из Дерево.Колонки Цикл
			Если МассивМесяцев.Найти(КолонкаДерева.Имя) <> Неопределено Тогда
				Сумма = Сумма + СтрокиДерева.Итог(КолонкаДерева.Имя);
			КонецЕсли;
			
		КонецЦикла; 
		Если Сумма = 0 Тогда 
			
			Элементы["ГруппаДляОтбора"+СтрокаТаблицы.ИмяГруппы].Видимость = Ложь;
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	
КонецПроцедуры // ОпределитьВидимостьКаталогов()


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)


	Для Каждого СтрокаТаблицы Из ТаблицаОсновныхСтатей Цикл 

		
   		Дерево = РеквизитФормыВЗначение("Дерево"+СтрокаТаблицы.ИмяГруппы);
		ДеревоВТЧ(Дерево.Строки,ТекущийОбъект);
		
	КонецЦикла;

КонецПроцедуры
 
&НаСервере
Процедура ДеревоВТЧ(СтрокиДерева,ТекущийОбъект)

	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		
		НайденныеСтроки  = ТекущийОбъект.Состав.НайтиСтроки(Новый Структура("КлючевойПоказатель",СтрокаДерева.КлючевойПоказатель));
		Для каждого НайденнаяСтрока из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока,СтрокаДерева);
		КонецЦикла;
		Если СтрокаДерева.Строки.Количество() Тогда
			
			ДеревоВТЧ(СтрокаДерева.Строки,ТекущийОбъект);
			
		КонецЕсли;
		
	КонецЦикла;
	

КонецПроцедуры // ДеревоВТЧ()


&НаКлиенте
Процедура ЗаписатьВSQL(Команда)
	ИнтеграцияДЗО.ЗагрузитьДокументKPI_В_SQL(Объект);
КонецПроцедуры
