
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
    
   //++ 24.07.2025 Кибернетика Корыткин Установка реквизита GUID
   Если НЕ ЗначениеЗаполнено(GUIDВходящего) Тогда
        Если ЭтоНовый() Тогда
            НоваяСсылка = Документы.ФактическиеДанные.ПолучитьСсылку(Новый УникальныйИдентификатор());
            УстановитьСсылкуНового(НоваяСсылка);
            GUIDВходящего = Строка(НоваяСсылка.УникальныйИдентификатор());
        Иначе
            GUIDВходящего = Строка(Ссылка.УникальныйИдентификатор());
		КонецЕсли; 
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(НомерВходящего) Тогда
	
		НомерВходящего = Номер;
	
	КонецЕсли;
	//-- 24.07.2025	
  КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ЗагрузитьSQLНаСервере(Отказ);
 КонецПроцедуры       
 
  &НаСервере
 Процедура ЗагрузитьSQLНаСервере(Отказ) 
	 
	УдалитьЗаписиSQL();	
	 
	ИнтеграцияДЗО.ЗагрузитьДокументKPI_В_SQL(Ссылка);
	
	
	Массив = Новый Массив;
	Массив.Добавить("map_Organizations");
	Массив.Добавить("map_rpt_ReportLines");
	Массив.Добавить("map_Revenues");
	Массив.Добавить("map_Expenditures");
	Массив.Добавить("map_AssetCategories");
	Массив.Добавить("map_NomenclatureGroups");
	Массив.Добавить("map_TypesOfMovements");
	Массив.Добавить("map_StagesOfTheProject");
	Массив.Добавить("map_ProjectTypesAndInvestments");
	Массив.Добавить("map_FCR"); 
	Массив.Добавить("map_PurposeOfFunds");    
	Массив.Добавить("map_DebtInstruments");
	Массив.Добавить("map_Versions");
	Массив.Добавить("map_LenderTypes");
	
	//Возврат;
	
	Результат 		= ИнтеграцияДЗО.ПолучитьЗначения_ID_из_SQL_по_GUID(Массив);
	ДопЗнач = "";
	
	IDОрганизации 	= ПолучитьIDСправочника(Организация,"map_Organizations",Результат); 
	IDВерсия 		= ПолучитьIDСправочника(Версия,"map_Versions",Результат);
	
	НомПП = 0;
	Для Каждого СтрокаТЧ Из ДанныеКапитальныеВложения Цикл
		DateFormation = ?(ЗначениеЗаполнено(ДатаОтчета),Формат(ДатаОтчета,"ДФ='yyyyMMdd'"),Формат(Дата(1753,1,1),"ДФ='yyyyMMdd'"));

		НомПП = НомПП+1;
		
		ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_FactDataCAPEX]
		|           ([Period]
		|           ,[Company]
		|           ,[Currency]
		|           ,[ProjectDescription]
		|           ,[TypeInvestment]
		|           ,[AssetCategory]
		|           ,[ProjectCustomer]
		|           ,[UnitPrice]
		|           ,[Volume]
		|           ,[AmountExpenses]
		|           ,[Version]
		|           ,[RecorderNumber]
		|           ,[RecorderDate]
		|           ,[RecorderGUID])
		|     VALUES
		|           (N'"+Формат(СтрокаТЧ.Период,"ДФ='yyyyMMdd'")+"'
		|           ,'"+IDОрганизации+"'
		|           ,'"+ИнтеграцияДЗО.ПолучитьIDВалюты(СтрокаТЧ.Валюта.КодСправочника)+"'
		|           ,'"+СокрЛП(СтрокаТЧ.КраткоеОписаниеПроекта)+"'
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ТипИнвестиции,"map_ProjectTypesAndInvestments",Результат)+"'
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.КатегорияАктива,"map_AssetCategories",Результат)+"'
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ЗаказчикПроекта,"map_FCR",Результат)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.Объем)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.ЦенаЗаЕдиницу)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СуммаРасходы)+"'	 
		|           ,'"+IDВерсия+"' 
		|           ,'"+СокрЛП(НомерВходящего)+"'
		|           ,'"+Формат(Дата,"ДФ='yyyyMMdd'")+"'
		|           ,'"+GUIDВходящего+"')";
		
		
		Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
	КонецЦикла;
	
	

	НомПП = 0;
	Для Каждого СтрокаТЧ Из ДанныеКредиторы Цикл
		DateFormation = ?(ЗначениеЗаполнено(ДатаОтчета),Формат(ДатаОтчета,"ДФ='yyyyMMdd'"),Формат(Дата(1753,1,1),"ДФ='yyyyMMdd'"));
		
		НомПП = НомПП+1;
		
		ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_FactDataCreditors]
        |([Period]
      	|,[Company]
     	|,[Version]
      	|,[ContractNumber]
    	|,[ContractDate]
      	|,[MaturityDate]
      	|,[CounterpartyINN]
      	|,[DebtTool]
      	|,[LoanLenderType]
      	|,[Currency]
      	|,[ExchangeRateOnDate]
      	|,[Indexing]
      	|,[LoanTerms]
     	|,[InterestRate]
      	|,[PurposeOfFunds]
      	|,[ContractSumm]
      	|,[AmountOfDisbursement]
      	|,[PrincipalAmountBalance]
      	|,[AccruedInterestBalance]
      	|,[PrincipalAmountByPeriod]
      	|,[AccruedInterestByPeriod]
      	|,[RevaluationByPeriod]
      	|,[OtherOperationByPeriod]
      	|,[PrincipalAmountEndBalance]
      	|,[AccruedInterestEndBalance]
		|,[RecorderNumber]
		|,[RecorderDate]
		|,[RecorderGUID])
		|     VALUES
		|           (N'"+Формат(СтрокаТЧ.Период,"ДФ='yyyyMMdd'")+"'
		|           ,'"+IDОрганизации+"'
		|           ,'"+IDВерсия+"' 
		|           ,'"+СокрЛП(СтрокаТЧ.НомерДоговора)+"'
		|           ,'"+Формат(СтрокаТЧ.ДатаДоговора,"ДФ='yyyyMMdd'")+"' 
		|           ,'"+Формат(СтрокаТЧ.ДатаПогашения,"ДФ='yyyyMMdd'")+"' 
		|           ,'"+СокрЛП(СтрокаТЧ.КонтрагентБИН)+"' 
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ДолговойИнструмент,"map_DebtInstruments",Результат)+"'
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ТипКредитора,"map_LenderTypes",Результат)+"'
		|           ,'"+ИнтеграцияДЗО.ПолучитьIDВалюты(СтрокаТЧ.Валюта.КодСправочника)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.КурсНаДату)+"' 
		|           ,'"+?(СтрокаТЧ.Индексация,1,0)+"'	 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СрокКредитования)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.ПроцентнаяСтавка)+"' 
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ЦелевоеНазначениеСредств,"map_PurposeOfFunds",Результат)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СуммаПоДоговору)+"' 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СуммаОсвоенияПоДоговору)+"'	 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаНачалоОД)+"' 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаНачалоНачисленныеПроценты)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СуммаОД)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.НачисленныеПроценты)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.Переоценка)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.ПрочиеОперации)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаКонецОД)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаКонецНачисленныеПроценты)+"'
		|           ,'"+СокрЛП(НомерВходящего)+"'
		|           ,'"+Формат(Дата,"ДФ='yyyyMMdd'")+"'
		|           ,'"+GUIDВходящего+"')";
		
		
		Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
	КонецЦикла;
	
	НомПП = 0;
	Для Каждого СтрокаТЧ Из ДанныеДебиторы Цикл
		DateFormation = ?(ЗначениеЗаполнено(ДатаОтчета),Формат(ДатаОтчета,"ДФ='yyyyMMdd'"),Формат(Дата(1753,1,1),"ДФ='yyyyMMdd'"));
		
		НомПП = НомПП+1;
		
		ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_FactDataDebtors]
        |([Period]
      	|,[Company]
     	|,[Version]
      	|,[ContractNumber]
    	|,[ContractDate]
      	|,[MaturityDate]
      	|,[CounterpartyINN]
      	|,[DebtTool]
      	|,[LoanLenderType]
      	|,[Currency]
      	|,[ExchangeRateOnDate]
      	|,[Indexing]
      	|,[LoanTerms]
     	|,[InterestRate]
      	|,[PurposeOfFunds]
      	|,[ContractSumm]
      	|,[AmountOfDisbursement]
      	|,[PrincipalAmountBalance]
      	|,[AccruedInterestBalance]
      	|,[PrincipalAmountByPeriod]
      	|,[AccruedInterestByPeriod]
      	|,[RevaluationByPeriod]
      	|,[OtherOperationByPeriod]
      	|,[PrincipalAmountEndBalance]
      	|,[AccruedInterestEndBalance]
		|,[RecorderNumber]
		|,[RecorderDate]
		|,[RecorderGUID])
		|     VALUES
		|           (N'"+Формат(СтрокаТЧ.Период,"ДФ='yyyyMMdd'")+"'
		|           ,'"+IDОрганизации+"'
		|           ,'"+IDВерсия+"' 
		|           ,'"+СокрЛП(СтрокаТЧ.НомерДоговора)+"'
		|           ,'"+Формат(СтрокаТЧ.ДатаДоговора,"ДФ='yyyyMMdd'")+"' 
		|           ,'"+Формат(СтрокаТЧ.ДатаПогашения,"ДФ='yyyyMMdd'")+"' 
		|           ,'"+СокрЛП(СтрокаТЧ.КонтрагентБИН)+"' 
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ДолговойИнструмент,"map_DebtInstruments",Результат)+"'
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ТипКредитора,"map_LenderTypes",Результат)+"'
		|           ,'"+ИнтеграцияДЗО.ПолучитьIDВалюты(СтрокаТЧ.Валюта.КодСправочника)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.КурсНаДату)+"' 
		|           ,'"+?(СтрокаТЧ.Индексация,1,0)+"'	 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СрокКредитования)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.ПроцентнаяСтавка)+"' 
		|           ,'"+ПолучитьIDСправочника(СтрокаТЧ.ЦелевоеНазначениеСредств,"map_PurposeOfFunds",Результат)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СуммаПоДоговору)+"' 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СуммаОсвоенияПоДоговору)+"'	 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаНачалоОД)+"' 
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаНачалоНачисленныеПроценты)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СуммаОД)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.НачисленныеПроценты)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.Переоценка)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.ПрочиеОперации)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаКонецОД)+"'
		|           ,'"+УдалитьПробелы(СтрокаТЧ.СальдоНаКонецНачисленныеПроценты)+"'
		|           ,'"+СокрЛП(НомерВходящего)+"'
		|           ,'"+Формат(Дата,"ДФ='yyyyMMdd'")+"'
		|           ,'"+GUIDВходящего+"')";
		
		
		Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из ДанныеBS Цикл
    DateFormation = ?(ЗначениеЗаполнено(ДатаОтчета), Формат(ДатаОтчета, "ДФ='yyyyMMdd'"), Формат(Дата(1753,1,1), "ДФ='yyyyMMdd'"));

    НомПП = НомПП + 1;
    
	    ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_factDataReports]
	    |           (Period
	    |           ,Company
	    |           ,ReportType
	    |           ,Code
	    |           ,Name
	    |           ,ParentCode
	    |           ,Amount
	    |           ,GUID
	    |           ,BalAmount
	    |           ,RecorderGUID
	    |           ,RecorderDate
	    |           ,RecorderNumber)
	    |     VALUES
	    |           (N'" + Формат(ДатаОтчета, "ДФ='yyyyMMdd'") + "'
	    |           ,'" + IDОрганизации + "'
	    |           ,'BS'
	    |           ,'" + СокрЛП(СтрокаТЧ.Code) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.Name) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.ParentCode) + "'
	    |           ,'" + УдалитьПробелы(СтрокаТЧ.Amount) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.GUID) + "'
	    |           ,'" + УдалитьПробелы(СтрокаТЧ.BalAmount) + "'
	    |           ,'" + GUIDВходящего + "'
	    |           ,'" + Формат(Дата, "ДФ='yyyyMMdd'") + "'
	    |           ,'" + СокрЛП(НомерВходящего) + "')";
	    
	    Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
	КонецЦикла;

	Для Каждого СтрокаТЧ Из ДанныеPL Цикл
	    DateFormation = ?(ЗначениеЗаполнено(ДатаОтчета), Формат(ДатаОтчета, "ДФ='yyyyMMdd'"), Формат(Дата(1753,1,1), "ДФ='yyyyMMdd'"));

	    НомПП = НомПП + 1;
	    
	    ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_factDataReports]
	    |           (Period
	    |           ,Company
	    |           ,ReportType
	    |           ,Code
	    |           ,Name
	    |           ,ParentCode
	    |           ,Amount
	    |           ,GUID
	    |           ,RecorderGUID
	    |           ,RecorderDate
	    |           ,RecorderNumber)
	    |     VALUES
	    |           (N'" + Формат(ДатаОтчета, "ДФ='yyyyMMdd'") + "'
	    |           ,'" + IDОрганизации + "'
	    |           ,'PL'
	    |           ,'" + СокрЛП(СтрокаТЧ.Code) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.Name) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.ParentCode) + "'
	    |           ,'" + УдалитьПробелы(СтрокаТЧ.Amount) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.GUID) + "'
	    |           ,'" + GUIDВходящего + "'
	    |           ,'" + Формат(Дата, "ДФ='yyyyMMdd'") + "'
	    |           ,'" + СокрЛП(НомерВходящего) + "')";
	    
	    Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
	КонецЦикла;

	Для Каждого СтрокаТЧ Из ДанныеCFD Цикл
	    DateFormation = ?(ЗначениеЗаполнено(ДатаОтчета), Формат(ДатаОтчета, "ДФ='yyyyMMdd'"), Формат(Дата(1753,1,1), "ДФ='yyyyMMdd'"));

	    НомПП = НомПП + 1;
	    
	    ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_factDataReports]
	    |           (Period
	    |           ,Company
	    |           ,ReportType
	    |           ,Code
	    |           ,Name
	    |           ,ParentCode
	    |           ,Amount
	    |           ,GUID
	    |           ,RecorderGUID
	    |           ,RecorderDate
	    |           ,RecorderNumber)
	    |     VALUES
	    |           (N'" + Формат(ДатаОтчета, "ДФ='yyyyMMdd'") + "'
	    |           ,'" + IDОрганизации + "'
	    |           ,'CFD'
	    |           ,'" + СокрЛП(СтрокаТЧ.Code) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.Name) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.ParentCode) + "'
	    |           ,'" + УдалитьПробелы(СтрокаТЧ.Amount) + "'
	    |           ,'" + СокрЛП(СтрокаТЧ.GUID) + "'
	    |           ,'" + GUIDВходящего + "'
	    |           ,'" + Формат(Дата, "ДФ='yyyyMMdd'") + "'
	    |           ,'" + СокрЛП(НомерВходящего) + "')";
	    
	    Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
	КонецЦикла;

	Если Отказ Тогда
		УдалитьЗаписиSQL();
	Иначе 
		НаборЗаписей = РегистрыСведений.ЗаданиеНаИнтеграциюВSQL.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Документ.Установить(Ссылка);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() = 0 Тогда
			Запись 				= НаборЗаписей.Добавить();
			Запись.Документ 	= Ссылка;
			Запись.Интегрирован = Истина;
		ИначеЕсли НаборЗаписей.Количество() = 1 Тогда
			Запись = НаборЗаписей[0];
			Запись.Документ 	= Ссылка;
			Запись.Интегрирован = Истина;
		КонецЕсли;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	
КонецПроцедуры

 Процедура ВыгрузитьДанныеКонтрагентовВSQL() Экспорт
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	ПутьВыгрузки = Константы.КаталогВыгрузкиДляПрочихСистем.Получить();
	Если ПутьВыгрузки = "" Тогда
		Сообщить("Не указан каталог выгрузки!");
		Возврат;
	КонецЕсли;
	
	Если Прав(ПутьВыгрузки,1) <> "\" Тогда
		ПутьВыгрузки = ПутьВыгрузки + "\";
	КонецЕсли;
	
	ПапкаДляВыгрузки = ПутьВыгрузки + "Plan\";
	СоздатьКаталог(ПапкаДляВыгрузки);
	
	ВыгрузитьДанные(ПапкаДляВыгрузки);
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	
	СтрокаКоманды = "@echo off";
	Обмен.ОбойтиКаталог(ОбменSQL, СтрокаКоманды, НастройкиОбмена, ПапкаДляВыгрузки, "Plan", "Plan");
		
	ОбменSQL.ВыполнитьОбмен(СтрокаКоманды);
		
	Попытка
		УдалитьФайлы(ПапкаДляВыгрузки);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ВыгрузитьДанные(ПапкаДляВыгрузки)
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	Команда = ОбменSQL.Соединение();
	Команда.CommandText = 
		"TRUNCATE TABLE [dbo].[map_PlanData]";	
	Команда.Execute();

	ПапкаДляВыгрузкиОбъекта = ПапкаДляВыгрузки + "map_PlanData" + "\";
	СоздатьКаталог(ПапкаДляВыгрузкиОбъекта);
	
	IDОрганизации 	= ПолучитьID(Организация,"map_Organizations"); 
	IDВерсия 		= ПолучитьID(Версия,"map_Versions");

	Запрос = Новый Запрос();
	Запрос.Текст  ="ВЫБРАТЬ
	               |	авПлановыеДанныеДанные.Ссылка КАК Ссылка,
	               |	авПлановыеДанныеДанные.НомерСтроки КАК НомерСтроки,
	               |	авПлановыеДанныеДанные.Статья КАК Статья,
	               |	авПлановыеДанныеДанные.СтатьяДоходов КАК СтатьяДоходов,
	               |	авПлановыеДанныеДанные.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	авПлановыеДанныеДанные.КатегорияАктивов КАК КатегорияАктивов,
	               |	авПлановыеДанныеДанные.КонтрагентGUID КАК КонтрагентGUID,
	               |	авПлановыеДанныеДанные.СтатьяТРУ КАК СтатьяТРУ,
	               |	авПлановыеДанныеДанные.ВидДвижения КАК ВидДвижения,
	               |	авПлановыеДанныеДанные.Период КАК Период,
	               |	авПлановыеДанныеДанные.СвернутоПоГоду КАК СвернутоПоГоду,
	               |	авПлановыеДанныеДанные.Сумма КАК Сумма,
	               |	авПлановыеДанныеДанные.СтатьяТРУУровень2 КАК СтатьяТРУУровень2,
	               |	авПлановыеДанныеДанные.КонтрагентИНН КАК КонтрагентИНН,
	               |	авПлановыеДанныеДанные.КонтрагентНаименование КАК КонтрагентНаименование
	               |ИЗ
	               |	Документ.авПлановыеДанные.Данные КАК авПлановыеДанныеДанные
	               |ГДЕ
	               |	авПлановыеДанныеДанные.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Статья,
	               |	Период";
	Запрос.УстановитьПараметр("Статья",Справочники.СтатьиБюджетов.НайтиПоРеквизиту("КодСправочника","PL1.2."));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Файл = Новый ЗаписьТекста(ПапкаДляВыгрузкиОбъекта + "data.csv");	
	Пока Выборка.Следующий() Цикл	 
		Если Не ЗначениеЗаполнено(Выборка.Статья) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаВыгрузки =  "0"													+ Символы.Таб
			+ СокрЛП(IDОрганизации) 											+ Символы.Таб 
			+ ПреобразоватьОбъектВЗначение(Выборка.Сумма,"0") 					+ Символы.Таб 
			+ ПолучитьID(Выборка.Статья,"map_rpt_ReportLines") 					+ Символы.Таб
			+ ПолучитьID(Выборка.СтатьяДоходов,"map_Revenues") 					+ Символы.Таб
			+ ПолучитьID(Выборка.СтатьяЗатрат,"map_Expenditures")  				+ Символы.Таб
			+ "0"																+ Символы.Таб
			+ СокрЛП(Выборка.КонтрагентИНН)										+ Символы.Таб
			+ ПолучитьID(Выборка.СтатьяТРУ,"map_NomenclatureGroups")  			+ Символы.Таб
			+ ПолучитьID(Выборка.ВидДвижения,"map_TypesOfMovements")  			+ Символы.Таб 
			+ ПреобразоватьОбъектВЗначение(Выборка.Период,"0")					+ Символы.Таб 
			+ ПолучитьID(Выборка.СтатьяТРУУровень2,"map_NomenclatureGroups")  	+ Символы.Таб
			+ СокрЛП(IDВерсия) +  Символы.Таб;
		Файл.ЗаписатьСтроку(СтрокаВыгрузки);	
	КонецЦикла;
	Файл.Закрыть(); 
	//
	//	|           ,'"+ПреобразоватьОбъектВЗначение(ПолучитьIDСправочника(Стр.СтатьяЗатрат,"map_Expenditures",Результат)+"'
	//	|           ,'"+ПреобразоватьОбъектВЗначение(ПолучитьIDСправочника(Стр.КатегорияАктивов,"map_AssetCategories",Результат)+"'
	//	|           ,'"+IDКонтрагент +"'
	//	//|           ,'"+ПолучитьIDСправочника(СокрЛП(СтрокаТЧ.КонтрагентGUID),"Counterparties",Результат) +"'
	//	|           ,'"+ПреобразоватьОбъектВЗначение(ПолучитьIDСправочника(Стр.СтатьяТРУ,"map_NomenclatureGroups",Результат)+"'
	//	|           ,'"+ПреобразоватьОбъектВЗначение(ПолучитьIDСправочника(Стр.СтатьяТРУУровень2,"map_NomenclatureGroups",Результат)+"'
	//	|           ,'"+ПреобразоватьОбъектВЗначение(ПолучитьIDСправочника(Стр.ВидДвижения,"map_TypesOfMovements",Результат)+"'
	//	|           ,'"+ПреобразоватьОбъектВЗначение(Стр.Период,"0")+"'
	//	|           ,'"+IDВерсия+"'	 
	//	|           ,'"+Ном+"')";
	
		
КонецПроцедуры

Функция ПреобразоватьОбъектВЗначение(ОбъектПреобразования, ЕслиNull = "") Экспорт
	
	Если ОбъектПреобразования = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	ТипЗначения = ТипЗнч(ОбъектПреобразования);
	Если ТипЗначения = Тип("Дата") Тогда
		Значение = Формат(ОбъектПреобразования, "ДФ = гггг-ММ-дд");
	ИначеЕсли ТипЗначения = Тип("Число") Тогда
		Значение = Формат(ОбъектПреобразования, "ЧГ=0;ЧН=0;ЧРД=.;ЧДЦ=2");
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		Если ОбъектПреобразования = Истина Тогда
			Значение = "1";
		Иначе
			Значение = "0";
		КонецЕсли;
	ИначеЕсли ОбъектПреобразования = NULL Тогда
		Значение = ЕслиNull;
	Иначе
		Значение = XMLСтрока(СокрЛП(ОбъектПреобразования));	
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция ПолучитьID(Ссылка, Таблица)  Экспорт
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Результат = "0";
		Возврат Результат; 
	КонецЕсли;	
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	Соединение  = Новый COMОбъект("ADODB.Connection");	
	Соединение.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + НастройкиОбмена.ИнстансSQL + ";" + "UID=" + НастройкиОбмена.ЛогинSQL + ";" + "PWD=" + НастройкиОбмена.ПарольSQL +";" + "DATABASE=" + НастройкиОбмена.БазаДанныхSQL + ";";
	Соединение.CommandTimeout	 = 600;
    Соединение.ConnectionTimeout = 180;
	Соединение.Open();
	
	Выборка     = Новый COMОбъект("ADODB.RecordSet");
	Выборка.CursorType = 3;
	Выборка.ActiveConnection = Соединение;
	Выборка.Open("Select id from " + Таблица + " where GUID = '" + XMLСтрока(Ссылка) + "'");
	Выборка.MoveFirst(); 
	Если Выборка.EOF() = 0 Тогда
		Результат = Выборка.Fields("id").Value;
	Иначе
		Результат = 0;
	КонецЕсли;
	
	Выборка.Close();
	Соединение.Close();  
	
	Возврат Результат; 
	
КонецФункции

&НаСервере
Функция УдалитьПробелы(ТекЧисло)
	Возврат ИнтеграцияДЗО.УдалитьПробелы(ТекЧисло);	
КонецФункции // УдалитьПробелы¶()

&НаСервере
Функция ПолучитьIDСправочника(Ссылка,ИмяТаблицы,ДанныеSQL)
	
	Если ТипЗнч(Ссылка) = Тип("Строка") Тогда
		GUID = Ссылка;
	Иначе 
		Если ЗначениеЗаполнено(Ссылка)Тогда
			GUID = XMLСтрока(Ссылка); 
		Иначе 
			Возврат 0;
		КонецЕсли;
		
	КонецЕсли;
	
	ТЗ = ДанныеSQL[ИмяТаблицы];
	Результат = ДанныеSQL[ИмяТаблицы].Найти(GUID,"GUID");
	Если Результат <> Неопределено Тогда
		Возврат Результат.ID;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции // ПолучитьIDСправочника()

&НаСервере
Функция ПолучитьIDКонтрагента(ИИН)

	ID = ИнтеграцияДЗО.ПолучитьIDКонтрагентаПоИИН(ИИН);	
	Возврат ID; 

КонецФункции // ПолучитьIDКонтрагента()

Процедура ОбработкаУдаленияПроведения(Отказ)
	УдалитьЗаписиSQL();	
КонецПроцедуры

Процедура УдалитьЗаписиSQL()

	
	Массив = Новый Массив;
	Массив.Добавить("map_Organizations");
	Массив.Добавить("map_rpt_ReportLines");
	Массив.Добавить("map_Revenues");
	Массив.Добавить("map_Expenditures");
	Массив.Добавить("map_AssetCategories");
	Массив.Добавить("map_NomenclatureGroups");
	Массив.Добавить("map_TypesOfMovements");
	Массив.Добавить("map_StagesOfTheProject");
	Массив.Добавить("map_ProjectTypesAndInvestments");
	Массив.Добавить("map_FCR"); 
	Массив.Добавить("map_PurposeOfFunds");    
	Массив.Добавить("map_DebtInstruments");
	Массив.Добавить("map_Versions");
	Массив.Добавить("map_LenderTypes");
	
	Результат 		= ИнтеграцияДЗО.ПолучитьЗначения_ID_из_SQL_по_GUID(Массив);
	IDОрганизации 	= ПолучитьIDСправочника(Организация,"map_Organizations",Результат); 
	
	//ТекстЗапросаУдаления = "DELETE  FROM map_PlanData 
	//|WHERE [company] = '"+IDОрганизации+"' AND 
	//|RecorderGUID = '"+GUIDВходящего+"'";


	ТекстЗапросаУдаления = "DELETE  FROM map_FactDataCreditors 
	|WHERE [company] = '"+IDОрганизации+"' AND 
	|RecorderGUID = '"+GUIDВходящего+"'";
	
	Ответ = ИнтеграцияДЗО.ВыполнитьИнструкциюУдаления(ТекстЗапросаУдаления);


	ТекстЗапросаУдаления = "DELETE  FROM map_FactDataDebtors 
	|WHERE [company] = '"+IDОрганизации+"' AND 
	|RecorderGUID = '"+GUIDВходящего+"'";
	
	Ответ = ИнтеграцияДЗО.ВыполнитьИнструкциюУдаления(ТекстЗапросаУдаления);
	
	
	ТекстЗапросаУдаления = "DELETE  FROM map_FactDataCAPEX 
	|WHERE [company] = '"+IDОрганизации+"' AND 
	|RecorderGUID = '"+GUIDВходящего+"'";
	
	Ответ = ИнтеграцияДЗО.ВыполнитьИнструкциюУдаления(ТекстЗапросаУдаления);
	
	//++ 24.07.2025 Кибернетика Корыткин 
	ТекстЗапросаУдаления = "DELETE  FROM map_FactDataReports 
	|WHERE [company] = '"+IDОрганизации+"' AND 
	|RecorderGUID = '"+GUIDВходящего+"'";
	
	Ответ = ИнтеграцияДЗО.ВыполнитьИнструкциюУдаления(ТекстЗапросаУдаления);
    //-- 24.07.2025
	
КонецПроцедуры	


