 &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	/////////////////////////////Внешние параметры//////////////////////////////////////////
	ПорцияДанных = 19; 
	//ТаблицаИсточник = "dbo.etl_command";
	
	ПоляТаблицы = Параметры.ПоляЗапроса; //"Id, description, is_active";
	ПолеГруппировки = "id";
	ЗапросSQL = Параметры.ЗапросSQL;                                     
	СтрокаТаблицыИсточника = ПолучитьСтрокуТаблицы();
	ВыборОднойСтроки = Ложь;
	Если Параметры.Свойство("ВыборОднойСтроки") Тогда
		ВыборОднойСтроки = Истина;
	КонецЕсли;
		
	////////////////////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////Параметры подключения//////////////////////////////////////
	//ИнстансSQL = "WinAppSrv"; 
	//ЛогинSQL = "MuravyovD";
	//ПарольSQL = "2!#56ghk";
	//БазаДанныхSQL = "DWH_Kipros_Muravyov";
	////////////////////////////////////////////////////////////////////////////////////////
	
	ПодготовитьТЗ();
	
	ПодготовитьТЗВыбора();
	
	ПодготовитьПолеВыбораПоиска();
	РежимПоиска = Ложь;

	ВсегоЭлементов = Число(ПолучитьКоличествоСтраницВТаблице());
	КоличествоСтраницДроб = ВсегоЭлементов/ПорцияДанных;
	ВсегоСтраниц = ?((КоличествоСтраницДроб - Цел(КоличествоСтраницДроб)) <> 0, Цел(КоличествоСтраницДроб) + 1, КоличествоСтраницДроб);
	

	НомерПоследнейСтроки = 0;
	ТекущаяСтраница = 1;
	ЭтотОбъект.ТаблицаДанныхSQL.Очистить();
	ПолучитьДанныеСтрокТаблицы();
	ОбновитьИнтерфейс();	
КонецПроцедуры  
 
Процедура ПолучитьДанныеСтрокТаблицы() 
	//ЗапросБД = ЗапросSQL + "
	//|";
   	НомерФром = СтрНайти(ЗапросSQL, "FROM");
	ЗапросБезСелекта = Прав(ЗапросSQL,СтрДлина(ЗапросSQL)- НомерФром + 1);
	
	ЗапросБД = "SELECT " + ПоляТаблицы +"
	|";
	//ЗапросБД = ЗапросБД + "FROM " + ТаблицаИсточник +"
	//|";
	ЗапросБД = ЗапросБД + ЗапросБезСелекта + "
	|";
	ЗапросБД = ЗапросБД + "ORDER BY " + ПолеГруппировки +"
	|";
	ЗапросБД = ЗапросБД + "OFFSET " + Строка(НомерПоследнейСтроки) + " ROWS
	|";
	ЗапросБД = ЗапросБД + "FETCH NEXT " + Строка(ПорцияДанных) + " ROWS ONLY;";
	
	
	Попытка
		
		КомандаSQL = Соединение();
		
		КомандаSQL.CommandText = ЗапросБД;
		Выборка = КомандаSQL.Execute(); 
				
		Если КомандаSQL.ActiveConnection.Errors.Count > 0 Тогда 
			ОписаниеОшибки = "";	
			Для Каждого Ошибка из КомандаSQL.ActiveConnection.Errors Цикл 
				ОписаниеОшибки = ОписаниеОшибки + "Код: " + Ошибка.Number + ". " + Ошибка.Description + Символы.ПС;     
			КонецЦикла;   
			
			Сообщить(ОписаниеОшибки, СтатусСообщения.Важное);
		КонецЕсли;  
		
		
		//Результат = Новый Массив;
		  
		
		Пока НЕ Выборка.EOF Цикл  
			СчетчикПолейРезультата = 0;
			//СтруктураРезультата = Новый Структура;  
			
			НоваяСтрокаТабл = ЭтотОбъект.ТаблицаДанныхSQL.Добавить();
			Пока СчетчикПолейРезультата < Выборка.Fields.Count Цикл				
				//СтруктураРезультата.Вставить(Выборка.Fields.Item(СчетчикПолейРезультата).Name, Выборка.Fields(Выборка.Fields.Item(СчетчикПолейРезультата).Name).Value);  
				
				НоваяСтрокаТабл[Выборка.Fields.Item(СчетчикПолейРезультата).Name] = Выборка.Fields(Выборка.Fields.Item(СчетчикПолейРезультата).Name).Value;
				
				СчетчикПолейРезультата = СчетчикПолейРезультата + 1; 	
			КонецЦикла;  
			
			//Результат.Добавить(СтруктураРезультата);	
			Выборка.MoveNext();
		КонецЦикла;  
	Исключение
		ОписаниеОшибки =  ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Ошибка веб-сервиса", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);		
	КонецПопытки;
	
КонецПроцедуры

Функция Соединение()
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	Если НастройкиОбмена.ПарольSQL = "" Тогда
		Сообщить("Нет пароля");
		Возврат Неопределено;
	КонецЕсли;
	Попытка
		
        Команда     = Новый COMОбъект("ADODB.Command");
        Выборка     = Новый COMОбъект("ADODB.RecordSet");
		Соединение  = Новый COMОбъект("ADODB.Connection");
		
		//Соединение.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + ИнстансSQL + ";" + "UID=" + ЛогинSQL + ";" + "PWD=" + ПарольSQL +";" + "DATABASE=" + БазаДанныхSQL + ";";
		Соединение.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + НастройкиОбмена.ИнстансSQL + ";" + "UID=" + НастройкиОбмена.ЛогинSQL + ";" + "PWD=" + НастройкиОбмена.ПарольSQL +";" + "DATABASE=" + НастройкиОбмена.БазаДанныхSQL + ";";
		Соединение.CommandTimeout	 = 600;
        Соединение.ConnectionTimeout = 180;

		Соединение.Open();
		
        Команда.ActiveConnection = Соединение;
		

	Исключение
		
		ЗаписьЖурналаРегистрации("Выборка SQL", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());

		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат Команда;
	
КонецФункции
 
Процедура ОбновитьИнтерфейс()
	ЭтаФорма.Элементы.КоличествоСтраниц.Заголовок = Строка(ТекущаяСтраница) + "/" +Строка(ВсегоСтраниц);
КонецПроцедуры 

Функция ПолучитьКоличествоСтраницВТаблице()
	Если РежимПоиска Тогда
		Если СтрНайти(СтрокаТаблицыИсточника, "WHERE") = 0 и СтрНайти(СтрокаТаблицыИсточника, "where") = 0 Тогда
			ЗапросБД = "SELECT COUNT(*) AS TotalRows " + СтрокаТаблицыИсточника + "
			|";
			ЗапросБД = ЗапросБД + "WHERE " + ПолеПоиска + " LIKE '%" + Поиск + "%';"; 
		Иначе
			ЗапросБД = "SELECT COUNT(*) AS TotalRows " + СтрокаТаблицыИсточника + "
			|"; 
			ЗапросБД = ЗапросБД + "and " + ПолеПоиска + " LIKE '%" + Поиск + "%';";
        КонецЕсли;
	Иначе
		ЗапросБД = "SELECT COUNT(*) AS TotalRows " + СтрокаТаблицыИсточника + ";";
	КонецЕсли;
	Попытка
		
		КомандаSQL = Соединение();
		
		КомандаSQL.CommandText = ЗапросБД;
		Выборка = КомандаSQL.Execute(); 
				
		Если КомандаSQL.ActiveConnection.Errors.Count > 0 Тогда 
			ОписаниеОшибки = "";	
			Для Каждого Ошибка из КомандаSQL.ActiveConnection.Errors Цикл 
				ОписаниеОшибки = ОписаниеОшибки + "Код: " + Ошибка.Number + ". " + Ошибка.Description + Символы.ПС;     
			КонецЦикла;   
			
			Сообщить(ОписаниеОшибки, СтатусСообщения.Важное);
		КонецЕсли;  
		
		
		//Результат = Новый Массив;
		  
		КоличествоСтраницВТаблице = Неопределено;
		Пока НЕ Выборка.EOF Цикл  
			СчетчикПолейРезультата = 0;
			//СтруктураРезультата = Новый Структура;  
			
			КоличествоСтраницВТаблице = ЭтотОбъект.ТаблицаДанныхSQL.Добавить();
			Пока СчетчикПолейРезультата < Выборка.Fields.Count Цикл				
				//СтруктураРезультата.Вставить(Выборка.Fields.Item(СчетчикПолейРезультата).Name, Выборка.Fields(Выборка.Fields.Item(СчетчикПолейРезультата).Name).Value);  
				
				КоличествоСтраницВТаблице = Выборка.Fields(Выборка.Fields.Item(СчетчикПолейРезультата).Name).Value;
				
				СчетчикПолейРезультата = СчетчикПолейРезультата + 1; 	
			КонецЦикла;  
			
			//Результат.Добавить(СтруктураРезультата);	
			Выборка.MoveNext();
		КонецЦикла;
		Возврат КоличествоСтраницВТаблице;	
	Исключение
		ОписаниеОшибки =  ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Ошибка веб-сервиса", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);	
		Возврат КоличествоСтраницВТаблице
	КонецПопытки;

	
КонецФункции

&НаКлиенте
Процедура Следующая(Команда)
	Если ТекущаяСтраница >= ВсегоСтраниц тогда
		Возврат;
	КонецЕсли;
	ЭтотОбъект.ТаблицаДанныхSQL.Очистить();
	СледующаяНаСервере();
КонецПроцедуры

&НаСервере
Процедура СледующаяНаСервере()
	НомерПоследнейСтроки = НомерПоследнейСтроки + 10;
	Если НЕ РежимПоиска Тогда
		ПолучитьДанныеСтрокТаблицы();
	Иначе
		ПоискНаСервере();
	КонецЕсли;   
	ТекущаяСтраница = ТекущаяСтраница + 1;
	ОбновитьИнтерфейс();
КонецПроцедуры

&НаКлиенте
Процедура Предыдущая(Команда)
	Если ТекущаяСтраница <= 1 тогда
		Возврат;
	КонецЕсли;
	ЭтотОбъект.ТаблицаДанныхSQL.Очистить();

    ПредыдущаяНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура ПредыдущаяНаСервере()
	НомерПоследнейСтроки = НомерПоследнейСтроки - 10;
	Если НЕ РежимПоиска Тогда
		ПолучитьДанныеСтрокТаблицы();
	Иначе
		ПоискНаСервере();
	КонецЕсли;
	ТекущаяСтраница = ТекущаяСтраница - 1;
	ОбновитьИнтерфейс();
КонецПроцедуры

&НаСервере
Процедура ПодготовитьТЗ()
	МассивПолей = СтрРазделить(ПоляТаблицы, ",", Ложь); 
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	РеквизитТаблицаДанныхSQL = Новый РеквизитФормы("ТаблицаДанныхSQL", Новый ОписаниеТипов("ТаблицаЗначений"), , "ТаблицаДанныхSQL");
	ДобавляемыеРеквизиты.Добавить(РеквизитТаблицаДанныхSQL);
	Для каждого Поле из МассивПолей цикл
		СокрПоле = СокрЛП(Поле);
		РеквизитТаблицы = Новый РеквизитФормы(СокрПоле, Новый ОписаниеТипов("Строка"), РеквизитТаблицаДанныхSQL.Имя, СокрПоле);
		ДобавляемыеРеквизиты.Добавить(РеквизитТаблицы);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
	Эл = Элементы.Добавить("ТаблицаДанныхSQL", Тип("ТаблицаФормы"),);
	Эл.ПутьКДанным = "ТаблицаДанныхSQL";
	Для каждого Поле из МассивПолей цикл 
		СокрПоле = СокрЛП(Поле);
		Эл = Элементы.Добавить(СокрПоле, Тип("ПолеФормы"), Элементы.ТаблицаДанныхSQL);
		Эл.ПутьКДанным = "ТаблицаДанныхSQL." + СокрПоле;
		Эл.Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	Элементы.ТаблицаДанныхSQL.КоманднаяПанель.Видимость = Ложь;
	Элементы.ТаблицаДанныхSQL.УстановитьДействие("Выбор", "ВыполнитьДействиеВыбор");
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьДействиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НЕ ВыборОднойСтроки тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.ТаблицаВыбора.Добавить(), Элементы.ТаблицаДанныхSQL.ТекущиеДанные); 
	Иначе
		Если ЭтотОбъект.ТаблицаВыбора.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ТаблицаВыбора[0], Элементы.ТаблицаДанныхSQL.ТекущиеДанные);
		Иначе
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ТаблицаВыбора.Добавить(), Элементы.ТаблицаДанныхSQL.ТекущиеДанные);
		КонецЕсли;
		
	КонецЕсли;
			
	ВыполнитьДействиеВыборНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьДействиеВыборНаСервере()
	
КонецПроцедуры


&НаСервере
Процедура ПодготовитьТЗВыбора()
	МассивПолей = СтрРазделить(ПоляТаблицы, ",", Ложь); 
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	РеквизитТаблицаДанныхSQL = Новый РеквизитФормы("ТаблицаВыбора", Новый ОписаниеТипов("ТаблицаЗначений"), , "ТаблицаВыбора");
	ДобавляемыеРеквизиты.Добавить(РеквизитТаблицаДанныхSQL);
	Для каждого Поле из МассивПолей цикл
		СокрПоле = СокрЛП(Поле);
		РеквизитТаблицы = Новый РеквизитФормы(СокрПоле, Новый ОписаниеТипов("Строка"), РеквизитТаблицаДанныхSQL.Имя, СокрПоле);
		ДобавляемыеРеквизиты.Добавить(РеквизитТаблицы);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
	Эл = Элементы.Добавить("ТаблицаВыбора", Тип("ТаблицаФормы"),);
	Эл.ПутьКДанным = "ТаблицаВыбора";
	
	Для каждого Поле из МассивПолей цикл 
		СокрПоле = СокрЛП(Поле);
		Эл = Элементы.Добавить("ТаблицаВыбора" + СокрПоле, Тип("ПолеФормы"), Элементы.ТаблицаВыбора);
		Эл.ПутьКДанным = "ТаблицаВыбора." + СокрПоле;
		Эл.Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	Элементы.ТаблицаВыбора.КоманднаяПанель.Видимость = Ложь;	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьПолеВыбораПоиска() 
	МассивПолей = СтрРазделить(ПоляТаблицы, ",", Ложь);
	Для каждого поле из МассивПолей цикл 
		Элементы.ПолеПоиска.СписокВыбора.Добавить(Поле, Строка(Поле));	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	Если ЗначениеЗаполнено(ПолеПоиска) Тогда
		РежимПоиска = Истина;
		ВсегоЭлементов = Число(ПолучитьКоличествоСтраницВТаблице());
		КоличествоСтраницДроб = ВсегоЭлементов/ПорцияДанных;
		ВсегоСтраниц = ?((КоличествоСтраницДроб - Цел(КоличествоСтраницДроб)) <> 0, Цел(КоличествоСтраницДроб) + 1, КоличествоСтраницДроб);
		
		НомерПоследнейСтроки = 0;
		ТекущаяСтраница = 1;
		ЭтотОбъект.ТаблицаДанныхSQL.Очистить();
		ПоискНаСервере();
		ОбновитьИнтерфейс();	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПоискНаСервере()
	ЭтотОбъект.ТаблицаДанныхSQL.Очистить();
	
	НомерФром = СтрНайти(ЗапросSQL, "FROM");
	ЗапросБезСелекта = Прав(ЗапросSQL,СтрДлина(ЗапросSQL)- НомерФром + 1);
	
	ЗапросБД = "SELECT " + ПоляТаблицы +"
	|";
	//ЗапросБД = ЗапросБД + "FROM " + ТаблицаИсточник +"
	//|";
	ЗапросБД = ЗапросБД + ЗапросБезСелекта + "
	|";
    Если СтрНайти(СтрокаТаблицыИсточника, "WHERE") = 0 и СтрНайти(СтрокаТаблицыИсточника, "where") = 0 Тогда
			ЗапросБД = ЗапросБД + "WHERE " + ПолеПоиска + " LIKE '%" + Поиск + "%'" + "
			|";
		Иначе
			ЗапросБД = ЗапросБД + "and " + ПолеПоиска + " LIKE '%" + Поиск + "%'" + "
			|";
        КонецЕсли;
	//ЗапросБД = ЗапросSQL + "
	//|";
	//ЗапросБД = ЗапросБД + "WHERE " + ПолеПоиска + " LIKE '%" + Поиск + "%'" +"
	//|";
	ЗапросБД = ЗапросБД + "ORDER BY " + ПолеГруппировки +"
	|";
	ЗапросБД = ЗапросБД + "OFFSET " + Строка(НомерПоследнейСтроки) + " ROWS
	|";
	ЗапросБД = ЗапросБД + "FETCH NEXT " + Строка(ПорцияДанных) + " ROWS ONLY;";
	
	
	Попытка
		
		КомандаSQL = Соединение();
		
		КомандаSQL.CommandText = ЗапросБД;
		Выборка = КомандаSQL.Execute(); 
				
		Если КомандаSQL.ActiveConnection.Errors.Count > 0 Тогда 
			ОписаниеОшибки = "";	
			Для Каждого Ошибка из КомандаSQL.ActiveConnection.Errors Цикл 
				ОписаниеОшибки = ОписаниеОшибки + "Код: " + Ошибка.Number + ". " + Ошибка.Description + Символы.ПС;     
			КонецЦикла;   
			
			Сообщить(ОписаниеОшибки, СтатусСообщения.Важное);
		КонецЕсли;  
		
		
		//Результат = Новый Массив;
		  
		
		Пока НЕ Выборка.EOF Цикл  
			СчетчикПолейРезультата = 0;
			//СтруктураРезультата = Новый Структура;  
			
			НоваяСтрокаТабл = ЭтотОбъект.ТаблицаДанныхSQL.Добавить();
			Пока СчетчикПолейРезультата < Выборка.Fields.Count Цикл				
				//СтруктураРезультата.Вставить(Выборка.Fields.Item(СчетчикПолейРезультата).Name, Выборка.Fields(Выборка.Fields.Item(СчетчикПолейРезультата).Name).Value);  
				
				НоваяСтрокаТабл[Выборка.Fields.Item(СчетчикПолейРезультата).Name] = Выборка.Fields(Выборка.Fields.Item(СчетчикПолейРезультата).Name).Value;
				
				СчетчикПолейРезультата = СчетчикПолейРезультата + 1; 	
			КонецЦикла;  
			
			//Результат.Добавить(СтруктураРезультата);	
			Выборка.MoveNext();
		КонецЦикла;  
	Исключение
		ОписаниеОшибки =  ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Ошибка веб-сервиса", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);		
	КонецПопытки;

	
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	НазадНаСервере();
КонецПроцедуры

&НаСервере
Процедура НазадНаСервере()
	РежимПоиска = Ложь;

	ВсегоЭлементов = Число(ПолучитьКоличествоСтраницВТаблице());
	КоличествоСтраницДроб = ВсегоЭлементов/ПорцияДанных;
	ВсегоСтраниц = ?((КоличествоСтраницДроб - Цел(КоличествоСтраницДроб)) <> 0, Цел(КоличествоСтраницДроб) + 1, КоличествоСтраницДроб);
	

	НомерПоследнейСтроки = 0;
	ТекущаяСтраница = 1;
	ЭтотОбъект.ТаблицаДанныхSQL.Очистить();
	ПолучитьДанныеСтрокТаблицы();
	ОбновитьИнтерфейс();
КонецПроцедуры

Функция ПолучитьСтрокуТаблицы()
	НомерФром = СтрНайти(ЗапросSQL, "FROM");
	НомерКонцаФром = СтрНайти(ЗапросSQL, "¶",,НомерФром); 
	СтрокаТаблицы = Сред(ЗапросSQL,НомерФром,НомерКонцаФром-НомерФром);
	Возврат СтрокаТаблицы;
КонецФункции 

&НаКлиенте
Процедура Выбрать(Команда)
	АдресВременногоХранилища = ПоместитьПодобраннуюНоменклатуруВХранилище();
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("Адрес", АдресВременногоХранилища); 
	Если ВыборОднойСтроки Тогда
		ПараметрыЗакрытия.Вставить("ВыборОднойСтроки", Истина);
	КонецЕсли;	
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры

&НаСервере
Функция ПоместитьПодобраннуюНоменклатуруВХранилище()
	ТаблицаСтрок = ЭтотОбъект.ТаблицаВыбора.Выгрузить();
   	АдресПодобранныхСтрок = ПоместитьВоВременноеХранилище(ТаблицаСтрок, УникальныйИдентификатор);

	Возврат АдресПодобранныхСтрок;

КонецФункции

