
&НаСервере
Функция ПолучитьБазу(База)
	
	Результат = Новый Структура;
	Результат.Вставить("База", Справочники.Базы.ПустаяСсылка());
	Результат.Вставить("ДатаПоследнегоПринятогоСообщения", Дата(1,1,1));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Базы.Ссылка КАК База,
	               |	Базы.ДатаПринятияСообщения КАК ДатаПоследнегоПринятогоСообщения
	               |ИЗ
	               |	Справочник.Базы КАК Базы
	               |ГДЕ
	               |	Базы.Наименование = &База";
	Запрос.УстановитьПараметр("База", База);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Вставить("База", Выборка.База);
		Результат.Вставить("ДатаПоследнегоПринятогоСообщения", Выборка.ДатаПоследнегоПринятогоСообщения);	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьСписокОрганизаций()
	
	Список.Очистить();
	
	ОбменSQL = Обработки.ОбменSQL.Создать();
	Команда = ОбменSQL.Соединение();
	Команда.CommandType = 1;
	Команда.CommandTimeout = 360;	
	Команда.CommandText = 	"SELECT [GUID]
							|      ,[Base]
							|      ,[Name]
							|      ,[IIN]
							|	FROM [BW].[dbo].[Organizations]
							|	WHERE [GUID] LIKE '____________________________________'
							|	AND Base Is Not Null";
	
	Выборка = Команда.Execute();
	
	СоответствиеБаз = Новый Соответствие;
	Пока НЕ Выборка.EOF Цикл
		НовСтрока = Список.Добавить();
		НовСтрока.GUID = Выборка.Fields("GUID").Value; 
		НовСтрока.Наименование = Выборка.Fields("Name").Value;
		НовСтрока.ИНН = Выборка.Fields("IIN").Value;
		
		СтруктураБазы = СоответствиеБаз.Получить(Выборка.Fields("Base").Value);
		Если СтруктураБазы = Неопределено Тогда
			СтруктураБазы = ПолучитьБазу(Выборка.Fields("Base").Value);
			СоответствиеБаз.Вставить(Выборка.Fields("Base").Value, СтруктураБазы);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НовСтрока, СтруктураБазы); 

		Выборка.MoveNext();
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуОрганизации(Структура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПлановыеОрганизации.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ПлановыеОрганизации КАК ПлановыеОрганизации
	               |ГДЕ
	               |	ПлановыеОрганизации.GUID = &GUID";
	Запрос.УстановитьПараметр("GUID", Структура.GUID);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	Иначе
		ОрганизацияОбъект = Справочники.ПлановыеОрганизации.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(ОрганизацияОбъект, Структура);
		ОрганизацияОбъект.УстановитьНовыйКод();
		ОрганизацияОбъект.Записать();
		Результат = ОрганизацияОбъект.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокОрганизаций();
	ЭтаФорма.ЗакрыватьПриВыборе = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	ОбновитьСписокОрганизаций();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;	
	
	Структура = Новый Структура;
	Структура.Вставить("GUID", Элементы.Список.ТекущиеДанные.GUID); 
	Структура.Вставить("База", Элементы.Список.ТекущиеДанные.База);
	Структура.Вставить("Наименование", Элементы.Список.ТекущиеДанные.Наименование);
	Структура.Вставить("ИНН", Элементы.Список.ТекущиеДанные.ИНН);

	ОповеститьОВыборе(ПолучитьСсылкуОрганизации(Структура));
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		ОповеститьОВыборе(ПредопределенноеЗначение("Справочник.ПлановыеОрганизации.ПустаяСсылка"));
	Иначе
		Структура = Новый Структура;
		Структура.Вставить("GUID", Элементы.Список.ТекущиеДанные.GUID); 
		Структура.Вставить("База", Элементы.Список.ТекущиеДанные.База);
		Структура.Вставить("Наименование", Элементы.Список.ТекущиеДанные.Наименование);
		Структура.Вставить("ИНН", Элементы.Список.ТекущиеДанные.ИНН);

		ОповеститьОВыборе(ПолучитьСсылкуОрганизации(Структура));	
	КонецЕсли;
		
КонецПроцедуры
