
Процедура ОбработкаПроведения(Отказ, Режим)

	Результат = ПолучитьЗначения_ID_из_SQL_по_GUID();
	
	IDОрганизации 	= ПолучитьIDСправочника(Организация,"map_Organizations",Результат); 
	
    guidДокумента 	= Строка(Ссылка.УникальныйИдентификатор());
    НаимДокумента 	= Строка(Ссылка);
	KZT = Справочники.Валюты.НайтиПоРеквизиту("КодКлассификатора","398");
	
	Движения.ДвиженияПоДаннымПоКонсолидации.Записывать = Истина;
	Движения.ДанныеПоКонсолидации.Записывать = Истина;
	Для Каждого ТекСтрокаМетодыУчетаКонсолидации Из МетодыУчетаКонсолидации Цикл
		Движение 					= Движения.ДвиженияПоДаннымПоКонсолидации.Добавить();
		Движение.Период 			= Дата;
		Движение.ВидОперации 		= ВидОперации;
		Движение.Организация 		= Организация;
		Движение.Контрагент 		= Контрагент;
		Движение.ВходитВГруппу 		= ВходитВГруппу;
		Движение.Субхолдинг 		= Субхолдинг;
		Движение.ПроцентВладения 	= ПроцентВладения;
		Движение.ВалютаТранзакции 	= ВалютаТранзакции;
		Движение.СуммаТранзакции 	= СуммаТранзакции;
		Движение.СуммаТранзакцииВТенге = СуммаТранзакцииВТенге;
		Движение.Комментарий 		= Комментарий;
		Движение.МетодУчетаКонсодидации = ТекСтрокаМетодыУчетаКонсолидации.МетодУчетаКонсодидации;
		Движение.ПериметрКонсолидации 	= ТекСтрокаМетодыУчетаКонсолидации.ПериметрКонсолидации;
		
		ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_ConsolidationData_Movements]
		|           ([Period]
		|			,[company]
		|			,[OperationType]
		|           ,[Counterparty]
		|           ,[CounterpartyIIN]
		|           ,[BelongsToTheGroup]
		|           ,[Subholding]
		|           ,[OwnershipPercentage]
		|           ,[Currency]
		|           ,[CurrencyAmount]
		|           ,[RegulatedAmount]
		|           ,[ConsolidationMethod]
		|           ,[ConsolidationPerimeter]
		|           ,[Recorder]
		|           ,[RecorderGUID])
		|     VALUES
		|           (N'"+Формат(Дата,"ДФ='yyyyMMdd'")+"'
		|			,'"+IDОрганизации+"'
		|           ,'"+СокрЛП(ВидОперации)+"'
		|           ,'"+СокрЛП(Контрагент)+"'
		|           ,'"+СокрЛП(Контрагент.ИИН)+"'
		|           ,'"+?(ВходитВГруппу ,1,0)+"'
		|           ,'"+ПолучитьIDСправочника(Субхолдинг,"map_Subholdings",Результат)+"'
		|           ,'"+УдалитьПробелы(ПроцентВладения)+"'
		|           ,'"+ИнтеграцияДЗО.ПолучитьIDВалюты(ВалютаТранзакции.КодСправочника)+"'
		|           ,'"+УдалитьПробелы(СуммаТранзакции)+"'
		|           ,'"+УдалитьПробелы(СуммаТранзакцииВТенге)+"'
		|           ,'"+ТекСтрокаМетодыУчетаКонсолидации.МетодУчетаКонсодидации+"'
		|           ,'"+ПолучитьIDСправочника(ТекСтрокаМетодыУчетаКонсолидации.ПериметрКонсолидации,"map_ConsolidationPerimeters",Результат)+"'
		|           ,'"+НаимДокумента +"'
		|			,'"+guidДокумента +"')";
		Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
		
	КонецЦикла;
	
	Движение 					= Движения.ДанныеПоКонсолидации.Добавить();
	Движение.Период 			= Дата;
	Движение.Организация 		= Организация;
	Движение.Контрагент 		= Контрагент;
	Движение.ВходитВГруппу 		= ВходитВГруппу;
	Движение.Субхолдинг 		= Субхолдинг;
	Движение.ПроцентВладения 	= ПроцентВладения;
	Движение.ВалютаТранзакции 	= ВалютаТранзакции;
	Движение.СуммаТранзакции 	= СуммаТранзакции;
	Движение.СуммаТранзакцииВТенге = СуммаТранзакцииВТенге;
	

	ТекстЗапросаЗаписи = "INSERT INTO [dbo].[map_ConsolidationData]
	|           ([Period]
	|			,[company]
	|           ,[Counterparty]
	|           ,[CounterpartyIIN]
	|           ,[BelongsToTheGroup]
	|           ,[Subholding]
	|           ,[OwnershipPercentage]
	|           ,[Currency]
	|           ,[CurrencyAmount]
	|           ,[RegulatedAmount]
	|           ,[Recorder]
	|           ,[RecorderGUID])
	|     VALUES
	|           (N'"+Формат(Дата,"ДФ='yyyyMMdd'")+"'
	|			,'"+IDОрганизации+"'
	|           ,'"+СокрЛП(Контрагент)+"'
	|           ,'"+СокрЛП(Контрагент.ИИН)+"'
	|           ,'"+?(ВходитВГруппу ,1,0)+"'
	|           ,'"+ПолучитьIDСправочника(Субхолдинг,"map_Subholdings",Результат)+"'
	|           ,'"+УдалитьПробелы(ПроцентВладения)+"'
	|           ,'"+ИнтеграцияДЗО.ПолучитьIDВалюты(ВалютаТранзакции.КодСправочника)+"'
	|           ,'"+УдалитьПробелы(СуммаТранзакции)+"'
	|           ,'"+УдалитьПробелы(СуммаТранзакцииВТенге)+"'
	|           ,'"+НаимДокумента+"'
	|			,'"+guidДокумента+"')";
	Отказ = ИнтеграцияДЗО.ВыполнитьИнструкциюЗаписи(ТекстЗапросаЗаписи);
	
	Если Отказ Тогда
		УдалитьЗаписиSQL();
	КонецЕсли;
	
	
КонецПроцедуры 



Функция ПолучитьЗначения_ID_из_SQL_по_GUID()
	Массив = Новый Массив;
	Массив.Добавить("map_Organizations");
	Массив.Добавить("map_ConsolidationPerimeters");
	Массив.Добавить("map_Subholdings");
	
	Возврат ИнтеграцияДЗО.ПолучитьЗначения_ID_из_SQL_по_GUID(Массив);
	
КонецФункции
 
Функция ПреобразоватьОбъектВЗначение(ОбъектПреобразования, ЕслиNull = "") Экспорт
	
	Если ОбъектПреобразования = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	ТипЗначения = ТипЗнч(ОбъектПреобразования);
	Если ТипЗначения = Тип("Дата") Тогда
		Значение = Формат(ОбъектПреобразования, "ДФ = гггг-ММ-дд");
	ИначеЕсли ТипЗначения = Тип("Число") Тогда
		Значение = Формат(ОбъектПреобразования, "ЧГ=0;ЧН=0;ЧРД=.;ЧДЦ=2");
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		Если ОбъектПреобразования = Истина Тогда
			Значение = "1";
		Иначе
			Значение = "0";
		КонецЕсли;
	ИначеЕсли ОбъектПреобразования = NULL Тогда
		Значение = ЕслиNull;
	Иначе
		Значение = XMLСтрока(СокрЛП(ОбъектПреобразования));	
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция ПолучитьID(Ссылка, Таблица)  Экспорт
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Результат = "0";
		Возврат Результат; 
	КонецЕсли;	
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	Соединение  = Новый COMОбъект("ADODB.Connection");	
	Соединение.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + НастройкиОбмена.ИнстансSQL + ";" + "UID=" + НастройкиОбмена.ЛогинSQL + ";" + "PWD=" + НастройкиОбмена.ПарольSQL +";" + "DATABASE=" + НастройкиОбмена.БазаДанныхSQL + ";";
	Соединение.CommandTimeout	 = 600;
	Соединение.ConnectionTimeout = 180;
	Соединение.Open();
	
	Выборка     = Новый COMОбъект("ADODB.RecordSet");
	Выборка.CursorType = 3;
	Выборка.ActiveConnection = Соединение;
	Выборка.Open("Select id from " + Таблица + " where GUID = '" + XMLСтрока(Ссылка) + "'");
	Выборка.MoveFirst(); 
	Если Выборка.EOF() = 0 Тогда
		Результат = Выборка.Fields("id").Value;
	Иначе
		Результат = 0;
	КонецЕсли;
	
	Выборка.Close();
	Соединение.Close();  
	
	Возврат Результат; 
	
КонецФункции

Функция УдалитьПробелы(ТекЧисло)
	
	Возврат ИнтеграцияДЗО.УдалитьПробелы(ТекЧисло);	
	//
	//Если ЗначениеЗаполнено(ТекЧисло) Тогда
	//	Возврат Формат(ТекЧисло,"ЧГ=");
	//Иначе
	//	Возврат "0";
	//КонецЕсли;
	
КонецФункции // УдалитьПробелы¶()

&НаСервере
Функция ПолучитьIDСправочника(Ссылка,ИмяТаблицы,ДанныеSQL)
	
	Если ТипЗнч(Ссылка) = Тип("Строка") Тогда
		GUID = Ссылка;
	Иначе 
		Если ЗначениеЗаполнено(Ссылка)Тогда
			GUID = XMLСтрока(Ссылка); 
		Иначе 
			Возврат 0;
		КонецЕсли;
		
	КонецЕсли;
	
	ТЗ = ДанныеSQL[ИмяТаблицы];
	Результат = ДанныеSQL[ИмяТаблицы].Найти(GUID,"GUID");
	Если Результат <> Неопределено Тогда
		Возврат Результат.ID;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции // ПолучитьIDСправочника()

&НаСервере
Функция ПолучитьIDКонтрагента(ИИН)
	
	ID = ИнтеграцияДЗО.ПолучитьIDКонтрагентаПоИИН(ИИН);	
	Возврат ID; 
	
КонецФункции // ПолучитьIDКонтрагента()

Функция Соединение() Экспорт
	
	НастройкиОбмена = Константы.ОсновныеНастройкиОбмена.Получить();
	
	Попытка
		
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");
		Соединение  = Новый COMОбъект("ADODB.Connection");
		
		Соединение.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + НастройкиОбмена.ИнстансSQL + ";" + "UID=" + НастройкиОбмена.ЛогинSQL + ";" + "PWD=" + НастройкиОбмена.ПарольSQL +";" + "DATABASE=" + НастройкиОбмена.БазаДанныхSQL + ";";
		
		Соединение.CommandTimeout	 = 1800;
		Соединение.ConnectionTimeout = 1800;
		
		Соединение.Open();
		
		Команда.ActiveConnection = Соединение;
		
		
	Исключение
		
		ЗаписьЖурналаРегистрации("Выборка SQL", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат Команда;
	
КонецФункции

Процедура УдалитьЗаписиSQL()

	Результат = ПолучитьЗначения_ID_из_SQL_по_GUID();
	
	IDОрганизации =ПолучитьIDСправочника(Организация,"map_Organizations",Результат); 

	ТекстЗапросаУдаления = "DELETE  FROM map_ConsolidationData 
	|WHERE RecorderGUID = '"+Строка(Ссылка.УникальныйИдентификатор())+"'";
	Ответ = ИнтеграцияДЗО.ВыполнитьИнструкциюУдаления(ТекстЗапросаУдаления);
	
	ТекстЗапросаУдаления = "DELETE  FROM map_ConsolidationData_Movements 
	|WHERE RecorderGUID = '"+Строка(Ссылка.УникальныйИдентификатор())+"'";
	Ответ = ИнтеграцияДЗО.ВыполнитьИнструкциюУдаления(ТекстЗапросаУдаления);
	
КонецПроцедуры	


Процедура ОбработкаУдаленияПроведения(Отказ)
	УдалитьЗаписиSQL();
КонецПроцедуры
	


