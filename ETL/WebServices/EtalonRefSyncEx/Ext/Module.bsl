
Функция GetReference(Reference,Base)
	  НайденнаяОрг = Справочники.Организации.ПустаяСсылка();
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	БазыОрганизации.Ссылка КАК Ссылка,
		               |	БазыОрганизации.Организация КАК Организация
		               |ИЗ
		               |	Справочник.Базы.Организации КАК БазыОрганизации
		               |ГДЕ
		               |	БазыОрганизации.Ссылка.Наименование = &ИмяБазы";
		
	Запрос.УстановитьПараметр("ИмяБазы",Base);
	РезОрг = запрос.Выполнить().Выбрать();
	если РезОрг.Следующий() Тогда
		НайденнаяОрг = РезОрг.Организация;
	КонецЕсли;	
	
	
	если Reference = "ТоварыИУслуги" Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	References.Ссылка КАК Ссылка,
			               |	References.Код КАК Code,
			               |	References.Наименование КАК Name,
			               |	ЕСТЬNULL(References.Родитель.Код, """") КАК ParentCode,
			               |	ЕСТЬNULL(References.Родитель.Наименование, """") КАК ParentName,
			               |	References.Родитель КАК Parent,
			               |	References.ЭтоГруппа КАК IsParent
			               |ИЗ
			               |	Справочник.ТоварыИУслуги.БизнесНаправления КАК ТоварыИУслугиБизнесНаправления
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТоварыИУслуги КАК References
			               |		ПО ТоварыИУслугиБизнесНаправления.Ссылка = References.Ссылка
			               |ГДЕ
			               |	ТоварыИУслугиБизнесНаправления.БизнесНаправление = &БизнесНаправление
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Code,
			               |	IsParent ИЕРАРХИЯ";
			Запрос.УстановитьПараметр("БизнесНаправление",НайденнаяОрг.БизнесНаправление);
	Иначе	
		
		Мета = Метаданные.Справочники[Reference];
		Если Мета.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов Тогда	
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	References.Ссылка КАК Ссылка,
			|	References.Код КАК Code,
			|	References.Наименование КАК Name,
			|	ЕСТЬNULL(References.Родитель.Код, """") КАК ParentCode,
			|	ЕСТЬNULL(References.Родитель.Наименование, """") КАК ParentName,
			|	References.Родитель КАК Parent,
			|	References.ЭтоГруппа КАК IsParent
			|ИЗ
			|	Справочник."+Reference+" КАК References
			|
			|УПОРЯДОЧИТЬ ПО
			|	Code,
			|IsParent ИЕРАРХИЯ";
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	References.Ссылка КАК Ссылка,
			|	References.Код КАК Code,
			|	References.Наименование КАК Name,
			|	ЕСТЬNULL(References.Родитель.Код, """") КАК ParentCode,
			|	ЕСТЬNULL(References.Родитель.Наименование, """") КАК ParentName,
			|	References.Родитель КАК Parent,
			|	Ложь КАК IsParent
			|ИЗ
			|	Справочник."+Reference+" КАК References
			|
			|УПОРЯДОЧИТЬ ПО
			|	Code ИЕРАРХИЯ";
		КонецЕсли;	
	КонецЕсли;
	
	
	ArrayOfReference = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://EtalonRefSyncEx", "ArrayOfReference"));
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ТекСтрока 			= ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://EtalonRefSyncEx", "Reference"));
			ЗаполнитьЗначенияСвойств(ТекСтрока,ВыборкаДетальныеЗаписи);
			
			ТекСтрока.GUID			= Строка(ВыборкаДетальныеЗаписи.Ссылка.УникальныйИдентификатор());
			ТекСтрока.ParentGUID	= Строка(ВыборкаДетальныеЗаписи.Parent.УникальныйИдентификатор());
			
			ArrayOfReference.Reference.Добавить(ТекСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ArrayOfReference;
	
КонецФункции

Функция SetRequest(aDoc)
	НомеДок = aDoc.Number;
	НайденныйДокумент = Документы.ЗаявкаНаДобавлениеСправочника.НайтиПоНомеру(НомеДок);
	Если НайденныйДокумент = Документы.ЗаявкаНаДобавлениеСправочника.ПустаяСсылка() Тогда
		ТекДок = Документы.ЗаявкаНаДобавлениеСправочника.СоздатьДокумент();
	Иначе
		ТекДок = НайденныйДокумент.ПолучитьОбъект();
		
		Если ТекДок.Статус = "Завершена" или ТекДок.Статус = "Отказано" Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ТекДок.Статус 			= "Создана";
	ТекДок.Номер 			= aDoc.Number;
	ТекДок.Дата  			= aDoc.Date;
	ТекДок.ТипСправочника 	= aDoc.RefType;
	ТекДок.Наименование		= aDoc.RefName;
	
	Если ЗначениеЗаполнено(aDoc.RefParentCode) Тогда
		ТекДок.Группа		= Справочники[aDoc.RefType].НайтиПоКоду(aDoc.RefParentCode);
	КонецЕсли;
	
	ТекДок.Ответственный 	= aDoc.UserName;
	ТекДок.КонтактныйТелефон= aDoc.UserPhone;
	ТекДок.ЭлектронныйАдрес	= aDoc.UserEMail;
	
	Попытка 
		ТекДок.Записать();
		Отказ = Истина;
	Исключение
		Отказ = Ложь;
	КонецПопытки;
	
	Возврат Отказ;
	
КонецФункции

Функция GetRequestResult(Number)
	
	НайденныйДокумент = Документы.ЗаявкаНаДобавлениеСправочника.НайтиПоНомеру(Number);
	Если НайденныйДокумент = Документы.ЗаявкаНаДобавлениеСправочника.ПустаяСсылка() Тогда
		Рез = "Не найдена заявка";
	Иначе
		ТекДок = НайденныйДокумент.ПолучитьОбъект();
		//если ТекДок.Статус <> "Создана" тогда
		Рез  = ТекДок.Статус;
		//КонецЕсли;
	КонецЕсли;
	
	Возврат Рез;
	
КонецФункции

Функция CheckBase(Base)
	  НайденнаяОрг = Справочники.Организации.ПустаяСсылка();
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	БазыОрганизации.Ссылка КАК Ссылка,
		               |	БазыОрганизации.Организация КАК Организация
		               |ИЗ
		               |	Справочник.Базы.Организации КАК БазыОрганизации
		               |ГДЕ
		               |	БазыОрганизации.Ссылка.Наименование = &ИмяБазы";
		
	Запрос.УстановитьПараметр("ИмяБазы",Base);
	РезОрг = запрос.Выполнить().Выбрать();
	если РезОрг.Следующий() Тогда
		НайденнаяОрг = РезОрг.Организация;
	КонецЕсли;	
	
	если НайденнаяОрг = Справочники.Организации.ПустаяСсылка() тогда
		возврат "Не найдена орг-ция по имени базы "+Строка(Base);
	Иначе
		возврат "ОК";
	КонецЕсли;	
КонецФункции
