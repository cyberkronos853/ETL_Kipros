#Область ОбработчикиСобытийФормы
// Код процедур и функций
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Предопределенный Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораИменПолей(); 
	ЗаполнитьСписокРеквизитовЭталона();

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.ПоРегламенту И Объект.РегламентныеДействия.Количество() = 0 Тогда
		Сообщить("Не заполнены регламентные действия. Автоподбор эталонов выполняться не будет!");
	КонецЕсли;   
	
	Если Объект.ДляЗагрузкиДанных И СтрНайти(Объект.ТекстЗапроса, "&База") = 0 Тогда
		
		Сообщить("В способе подбора для загрузки данных должен обязательно присутствовать параметр ""База""");
		Отказ = Истина;
		
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Отбор = Новый Структура("ИмяПоля", "GUID");
	Если Объект.СтруктураПолей.НайтиСтроки(Отбор).Количество() = 0 Тогда
		Сообщить("В списке полей отсутствует обязательное поле ""GUID""");
		Отказ = Истина;
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
&НаКлиенте
Процедура СтруктураПолейПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораИменПолей();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЭталонаПриИзменении(Элемент)
	ЗаполнитьСписокРеквизитовЭталона();
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗапросаПриИзменении(Элемент)
	
	ЗаполнитьПараметрыИзЗапроса();
	
КонецПроцедуры
 
#КонецОбласти


#Область ОбработчикиКомандФормы
// Код процедур и функций

&НаКлиенте
Процедура ПолучитьБазовыйЗапрос(Команда)
	ПолучитьБазовыйЗапросНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтандартныеУсловия(Команда)
	// Вставить содержимое обработчика.  
	
	Если СтрНайти(ВРЕГ(Объект.ТекстЗапроса), "WHERE") = 0 Тогда
		Объект.ТекстЗапроса = Объект.ТекстЗапроса + Символы.ПС + 
		"WHERE Data.Base = &База AND Data.id > 0";
	Иначе
		 Объект.ТекстЗапроса = Объект.ТекстЗапроса + Символы.ПС + 
		"AND Data.Base = &База AND Data.id > 0";
	КонецЕсли;		

КонецПроцедуры


&НаКлиенте
Процедура ПолучитьПараметрыИзЗапроса(Команда)
	
	ЗаполнитьПараметрыИзЗапроса();	
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций

&НаСервере
Процедура ЗаполнитьСписокВыбораИменПолей()
	
    СписокВыбора = Объект.СтруктураПолей.Выгрузить(,"ИмяПоля").ВыгрузитьКолонку("ИмяПоля");
	Элементы.ЭталоныПоУмолчаниюИмяПоля.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);
    
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьСписокРеквизитовЭталона()
	
	Если ЗначениеЗаполнено(Объект.ТипЭталона) Тогда
		СписокРеквизитов = Объект.ТипЭталона.Реквизиты.ВыгрузитьКолонку("Реквизит");
		Элементы.СтруктураПолейРеквизитЭталона.СписокВыбора.ЗагрузитьЗначения(СписокРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоРегламентуПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимость()
	
	Если Объект.ПоРегламенту Тогда
		Элементы.ГруппаРегламентныеДействия.Видимость = Истина; 
	Иначе
		Элементы.ГруппаРегламентныеДействия.Видимость = Ложь; 		
	КонецЕсли;		
		
КонецПроцедуры

 &НаКлиенте
Процедура РегламентныеДействияДействиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Объект.РегламентныеДействия.НайтиСтроки(Новый Структура("Действие", ВыбранноеЗначение)).Количество() <> 0 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

 &НаСервере
Процедура ПолучитьБазовыйЗапросНаСервере()
	
	ПоляЗапроса = Новый Массив;
	Объект.ТекстЗапроса = РаботаСЭталонамиСервер.ЗапросКДаннымИсточника(Объект.ТаблицаИсточникДанных, ПоляЗапроса);	
	Объект.СтруктураПолей.Очистить();
	
	Для каждого Поле из ПоляЗапроса Цикл
		
		НовоеПоле = Объект.СтруктураПолей.Добавить();
		НовоеПоле.ИмяПоля = Поле;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыИзЗапроса()
	
	Запрос = Объект.ТекстЗапроса;
	МассивПараметров = Новый Массив;
	
	Поз = СтрНайти(Запрос, "&");
	Пока  Поз <> 0 Цикл
		
		Параметр = "";
		Запрос = Прав(Запрос, СтрДлина(Запрос) - Поз);
		Пока Лев(Запрос, 1) <> " " И Лев(Запрос, 1) <> Символы.ПС 
			И Лев(Запрос, 1) <> ")" И СтрДлина(Запрос) <> 0 Цикл
			Параметр = Параметр + Лев(Запрос, 1);
			Запрос = Прав(Запрос, СтрДлина(Запрос) - 1);
		КонецЦикла;
		Если Параметр <> "" Тогда
			МассивПараметров.Добавить(Параметр);
		КонецЕсли;
		Поз = СтрНайти(Запрос, "&");
	КонецЦикла;   
	
	Для каждого Параметр из МассивПараметров Цикл
		Отбор = Новый Структура("ИмяПараметра", Параметр);
		Если Объект.Параметры.НайтиСтроки(Отбор).Количество() = 0 Тогда
			НоваяСтрока = Объект.Параметры.Добавить();
			НоваяСтрока.ИмяПараметра = Параметр;
			НоваяСтрока.Представление = Параметр;		  
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


#КонецОбласти



