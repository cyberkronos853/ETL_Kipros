&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если ТекущийОбъект.БизнесНаправления.Количество() Тогда
		Для Каждого ТекСтрока Из  ТекущийОбъект.БизнесНаправления Цикл
			БизнесНаправления.Добавить(ТекСтрока.БизнесНаправление);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура БизнесНаправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИнтеграцияКлиент.ПолучитьСписокЭлементовСправочника("БизнесНаправления",,,БизнесНаправления);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбработатьЭлементыСправочника" Тогда
		Если ТипЗнч(Источник) = Тип("СписокЗначений")  Тогда
			//Если  ТипЗнч(Источник[0].Значение)= Тип("СправочникСсылка.БизнесНаправления") И Источник.Количество() Тогда
				БизнесНаправления = Источник;
				Объект.БизнесНаправления.Очистить();
				Объект.БизнесНаправленияСтрокой = "";
				Для Каждого БизнесНаправление Из БизнесНаправления Цикл
					БизнесНаправлениеТЧ = Объект.БизнесНаправления.Добавить();
					БизнесНаправлениеТЧ.БизнесНаправление = БизнесНаправление.Значение; 
					Объект.БизнесНаправленияСтрокой = Объект.БизнесНаправленияСтрокой + БизнесНаправление.Значение +";";
				КонецЦикла; 
			//Иначе
				//
				//Если  ТипЗнч(Источник[0].Значение)= Тип("СправочникСсылка.БизнесНаправления") Тогда   
				//	
				//БизнесНаправления.Очистить();
				//Объект.БизнесНаправления.Очистить();
				//Объект.БизнесНаправленияСтрокой = "";
				//	
				//КонецЕсли;
				//
				Модифицированность = Истина;
			//КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Родитель) Тогда
	    ЗаполнитьБизнесНаправленияРодителя(ТекущийОбъект.Родитель,ТекущийОбъект);  
	КонецЕсли;
	
	
КонецПроцедуры  
	   

&НаСервере
Процедура ЗаполнитьБизнесНаправленияРодителя(Родитель,ТекущийОбъект)
	
	
	ЕстьИзменения = Ложь;
	РодительОбъект = Родитель.ПолучитьОбъект();
	Для Каждого СтрокаТЧ Из ТекущийОбъект.БизнесНаправления Цикл  
		
		Если НЕ  РодительОбъект.БизнесНаправления.НайтиСтроки(Новый Структура("БизнесНаправление",СтрокаТЧ.БизнесНаправление)).Количество() Тогда
			   СтрокаТЧРодителя = РодительОбъект.БизнесНаправления.Добавить(); 
			   СтрокаТЧРодителя.БизнесНаправление = СтрокаТЧ.БизнесНаправление;
			   РодительОбъект.БизнесНаправленияСтрокой = РодительОбъект.БизнесНаправленияСтрокой + Строка(СтрокаТЧ.БизнесНаправление) + ";"; 
			   ЕстьИзменения = Истина;
		КонецЕсли;
		
	КонецЦикла; 
	
	Если ЕстьИзменения Тогда
		
		РодительОбъект.Записать(); 
		Если ЗначениеЗаполнено(РодительОбъект.Родитель) Тогда
			ЗаполнитьБизнесНаправленияРодителя(РодительОбъект.Родитель,РодительОбъект);
		КонецЕсли;
	КонецЕсли;
	
	

КонецПроцедуры // ЗаполнитьБизнесНаправленияРодителя()
	   


&НаСервере
Процедура БизнесНаправленияОчисткаНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура БизнесНаправленияОчистка(Элемент, СтандартнаяОбработка)
	Объект.БизнесНаправления.Очистить();
	Объект.БизнесНаправленияСтрокой = "";
	Модифицированность = Истина;
КонецПроцедуры

