
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
// Код процедур и функций   
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	ОграничитьТипыЭталонов();
	
КонецПроцедуры   

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокТипов
// Код процедур и функций 

&НаКлиенте
Процедура СписокТиповПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ТД = Элемент.ТекущиеДанные;
		СсылкаНаВладельца = УстановитьВладельцаТЧ(ТД);
		
		Если ТекущийВладелец <> СсылкаНаВладельца Тогда
			
			ТекущийВладелец = СсылкаНаВладельца;
			ОбработатьСписок(СсылкаНаВладельца);
		
		
		КонецЕсли;
		
		КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокТипов

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Владелец", Элементы.СписокТипов.ТекущиеДанные.Ссылка);
	
	
	ОткрытьФорму("Справочник.ЗначенияЭталонов.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма,,,,); 
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций  
&НаСервереБезКонтекста
Функция УстановитьВладельцаТЧ(Данные)
	Возврат Данные.Ссылка;
КонецФункции

&НаСервере
Функция ПолучитьЗапрос(Владелец, СписокПолей)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТипыЭталоновРеквизиты.Реквизит КАК Реквизит,
	|	ТипыЭталоновРеквизиты.ИмяРеквизита КАК ИмяРеквизита,
	|	ТипыЭталоновРеквизиты.Синоним КАК Синоним
	|ИЗ
	|	ПланВидовХарактеристик.ТипыЭталонов.Реквизиты КАК ТипыЭталоновРеквизиты
	|ГДЕ
	|	ТипыЭталоновРеквизиты.Отображать
	|	И ТипыЭталоновРеквизиты.Реквизит <> ТипыЭталоновРеквизиты.Ссылка.ОсновноеПредставление
	|	И ТипыЭталоновРеквизиты.Ссылка.Ссылка = &ТипЭталона";
	
	Запрос.УстановитьПараметр("ТипЭталона", Владелец);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивПолейДляОтображения = Новый Массив;  
	ТекстПолей  = "";
	ТекстСвязи = "";       
	Счетчик = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи 
		МассивПолейДляОтображения.Добавить(ВыборкаДетальныеЗаписи.Реквизит);
		ТекстПолей = ТекстПолей + ",
		|ЗначенияЭталоновРеквизиты" + Строка(Счетчик) + ".Значение КАК ДопРеквизит" + Строка(Счетчик) ;
		ТекстСвязи = ТекстСвязи + "	
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияЭталонов.Реквизиты КАК ЗначенияЭталоновРеквизиты" + Строка(Счетчик) + "
		|ПО (ЗначенияЭталоновРеквизиты" + Строка(Счетчик) + ".Ссылка = СправочникЗначенияЭталонов.Ссылка)
		|	И (ЗначенияЭталоновРеквизиты" + Строка(Счетчик) + ".Реквизит = &ДопРеквизит" + Строка(Счетчик) + ")";
		
		СтруктураПоля = Новый Структура;
		СтруктураПоля.Вставить("Имя", "ДопРеквизит" + Строка(Счетчик));
		СтруктураПоля.Вставить("Значение", ВыборкаДетальныеЗаписи.Реквизит); 
		СтруктураПоля.Вставить("Синоним", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Синоним), ВыборкаДетальныеЗаписи.Синоним, ВыборкаДетальныеЗаписи.ИмяРеквизита));
		СписокПолей.Добавить(СтруктураПоля);  
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|СправочникЗначенияЭталонов.Ссылка КАК Ссылка,
	|СправочникЗначенияЭталонов.ПометкаУдаления КАК ПометкаУдаления,
	|СправочникЗначенияЭталонов.Владелец КАК Владелец,
	|СправочникЗначенияЭталонов.Родитель КАК Родитель,
	|СправочникЗначенияЭталонов.Предопределенный КАК Предопределенный,
	|СправочникЗначенияЭталонов.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|СправочникЗначенияЭталонов.Наименование КАК Наименование,
	|СправочникЗначенияЭталонов.ЭталонПоУмолчанию КАК ПоУмолчанию" + ТекстПолей + "
	|ИЗ
	|Справочник.ЗначенияЭталонов КАК СправочникЗначенияЭталонов" + ТекстСвязи;
	
	
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьЗапрос()

&НаСервере
Процедура ОбработатьСписок(Владелец)
	
	СписокПолей = Новый Массив;
	ТекстЗапроса = ПолучитьЗапрос(Владелец, СписокПолей);
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ТекстЗапроса = ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список,	СвойстваСписка);
	
	
	ЭлементыСписка = Элементы.Список.ПодчиненныеЭлементы;
	УдаляемыеЭлементы = Новый Массив;
	
	Для Каждого Элемент Из ЭлементыСписка Цикл
		Если СтрНачинаетсяС(Элемент.Имя, "ДопРеквизит") Тогда
			УдаляемыеЭлементы.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;
	
	// Добавляем новые поля из массива структур
	
	Для каждого Параметр Из СписокПолей Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, Параметр.Имя, Параметр.Значение, Истина); 
		
		// Проверяем, что имя реквизита корректное
		Если Не ПустаяСтрока(Параметр.Имя) Тогда
			// Создаем новое поле формы
			НовоеПоле = Элементы.Добавить(Параметр.Имя, Тип("ПолеФормы"), Элементы.Список);
			НовоеПоле.Вид = ВидПоляФормы.ПолеВвода;
			НовоеПоле.ПутьКДанным = "Список." + Параметр.Имя;
			НовоеПоле.Заголовок = Параметр.Синоним;
		КонецЕсли;
		
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", Владелец, ,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный, );
	
КонецПроцедуры

&НаСервере
Процедура ОграничитьТипыЭталонов();  
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТипыЭталонов.Ссылка КАК Ссылка,
		|	ТипыЭталонов.ТипЗначения КАК ТипЗначения
		|ИЗ
		|	ПланВидовХарактеристик.ТипыЭталонов КАК ТипыЭталонов";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивТипов = Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
		Если  ВыборкаДетальныеЗаписи.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияЭталонов")) Тогда
			МассивТипов.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокТипов, "Ссылка", МассивТипов,ВидСравненияКомпоновкиДанных.ВСписке, ,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный, );

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецПроцедуры
#КонецОбласти
