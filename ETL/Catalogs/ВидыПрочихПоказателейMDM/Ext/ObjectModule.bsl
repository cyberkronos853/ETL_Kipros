Перем РежимЗаписиЭкстренный Экспорт; 
 
 
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	СтрокаКолонкиПоказателейКодПоказателя = КолонкиПоказателей.Добавить();
	СтрокаКолонкиПоказателейКодПоказателя.ИмяКолонки = "КодПоказателя";
	СтрокаКолонкиПоказателейПоказатель = КолонкиПоказателей.Добавить();
	СтрокаКолонкиПоказателейПоказатель.ИмяКолонки = "Показатель";
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ) 
	
	Если РежимЗаписиЭкстренный Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрОрган  Из Организации Цикл
		Результат =ИнтеграцияДЗО.GetTypesOfOtherIndicatorsУпр(СтрОрган.Организация.БИН,ССылка);
		
		Для каждого стр из Результат.TypesOfOtherIndicators Цикл 
			НаборПоказателя = РегистрыСведений.ДополнительныеСведенияПрочихПоказателей.СоздатьНаборЗаписей();
			НаборПоказателя.Отбор.ВидПоказателя.Установить(Ссылка); 
			НаборПоказателя.Отбор.Организация.Установить(СтрОрган.Организация);
			НаборПоказателя.Прочитать();
			НаборПоказателя.Очистить();
			НаборПоказателя.Записать(); 
			
			Если стр.ArrayIndicatorMDM.IndicatorMDM.Количество() Тогда 
				
				Для Каждого IndicatorMDM Из стр.ArrayIndicatorMDM.IndicatorMDM Цикл
					
					Показатель = Справочники.INDПрочиеПоказатели.НайтиПоРеквизиту("КодСправочника",IndicatorMDM.Code);
					Если IndicatorMDM.BudgetItem.Количество() Тогда 
						Для КАждого СтрокаБюджета Из IndicatorMDM.BudgetItem Цикл
							СтатьяБюджета = Справочники.СтатьиБюджетов.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаБюджета.BudgetItem));
							Набор = РегистрыСведений.ДополнительныеСведенияПрочихПоказателей.СоздатьНаборЗаписей();
							Набор.Отбор.Период.Установить(Период);
							Набор.Отбор.ВидПоказателя.Установить(Ссылка);
							Набор.Отбор.Показатель.Установить(Показатель); 
							Набор.Отбор.Организация.Установить(СтрОрган.Организация);
							Набор.Отбор.Статьи.Установить(СтатьяБюджета); 
							Набор.Прочитать();
							Набор.Очистить(); 
							Запись = Набор.Добавить();
							Запись.Период   = Период;  
							Запись.ВидПоказателя   = Ссылка;
							Запись.Показатель   = Показатель; 
							Запись.Организация   = СтрОрган.Организация; 
							Запись.Статьи   = СтатьяБюджета;
							Запись.ТипСтатьи   = "Статья бюджета";
							Запись.СписокСчетовСтатейБюджета   = СтрокаБюджета.BudgetAccaunts;
							Набор.Записать(Истина);
						КонецЦикла;
					КонецЕсли;
					
				Если IndicatorMDM.TypeMovement.Количество() Тогда 
					Для КАждого ВидДвижения Из IndicatorMDM.TypeMovement Цикл 
						
						СпрВидДвижения = Справочники.ВидыДвижения.ПолучитьСсылку(Новый УникальныйИдентификатор(ВидДвижения));
						Набор = РегистрыСведений.ДополнительныеСведенияПрочихПоказателей.СоздатьНаборЗаписей();
						Набор.Отбор.Период.Установить(Период);
						Набор.Отбор.ВидПоказателя.Установить(Ссылка);
						Набор.Отбор.Показатель.Установить(Показатель);
						Набор.Отбор.Статьи.Установить(СпрВидДвижения); 
						Набор.Отбор.Организация.Установить(СтрОрган.Организация);
						Набор.Прочитать();
						Набор.Очистить(); 
						Запись = Набор.Добавить();
						Запись.Период   = Период;  
						Запись.ВидПоказателя   = Ссылка;
						Запись.Показатель   = Показатель; 
						Запись.Организация   = СтрОрган.Организация; 
						Запись.Статьи   = СпрВидДвижения;
						Запись.ТипСтатьи   = "Вид движения";
						Набор.Записать(Истина);
					КонецЦикла;
					
				КонецЕсли; 
				
				
				Если IndicatorMDM.Account.Количество() Тогда 
					Для КАждого Счет Из IndicatorMDM.Account Цикл  
						авСчет = Справочники.ПланСчетов.ПолучитьСсылку(Новый УникальныйИдентификатор(Счет.AccauntGUID));
						Если ЗначениеЗаполнено(авСчет) Тогда
							Набор = РегистрыСведений.ДополнительныеСведенияПрочихПоказателей.СоздатьНаборЗаписей();
							Набор.Отбор.Период.Установить(Период);
							Набор.Отбор.ВидПоказателя.Установить(Ссылка);
							Набор.Отбор.Показатель.Установить(Показатель);
							Набор.Отбор.Статьи.Установить(авСчет);
						Набор.Отбор.Организация.Установить(СтрОрган.Организация);
							Набор.Прочитать();
							Набор.Очистить(); 
							Запись = Набор.Добавить();
							Запись.Период   = Период;  
							Запись.ВидПоказателя   = Ссылка;
							Запись.Показатель   = Показатель;
							Запись.Статьи   = авСчет; 
							Запись.Организация   = СтрОрган.Организация; 
							Запись.ТипСтатьи        = "Счет";
							Запись.ТипДвиженияСчета   = Счет.AccauntTypeMovement;
							Набор.Записать(Истина); 
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
					
					
					
				КонецЦикла;
			КонецЕсли;
			
			
		КонецЦикла;
		
		
		
		
	КонецЦикла;
КонецПроцедуры

РежимЗаписиЭкстренный = Ложь;