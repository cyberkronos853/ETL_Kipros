 
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если ТекущийОбъект.Организации.Количество() Тогда
		Для Каждого ТекСтрока Из  ТекущийОбъект.Организации Цикл
			ОрганизацииСписок.Добавить(ТекСтрока.Организация);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаРеквизиты = Метаданные.Документы.ПрочиеПоказателиMDM.ТабличныеЧасти.ПрочиеПоказатели.Реквизиты;
	
	Для Каждого СтрокаМета Из МетаРеквизиты Цикл 
		
		ЭлементСписка = СписокКолонокТабличнойЧасти.Добавить(СтрокаМета.Имя,СтрокаМета.Синоним);
		Элементы.КолонкиПоказателейИмяКолонки.СписокВыбора.Добавить(СтрокаМета.Имя,СтрокаМета.Синоним);
		
	КонецЦикла;
	
	РедактироватьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокиПоказателейСтрокаПоказателяПриИзменении(Элемент)
	
	ТекущийДанные = Элементы.СтрокиПоказателей.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущийДанные.Показатель) Тогда
		ТекущийДанные.КодПоказателя = ПолучитьКодПоказателя(ТекущийДанные.Показатель);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКодПоказателя(Показатель)
	
	Возврат Показатель.Код;
	
КонецФункции // ПолучитьКодПоказателя()

&НаСервере
Процедура ЗаполнитьПодчиненныеНаСервере(Показатель)
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	INDПрочиеПоказатели.Ссылка КАК Показатель,
	|	INDПрочиеПоказатели.Код КАК КодПоказателя
	|ИЗ
	|	Справочник.INDПрочиеПоказатели КАК INDПрочиеПоказатели
	|ГДЕ
	|	INDПрочиеПоказатели.Ссылка В ИЕРАРХИИ(&Показатель)";
	
	Запрос.УстановитьПараметр("Показатель", Показатель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НайденныеСтрока = Объект.СтрокиПоказателей.НайтиСтроки(Новый Структура("Показатель",ВыборкаДетальныеЗаписи.Показатель));
		Если НайденныеСтрока.Количество() Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Объект.СтрокиПоказателей.Добавить(), ВыборкаДетальныеЗаписи);
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодчиненные(Команда)
	
	
	//ТекущийДанные = Элементы.СтрокиПоказателей.ТекущиеДанные;
	
	
	ТекущийДанные = Элементы.ДеревоПоказателей.ТекущиеДанные;
	
	
	Если ЗначениеЗаполнено(ТекущийДанные.Показатель) Тогда
		ЗаполнитьПодчиненныеНаСервере(ТекущийДанные.Показатель);
	КонецЕсли; 
	
	РедактироватьДерево();
	РазвернутьДерево(ДеревоПоказателей.ПолучитьЭлементы());
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиПоказателейИмяКолонкиПриИзменении(Элемент)
	
	ТекДанные = Элементы.КолонкиПоказателей.ТекущиеДанные;
	ПредставлениеКолонки = СписокКолонокТабличнойЧасти.НайтиПоЗначению(ТекДанные.ИмяКолонки);
	Если ПредставлениеКолонки <> Неопределено И ЗначениеЗаполнено(ПредставлениеКолонки.Представление) Тогда
		ТекДанные.СинонимКолонки = ПредставлениеКолонки.Представление;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура РедактироватьДерево()
	
	Дерево = РеквизитФормыВЗначение("ДеревоПоказателей");
	Дерево.Строки.Очистить();
	МассивПоказателей = Объект.СтрокиПоказателей.Выгрузить(,"Показатель");
	МассивПоказателей.Свернуть("Показатель");
	
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	INDПрочиеПоказатели.Ссылка КАК Показатель,
	               |	INDПрочиеПоказатели.Родитель КАК Родитель,
	               |	INDПрочиеПоказатели.Код КАК КодПоказателя
	               |ИЗ
	               |	Справочник.INDПрочиеПоказатели КАК INDПрочиеПоказатели
	               |ГДЕ
	               |	INDПрочиеПоказатели.Ссылка В(&МассивПоказателей)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	INDПрочиеПоказатели.Код ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("МассивПоказателей", МассивПоказателей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НайденныеСтроки = Объект.СтрокиПоказателей.НайтиСтроки(Новый Структура("Показатель",Выборка.Родитель));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаДерева = Дерево.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДерева,Выборка);
		Иначе
			Пока СтрокаДерева.Показатель<>Выборка.Родитель Цикл
				СтрокаДерева=СтрокаДерева.Родитель;
			КонецЦикла;
			СтрокаДерева				= СтрокаДерева.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДерева,Выборка);
		КонецЕсли;
		
		//ЗаполнитьСтрокуВДерево(СтрокаДерева,Выборка.КодПоказателя,ТЗ);
		
	КонецЦикла;	 
	
	
	
	
	
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПоказателей");
	
	
КонецПроцедуры // ОбновитьДерево()

&НаКлиенте
Процедура РазвернутьДерево(КоллекцияЭлементовДерева)
	
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл 
		
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Элементы.ДеревоПоказателей.Развернуть(ИдентификаторСтроки);
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы(); 
		Если ПодчиненныеСтроки.Количество() Тогда
			 РазвернутьДерево(ПодчиненныеСтроки);
		КонецЕсли;
		
		
	КонецЦикла; 	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПоказателейПриИзменении(Элемент)
	РазвернутьДерево(ДеревоПоказателей.ПолучитьЭлементы());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РазвернутьДерево(ДеревоПоказателей.ПолучитьЭлементы());
КонецПроцедуры


&НаКлиенте
Процедура ОрганизацииСписокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИнтеграцияКлиент.ПолучитьСписокЭлементовСправочника("Организации",,,ОрганизацииСписок);
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбработатьЭлементыСправочника" Тогда
		Если ТипЗнч(Источник) = Тип("СписокЗначений") И Источник.Количество() Тогда
			Если  ТипЗнч(Источник[0].Значение)= Тип("СправочникСсылка.Организации") Тогда
				ОрганизацииСписок = Источник;
				Объект.Организации.Очистить();
				Для Каждого Организация Из ОрганизацииСписок Цикл
					ОрганизацииТЧ = Объект.Организации.Добавить();
					ОрганизацииТЧ.Организация = Организация.Значение;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокиПоказателейСвязиПоказателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОжь;
	ТекДанные = Элементы.СтрокиПоказателей.ТекущиеДанные;
	Показатель = ТекДанные.Показатель;
	Отбор = Новый Структура("Отбор",Новый Структура("Владелец",Показатель));
	ОткрытьФорму("Справочник.СвязиПрочихПоказателей.ФормаВыбора",Отбор,Элемент); 
	
КонецПроцедуры



