#Область ОбработчикиСобытийФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.ИмяТаблицыSQL) Тогда 
		
		Объект.ИмяТаблицыSQL = ОбщегоНазначенияКлиентСервер.Транслит(СтрЗаменить(Объект.Наименование, " ", "")) + "_M";
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ОсновноеПредставление.СписокВыбора.ЗагрузитьЗначения(Объект.Реквизиты.Выгрузить(,"Реквизит").ВыгрузитьКолонку("Реквизит"));
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ОсновноеПредставление) И ТекущийОбъект.Реквизиты.Количество() <> 0 Тогда
		Сообщить("Не заполнено основное представление");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ОсновноеПредставление) И ТекущийОбъект.Реквизиты.Найти(Объект.ОсновноеПредставление, "Реквизит") = Неопределено Тогда
		
		Сообщить("Основное представление отсутствует среди реквизитов");

		Отказ = Истина;  
	КонецЕсли;       	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЕстьОшибки = Ложь;
	
	Для каждого Реквизит из Объект.Реквизиты Цикл
		Если СтрНайти(Реквизит.ИмяРеквизита, " ") <> 0 Тогда
			ЕстьОшибки = Истина;
			прервать;
		КонецЕсли; 
		Если СтрНайти(Реквизит.ИмяПоляSQL, " ") <> 0 Тогда   
			ЕстьОшибки = Истина;
			прервать;
		КонецЕсли;

	КонецЦикла;                 
	
	Если ЕстьОШибки Тогда
		Отказ = Истина;
		Сообщить("Некорректно заполнены имена реквизитов. Убедитесь в отсутствии пробелов в имени реквизита и имени поля SQL");
	КонецЕсли;
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквииты
// Код процедур и функций 

&НаКлиенте
Процедура РеквизитыИмяРеквизитаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Реквизиты.ТекущиеДанные;
	
	Если СтрНайти(ТекущаяСтрока.ИмяРеквизита, " ") <> 0 Тогда
		ТекущаяСтрока.ИмяРеквизита = ОбщегоНазначенияКлиентСервер.CamelCase(ТекущаяСТрока.ИмяРеквизита);
	КонецЕсли;
	 
	
	Если НЕ значениеЗаполнено(ТекущаяСтрока.ИмяПоляSQL) Тогда
		ТекущаяСтрока.ИмяПоляSQL = ОбщегоНазначенияКлиентСервер.Транслит(ТекущаяСтрока.ИмяРеквизита);
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыРеквизитПриИзменении(Элемент)
	
	
	ТекущаяСтрока = Элементы.Реквизиты.ТекущиеДанные;
	СтруктураИмен = РеквизитыРеквизитПриИзмененииНаСервере(ТекущаяСтрока.Реквизит);   
	
	Если не значениеЗаполнено(ТекущаяСтрока.ИмяРеквизита) Тогда
		ТекущаяСтрока.ИмяРеквизита = СтруктураИмен.ИмяРеквизита;
	КонецЕсли;
	
	Если не значениеЗаполнено(ТекущаяСтрока.ИмяПоляSQL) Тогда
		ТекущаяСтрока.ИмяПоляSQL = СтруктураИмен.ИмяПоляSQL;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура РеквизитыПриИзменении(Элемент)
	
	РеквизитыПриИзмененииНаСервере();       
	
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций

&НаСервере
Функция РеквизитыРеквизитПриИзмененииНаСервере(Реквизит)

	СтруктураИмен = Новый Структура;
	
	СтруктураИмен.Вставить("ИмяРеквизита", ОбщегоНазначенияКлиентСервер.CamelCase(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизит, "Наименование"))); 	
	СтруктураИмен.Вставить("ИмяПоляSQL",  ОбщегоНазначенияКлиентСервер.Транслит(СтруктураИмен.ИмяРеквизита)); 	
	
	 возврат СтруктураИмен;
	
КонецФункции

&НаСервере
Процедура РеквизитыПриИзмененииНаСервере()
	
	Элементы.ОсновноеПредставление.СписокВыбора.ЗагрузитьЗначения(Объект.Реквизиты.Выгрузить(,"Реквизит").ВыгрузитьКолонку("Реквизит"));
	
КонецПроцедуры



#КонецОбласти






