
#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьНаСервере();
	Закрыть();
КонецПроцедуры

 &НаКлиенте
Процедура Записать(Команда)
   //++ 14.07.2025 Кибернетика Корыткин Добавлена проверка на заполнение поля "База"
	Если ЗначениеЗаполнено(База) Тогда
		ЗаписатьНаСервере();
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнена База", , "База");
	КонецЕсли;
	//-- 14.07.2025
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор, Отбор",
		Ложь, Истина, Новый Структура("Выгружать", Истина));
	ОткрытьФорму("Справочник.ОбъектыКВыгрузке.ФормаВыбора", ПараметрыФормы, ЭтотОбъект.Элементы.СписокОбъектов
		,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Для каждого Значение Из ВыбранноеЗначение Цикл
		нСтр = СписокОбъектов.Добавить();
		нСтр.ОбъектСверки = Значение;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
&НаСервере
Процедура ЗаписатьНаСервере()
	
	НЗ = РегистрыСведений.ЗапросыНаСверку.СоздатьНаборЗаписей();
	НЗ.Прочитать();
	
	Для каждого Стр Из СписокОбъектов Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.ОбъектСверки) Тогда
			Продолжить;		
		КонецЕсли;
		
		Запись = НЗ.Добавить(); 
		Запись.Период = ТекущаяДатаСеанса();
		Запись.GUID = Строка(Новый УникальныйИдентификатор());
		Запись.База = База;                   
		Запись.Организация = Организация;
		Запись.ОбъектСверки = Стр.ОбъектСверки;
		Запись.Статус = Перечисления.СтатусыСверкиДанных.ОжидаетОбработки;
		Запись.ДатаНачала = ДатаНачала;
		Запись.ДатаОкончания = ДатаОкончания;
		Запись.ВыполнитьПодробнуюСверку = ВыполнитьПодробнуюСверку;
		Запись.РегистрироватьИзменения = РегистрироватьИзменения;
		Запись.УдалитьИзSQL = УдалитьИзSQL;  
		Запись.ДатаСтатуса = ТекущаяДатаСеанса();
		
	КонецЦикла;
	
	Попытка
		НЗ.Записать();	
	Исключение
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	База = УправлениеБазамиСервер.ПолучитьБазуПоОрганизации(ЭтаФорма.Организация);
КонецПроцедуры





#КонецОбласти



